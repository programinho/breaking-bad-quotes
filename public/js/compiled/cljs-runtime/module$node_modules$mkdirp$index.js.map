{
"version":3,
"file":"module$node_modules$mkdirp$index.js",
"lineCount":3,
"mappings":"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",
"sources":["node_modules/mkdirp/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mkdirp$index\"] = function(global,require,module,exports) {\nvar process = require('process');\nvar path = require('path');\nvar fs = require('fs');\nvar _0777 = parseInt('0777', 8);\n\nmodule.exports = mkdirP.mkdirp = mkdirP.mkdirP = mkdirP;\n\nfunction mkdirP (p, opts, f, made) {\n    if (typeof opts === 'function') {\n        f = opts;\n        opts = {};\n    }\n    else if (!opts || typeof opts !== 'object') {\n        opts = { mode: opts };\n    }\n    \n    var mode = opts.mode;\n    var xfs = opts.fs || fs;\n    \n    if (mode === undefined) {\n        mode = _0777 & (~process.umask());\n    }\n    if (!made) made = null;\n    \n    var cb = f || function () {};\n    p = path.resolve(p);\n    \n    xfs.mkdir(p, mode, function (er) {\n        if (!er) {\n            made = made || p;\n            return cb(null, made);\n        }\n        switch (er.code) {\n            case 'ENOENT':\n                mkdirP(path.dirname(p), opts, function (er, made) {\n                    if (er) cb(er, made);\n                    else mkdirP(p, opts, cb, made);\n                });\n                break;\n\n            // In the case of any other error, just see if there's a dir\n            // there already.  If so, then hooray!  If not, then something\n            // is borked.\n            default:\n                xfs.stat(p, function (er2, stat) {\n                    // if the stat fails, then that's super weird.\n                    // let the original error be the failure reason.\n                    if (er2 || !stat.isDirectory()) cb(er, made)\n                    else cb(null, made);\n                });\n                break;\n        }\n    });\n}\n\nmkdirP.sync = function sync (p, opts, made) {\n    if (!opts || typeof opts !== 'object') {\n        opts = { mode: opts };\n    }\n    \n    var mode = opts.mode;\n    var xfs = opts.fs || fs;\n    \n    if (mode === undefined) {\n        mode = _0777 & (~process.umask());\n    }\n    if (!made) made = null;\n\n    p = path.resolve(p);\n\n    try {\n        xfs.mkdirSync(p, mode);\n        made = made || p;\n    }\n    catch (err0) {\n        switch (err0.code) {\n            case 'ENOENT' :\n                made = sync(path.dirname(p), opts, made);\n                sync(p, opts, made);\n                break;\n\n            // In the case of any other error, just see if there's a dir\n            // there already.  If so, then hooray!  If not, then something\n            // is borked.\n            default:\n                var stat;\n                try {\n                    stat = xfs.statSync(p);\n                }\n                catch (err1) {\n                    throw err0;\n                }\n                if (!stat.isDirectory()) throw err0;\n                break;\n        }\n    }\n\n    return made;\n};\n\n};"],
"names":["shadow$provide","global","require","module","exports","mkdirP","p","opts","f","made","mode","xfs","fs","undefined","_0777","process","umask","cb","path","resolve","mkdir","er","code","dirname","stat","er2","isDirectory","mkdirp","sync","mkdirP.sync","mkdirSync","err0","statSync","err1"]
}
