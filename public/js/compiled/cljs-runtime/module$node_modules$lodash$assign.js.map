{
"version":3,
"file":"module$node_modules$lodash$assign.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,kCAAA,CAAsD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAAA,IAC1FC,YAAcH,OAAA,CAAQ,yCAAR,CAD4E,CAE1FI,WAAaJ,OAAA,CAAQ,wCAAR,CACbK,OAAAA,CAAiBL,OAAA,CAAQ,4CAAR,CAHyE,KAI1FM,YAAcN,OAAA,CAAQ,wCAAR,CAJ4E,CAK1FO,YAAcP,OAAA,CAAQ,yCAAR,CAL4E,CAM1FQ,KAAOR,OAAA,CAAQ,iCAAR,CANmF,CAY1FS,eAHcC,MAAAC,UAGGF,eAkCjBG;OAAAA,CAASP,MAAA,CAAe,QAAQ,CAACQ,MAAD,CAASC,MAAT,CAAiB,CACnD,GAAIP,WAAA,CAAYO,MAAZ,CAAJ,EAA2BR,WAAA,CAAYQ,MAAZ,CAA3B,CACEV,UAAA,CAAWU,MAAX,CAAmBN,IAAA,CAAKM,MAAL,CAAnB,CAAiCD,MAAjC,CADF,KAIA,KAAKE,IAAIA,GAAT,GAAgBD,OAAhB,CACML,cAAAO,KAAA,CAAoBF,MAApB,CAA4BC,GAA5B,CAAJ,EACEZ,WAAA,CAAYU,MAAZ,CAAoBE,GAApB,CAAyBD,MAAA,CAAOC,GAAP,CAAzB,CAP+C,CAAxC,CAYbd,OAAAC,QAAA,CAAiBU,OA1D6E;",
"sources":["node_modules/lodash/assign.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$assign\"] = function(global,require,module,exports) {\nvar assignValue = require('./_assignValue'),\n    copyObject = require('./_copyObject'),\n    createAssigner = require('./_createAssigner'),\n    isArrayLike = require('./isArrayLike'),\n    isPrototype = require('./_isPrototype'),\n    keys = require('./keys');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns own enumerable string keyed properties of source objects to the\n * destination object. Source objects are applied from left to right.\n * Subsequent sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object` and is loosely based on\n * [`Object.assign`](https://mdn.io/Object/assign).\n *\n * @static\n * @memberOf _\n * @since 0.10.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.assignIn\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * function Bar() {\n *   this.c = 3;\n * }\n *\n * Foo.prototype.b = 2;\n * Bar.prototype.d = 4;\n *\n * _.assign({ 'a': 0 }, new Foo, new Bar);\n * // => { 'a': 1, 'c': 3 }\n */\nvar assign = createAssigner(function(object, source) {\n  if (isPrototype(source) || isArrayLike(source)) {\n    copyObject(source, keys(source), object);\n    return;\n  }\n  for (var key in source) {\n    if (hasOwnProperty.call(source, key)) {\n      assignValue(object, key, source[key]);\n    }\n  }\n});\n\nmodule.exports = assign;\n\n};"],
"names":["shadow$provide","global","require","module","exports","assignValue","copyObject","createAssigner","isArrayLike","isPrototype","keys","hasOwnProperty","Object","prototype","assign","object","source","key","call"]
}
