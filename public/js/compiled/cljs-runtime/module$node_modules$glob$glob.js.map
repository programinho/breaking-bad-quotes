{
"version":3,
"file":"module$node_modules$glob$glob.js",
"lineCount":22,
"mappings":"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",
"sources":["node_modules/glob/glob.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$glob$glob\"] = function(global,require,module,exports) {\nvar process = require('process');\n// Approach:\n//\n// 1. Get the minimatch set\n// 2. For each pattern in the set, PROCESS(pattern, false)\n// 3. Store matches per-set, then uniq them\n//\n// PROCESS(pattern, inGlobStar)\n// Get the first [n] items from pattern that are all strings\n// Join these together.  This is PREFIX.\n//   If there is no more remaining, then stat(PREFIX) and\n//   add to matches if it succeeds.  END.\n//\n// If inGlobStar and PREFIX is symlink and points to dir\n//   set ENTRIES = []\n// else readdir(PREFIX) as ENTRIES\n//   If fail, END\n//\n// with ENTRIES\n//   If pattern[n] is GLOBSTAR\n//     // handle the case where the globstar match is empty\n//     // by pruning it out, and testing the resulting pattern\n//     PROCESS(pattern[0..n] + pattern[n+1 .. $], false)\n//     // handle other cases.\n//     for ENTRY in ENTRIES (not dotfiles)\n//       // attach globstar + tail onto the entry\n//       // Mark that this entry is a globstar match\n//       PROCESS(pattern[0..n] + ENTRY + pattern[n .. $], true)\n//\n//   else // not globstar\n//     for ENTRY in ENTRIES (not dotfiles, unless pattern[n] is dot)\n//       Test ENTRY against pattern[n]\n//       If fails, continue\n//       If passes, PROCESS(pattern[0..n] + item + pattern[n+1 .. $])\n//\n// Caveat:\n//   Cache all stats and readdirs results to minimize syscall.  Since all\n//   we ever care about is existence and directory-ness, we can just keep\n//   `true` for files, and [children,...] for directories, or `false` for\n//   things that don't exist.\n\nmodule.exports = glob\n\nvar fs = require('fs')\nvar rp = require('fs.realpath')\nvar minimatch = require('minimatch')\nvar Minimatch = minimatch.Minimatch\nvar inherits = require('inherits')\nvar EE = require('events').EventEmitter\nvar path = require('path')\nvar assert = require('assert')\nvar isAbsolute = require('path-is-absolute')\nvar globSync = require('./sync.js')\nvar common = require('./common.js')\nvar alphasort = common.alphasort\nvar alphasorti = common.alphasorti\nvar setopts = common.setopts\nvar ownProp = common.ownProp\nvar inflight = require('inflight')\nvar util = require('util')\nvar childrenIgnored = common.childrenIgnored\nvar isIgnored = common.isIgnored\n\nvar once = require('once')\n\nfunction glob (pattern, options, cb) {\n  if (typeof options === 'function') cb = options, options = {}\n  if (!options) options = {}\n\n  if (options.sync) {\n    if (cb)\n      throw new TypeError('callback provided to sync glob')\n    return globSync(pattern, options)\n  }\n\n  return new Glob(pattern, options, cb)\n}\n\nglob.sync = globSync\nvar GlobSync = glob.GlobSync = globSync.GlobSync\n\n// old api surface\nglob.glob = glob\n\nfunction extend (origin, add) {\n  if (add === null || typeof add !== 'object') {\n    return origin\n  }\n\n  var keys = Object.keys(add)\n  var i = keys.length\n  while (i--) {\n    origin[keys[i]] = add[keys[i]]\n  }\n  return origin\n}\n\nglob.hasMagic = function (pattern, options_) {\n  var options = extend({}, options_)\n  options.noprocess = true\n\n  var g = new Glob(pattern, options)\n  var set = g.minimatch.set\n\n  if (!pattern)\n    return false\n\n  if (set.length > 1)\n    return true\n\n  for (var j = 0; j < set[0].length; j++) {\n    if (typeof set[0][j] !== 'string')\n      return true\n  }\n\n  return false\n}\n\nglob.Glob = Glob\ninherits(Glob, EE)\nfunction Glob (pattern, options, cb) {\n  if (typeof options === 'function') {\n    cb = options\n    options = null\n  }\n\n  if (options && options.sync) {\n    if (cb)\n      throw new TypeError('callback provided to sync glob')\n    return new GlobSync(pattern, options)\n  }\n\n  if (!(this instanceof Glob))\n    return new Glob(pattern, options, cb)\n\n  setopts(this, pattern, options)\n  this._didRealPath = false\n\n  // process each pattern in the minimatch set\n  var n = this.minimatch.set.length\n\n  // The matches are stored as {<filename>: true,...} so that\n  // duplicates are automagically pruned.\n  // Later, we do an Object.keys() on these.\n  // Keep them as a list so we can fill in when nonull is set.\n  this.matches = new Array(n)\n\n  if (typeof cb === 'function') {\n    cb = once(cb)\n    this.on('error', cb)\n    this.on('end', function (matches) {\n      cb(null, matches)\n    })\n  }\n\n  var self = this\n  this._processing = 0\n\n  this._emitQueue = []\n  this._processQueue = []\n  this.paused = false\n\n  if (this.noprocess)\n    return this\n\n  if (n === 0)\n    return done()\n\n  var sync = true\n  for (var i = 0; i < n; i ++) {\n    this._process(this.minimatch.set[i], i, false, done)\n  }\n  sync = false\n\n  function done () {\n    --self._processing\n    if (self._processing <= 0) {\n      if (sync) {\n        process.nextTick(function () {\n          self._finish()\n        })\n      } else {\n        self._finish()\n      }\n    }\n  }\n}\n\nGlob.prototype._finish = function () {\n  assert(this instanceof Glob)\n  if (this.aborted)\n    return\n\n  if (this.realpath && !this._didRealpath)\n    return this._realpath()\n\n  common.finish(this)\n  this.emit('end', this.found)\n}\n\nGlob.prototype._realpath = function () {\n  if (this._didRealpath)\n    return\n\n  this._didRealpath = true\n\n  var n = this.matches.length\n  if (n === 0)\n    return this._finish()\n\n  var self = this\n  for (var i = 0; i < this.matches.length; i++)\n    this._realpathSet(i, next)\n\n  function next () {\n    if (--n === 0)\n      self._finish()\n  }\n}\n\nGlob.prototype._realpathSet = function (index, cb) {\n  var matchset = this.matches[index]\n  if (!matchset)\n    return cb()\n\n  var found = Object.keys(matchset)\n  var self = this\n  var n = found.length\n\n  if (n === 0)\n    return cb()\n\n  var set = this.matches[index] = Object.create(null)\n  found.forEach(function (p, i) {\n    // If there's a problem with the stat, then it means that\n    // one or more of the links in the realpath couldn't be\n    // resolved.  just return the abs value in that case.\n    p = self._makeAbs(p)\n    rp.realpath(p, self.realpathCache, function (er, real) {\n      if (!er)\n        set[real] = true\n      else if (er.syscall === 'stat')\n        set[p] = true\n      else\n        self.emit('error', er) // srsly wtf right here\n\n      if (--n === 0) {\n        self.matches[index] = set\n        cb()\n      }\n    })\n  })\n}\n\nGlob.prototype._mark = function (p) {\n  return common.mark(this, p)\n}\n\nGlob.prototype._makeAbs = function (f) {\n  return common.makeAbs(this, f)\n}\n\nGlob.prototype.abort = function () {\n  this.aborted = true\n  this.emit('abort')\n}\n\nGlob.prototype.pause = function () {\n  if (!this.paused) {\n    this.paused = true\n    this.emit('pause')\n  }\n}\n\nGlob.prototype.resume = function () {\n  if (this.paused) {\n    this.emit('resume')\n    this.paused = false\n    if (this._emitQueue.length) {\n      var eq = this._emitQueue.slice(0)\n      this._emitQueue.length = 0\n      for (var i = 0; i < eq.length; i ++) {\n        var e = eq[i]\n        this._emitMatch(e[0], e[1])\n      }\n    }\n    if (this._processQueue.length) {\n      var pq = this._processQueue.slice(0)\n      this._processQueue.length = 0\n      for (var i = 0; i < pq.length; i ++) {\n        var p = pq[i]\n        this._processing--\n        this._process(p[0], p[1], p[2], p[3])\n      }\n    }\n  }\n}\n\nGlob.prototype._process = function (pattern, index, inGlobStar, cb) {\n  assert(this instanceof Glob)\n  assert(typeof cb === 'function')\n\n  if (this.aborted)\n    return\n\n  this._processing++\n  if (this.paused) {\n    this._processQueue.push([pattern, index, inGlobStar, cb])\n    return\n  }\n\n  //console.error('PROCESS %d', this._processing, pattern)\n\n  // Get the first [n] parts of pattern that are all strings.\n  var n = 0\n  while (typeof pattern[n] === 'string') {\n    n ++\n  }\n  // now n is the index of the first one that is *not* a string.\n\n  // see if there's anything else\n  var prefix\n  switch (n) {\n    // if not, then this is rather simple\n    case pattern.length:\n      this._processSimple(pattern.join('/'), index, cb)\n      return\n\n    case 0:\n      // pattern *starts* with some non-trivial item.\n      // going to readdir(cwd), but not include the prefix in matches.\n      prefix = null\n      break\n\n    default:\n      // pattern has some string bits in the front.\n      // whatever it starts with, whether that's 'absolute' like /foo/bar,\n      // or 'relative' like '../baz'\n      prefix = pattern.slice(0, n).join('/')\n      break\n  }\n\n  var remain = pattern.slice(n)\n\n  // get the list of entries.\n  var read\n  if (prefix === null)\n    read = '.'\n  else if (isAbsolute(prefix) || isAbsolute(pattern.join('/'))) {\n    if (!prefix || !isAbsolute(prefix))\n      prefix = '/' + prefix\n    read = prefix\n  } else\n    read = prefix\n\n  var abs = this._makeAbs(read)\n\n  //if ignored, skip _processing\n  if (childrenIgnored(this, read))\n    return cb()\n\n  var isGlobStar = remain[0] === minimatch.GLOBSTAR\n  if (isGlobStar)\n    this._processGlobStar(prefix, read, abs, remain, index, inGlobStar, cb)\n  else\n    this._processReaddir(prefix, read, abs, remain, index, inGlobStar, cb)\n}\n\nGlob.prototype._processReaddir = function (prefix, read, abs, remain, index, inGlobStar, cb) {\n  var self = this\n  this._readdir(abs, inGlobStar, function (er, entries) {\n    return self._processReaddir2(prefix, read, abs, remain, index, inGlobStar, entries, cb)\n  })\n}\n\nGlob.prototype._processReaddir2 = function (prefix, read, abs, remain, index, inGlobStar, entries, cb) {\n\n  // if the abs isn't a dir, then nothing can match!\n  if (!entries)\n    return cb()\n\n  // It will only match dot entries if it starts with a dot, or if\n  // dot is set.  Stuff like @(.foo|.bar) isn't allowed.\n  var pn = remain[0]\n  var negate = !!this.minimatch.negate\n  var rawGlob = pn._glob\n  var dotOk = this.dot || rawGlob.charAt(0) === '.'\n\n  var matchedEntries = []\n  for (var i = 0; i < entries.length; i++) {\n    var e = entries[i]\n    if (e.charAt(0) !== '.' || dotOk) {\n      var m\n      if (negate && !prefix) {\n        m = !e.match(pn)\n      } else {\n        m = e.match(pn)\n      }\n      if (m)\n        matchedEntries.push(e)\n    }\n  }\n\n  //console.error('prd2', prefix, entries, remain[0]._glob, matchedEntries)\n\n  var len = matchedEntries.length\n  // If there are no matched entries, then nothing matches.\n  if (len === 0)\n    return cb()\n\n  // if this is the last remaining pattern bit, then no need for\n  // an additional stat *unless* the user has specified mark or\n  // stat explicitly.  We know they exist, since readdir returned\n  // them.\n\n  if (remain.length === 1 && !this.mark && !this.stat) {\n    if (!this.matches[index])\n      this.matches[index] = Object.create(null)\n\n    for (var i = 0; i < len; i ++) {\n      var e = matchedEntries[i]\n      if (prefix) {\n        if (prefix !== '/')\n          e = prefix + '/' + e\n        else\n          e = prefix + e\n      }\n\n      if (e.charAt(0) === '/' && !this.nomount) {\n        e = path.join(this.root, e)\n      }\n      this._emitMatch(index, e)\n    }\n    // This was the last one, and no stats were needed\n    return cb()\n  }\n\n  // now test all matched entries as stand-ins for that part\n  // of the pattern.\n  remain.shift()\n  for (var i = 0; i < len; i ++) {\n    var e = matchedEntries[i]\n    var newPattern\n    if (prefix) {\n      if (prefix !== '/')\n        e = prefix + '/' + e\n      else\n        e = prefix + e\n    }\n    this._process([e].concat(remain), index, inGlobStar, cb)\n  }\n  cb()\n}\n\nGlob.prototype._emitMatch = function (index, e) {\n  if (this.aborted)\n    return\n\n  if (isIgnored(this, e))\n    return\n\n  if (this.paused) {\n    this._emitQueue.push([index, e])\n    return\n  }\n\n  var abs = isAbsolute(e) ? e : this._makeAbs(e)\n\n  if (this.mark)\n    e = this._mark(e)\n\n  if (this.absolute)\n    e = abs\n\n  if (this.matches[index][e])\n    return\n\n  if (this.nodir) {\n    var c = this.cache[abs]\n    if (c === 'DIR' || Array.isArray(c))\n      return\n  }\n\n  this.matches[index][e] = true\n\n  var st = this.statCache[abs]\n  if (st)\n    this.emit('stat', e, st)\n\n  this.emit('match', e)\n}\n\nGlob.prototype._readdirInGlobStar = function (abs, cb) {\n  if (this.aborted)\n    return\n\n  // follow all symlinked directories forever\n  // just proceed as if this is a non-globstar situation\n  if (this.follow)\n    return this._readdir(abs, false, cb)\n\n  var lstatkey = 'lstat\\0' + abs\n  var self = this\n  var lstatcb = inflight(lstatkey, lstatcb_)\n\n  if (lstatcb)\n    fs.lstat(abs, lstatcb)\n\n  function lstatcb_ (er, lstat) {\n    if (er && er.code === 'ENOENT')\n      return cb()\n\n    var isSym = lstat && lstat.isSymbolicLink()\n    self.symlinks[abs] = isSym\n\n    // If it's not a symlink or a dir, then it's definitely a regular file.\n    // don't bother doing a readdir in that case.\n    if (!isSym && lstat && !lstat.isDirectory()) {\n      self.cache[abs] = 'FILE'\n      cb()\n    } else\n      self._readdir(abs, false, cb)\n  }\n}\n\nGlob.prototype._readdir = function (abs, inGlobStar, cb) {\n  if (this.aborted)\n    return\n\n  cb = inflight('readdir\\0'+abs+'\\0'+inGlobStar, cb)\n  if (!cb)\n    return\n\n  //console.error('RD %j %j', +inGlobStar, abs)\n  if (inGlobStar && !ownProp(this.symlinks, abs))\n    return this._readdirInGlobStar(abs, cb)\n\n  if (ownProp(this.cache, abs)) {\n    var c = this.cache[abs]\n    if (!c || c === 'FILE')\n      return cb()\n\n    if (Array.isArray(c))\n      return cb(null, c)\n  }\n\n  var self = this\n  fs.readdir(abs, readdirCb(this, abs, cb))\n}\n\nfunction readdirCb (self, abs, cb) {\n  return function (er, entries) {\n    if (er)\n      self._readdirError(abs, er, cb)\n    else\n      self._readdirEntries(abs, entries, cb)\n  }\n}\n\nGlob.prototype._readdirEntries = function (abs, entries, cb) {\n  if (this.aborted)\n    return\n\n  // if we haven't asked to stat everything, then just\n  // assume that everything in there exists, so we can avoid\n  // having to stat it a second time.\n  if (!this.mark && !this.stat) {\n    for (var i = 0; i < entries.length; i ++) {\n      var e = entries[i]\n      if (abs === '/')\n        e = abs + e\n      else\n        e = abs + '/' + e\n      this.cache[e] = true\n    }\n  }\n\n  this.cache[abs] = entries\n  return cb(null, entries)\n}\n\nGlob.prototype._readdirError = function (f, er, cb) {\n  if (this.aborted)\n    return\n\n  // handle errors, and cache the information\n  switch (er.code) {\n    case 'ENOTSUP': // https://github.com/isaacs/node-glob/issues/205\n    case 'ENOTDIR': // totally normal. means it *does* exist.\n      var abs = this._makeAbs(f)\n      this.cache[abs] = 'FILE'\n      if (abs === this.cwdAbs) {\n        var error = new Error(er.code + ' invalid cwd ' + this.cwd)\n        error.path = this.cwd\n        error.code = er.code\n        this.emit('error', error)\n        this.abort()\n      }\n      break\n\n    case 'ENOENT': // not terribly unusual\n    case 'ELOOP':\n    case 'ENAMETOOLONG':\n    case 'UNKNOWN':\n      this.cache[this._makeAbs(f)] = false\n      break\n\n    default: // some unusual error.  Treat as failure.\n      this.cache[this._makeAbs(f)] = false\n      if (this.strict) {\n        this.emit('error', er)\n        // If the error is handled, then we abort\n        // if not, we threw out of here\n        this.abort()\n      }\n      if (!this.silent)\n        console.error('glob error', er)\n      break\n  }\n\n  return cb()\n}\n\nGlob.prototype._processGlobStar = function (prefix, read, abs, remain, index, inGlobStar, cb) {\n  var self = this\n  this._readdir(abs, inGlobStar, function (er, entries) {\n    self._processGlobStar2(prefix, read, abs, remain, index, inGlobStar, entries, cb)\n  })\n}\n\n\nGlob.prototype._processGlobStar2 = function (prefix, read, abs, remain, index, inGlobStar, entries, cb) {\n  //console.error('pgs2', prefix, remain[0], entries)\n\n  // no entries means not a dir, so it can never have matches\n  // foo.txt/** doesn't match foo.txt\n  if (!entries)\n    return cb()\n\n  // test without the globstar, and with every child both below\n  // and replacing the globstar.\n  var remainWithoutGlobStar = remain.slice(1)\n  var gspref = prefix ? [ prefix ] : []\n  var noGlobStar = gspref.concat(remainWithoutGlobStar)\n\n  // the noGlobStar pattern exits the inGlobStar state\n  this._process(noGlobStar, index, false, cb)\n\n  var isSym = this.symlinks[abs]\n  var len = entries.length\n\n  // If it's a symlink, and we're in a globstar, then stop\n  if (isSym && inGlobStar)\n    return cb()\n\n  for (var i = 0; i < len; i++) {\n    var e = entries[i]\n    if (e.charAt(0) === '.' && !this.dot)\n      continue\n\n    // these two cases enter the inGlobStar state\n    var instead = gspref.concat(entries[i], remainWithoutGlobStar)\n    this._process(instead, index, true, cb)\n\n    var below = gspref.concat(entries[i], remain)\n    this._process(below, index, true, cb)\n  }\n\n  cb()\n}\n\nGlob.prototype._processSimple = function (prefix, index, cb) {\n  // XXX review this.  Shouldn't it be doing the mounting etc\n  // before doing stat?  kinda weird?\n  var self = this\n  this._stat(prefix, function (er, exists) {\n    self._processSimple2(prefix, index, er, exists, cb)\n  })\n}\nGlob.prototype._processSimple2 = function (prefix, index, er, exists, cb) {\n\n  //console.error('ps2', prefix, exists)\n\n  if (!this.matches[index])\n    this.matches[index] = Object.create(null)\n\n  // If it doesn't exist, then just mark the lack of results\n  if (!exists)\n    return cb()\n\n  if (prefix && isAbsolute(prefix) && !this.nomount) {\n    var trail = /[\\/\\\\]$/.test(prefix)\n    if (prefix.charAt(0) === '/') {\n      prefix = path.join(this.root, prefix)\n    } else {\n      prefix = path.resolve(this.root, prefix)\n      if (trail)\n        prefix += '/'\n    }\n  }\n\n  if (process.platform === 'win32')\n    prefix = prefix.replace(/\\\\/g, '/')\n\n  // Mark this as a match\n  this._emitMatch(index, prefix)\n  cb()\n}\n\n// Returns either 'DIR', 'FILE', or false\nGlob.prototype._stat = function (f, cb) {\n  var abs = this._makeAbs(f)\n  var needDir = f.slice(-1) === '/'\n\n  if (f.length > this.maxLength)\n    return cb()\n\n  if (!this.stat && ownProp(this.cache, abs)) {\n    var c = this.cache[abs]\n\n    if (Array.isArray(c))\n      c = 'DIR'\n\n    // It exists, but maybe not how we need it\n    if (!needDir || c === 'DIR')\n      return cb(null, c)\n\n    if (needDir && c === 'FILE')\n      return cb()\n\n    // otherwise we have to stat, because maybe c=true\n    // if we know it exists, but not what it is.\n  }\n\n  var exists\n  var stat = this.statCache[abs]\n  if (stat !== undefined) {\n    if (stat === false)\n      return cb(null, stat)\n    else {\n      var type = stat.isDirectory() ? 'DIR' : 'FILE'\n      if (needDir && type === 'FILE')\n        return cb()\n      else\n        return cb(null, type, stat)\n    }\n  }\n\n  var self = this\n  var statcb = inflight('stat\\0' + abs, lstatcb_)\n  if (statcb)\n    fs.lstat(abs, statcb)\n\n  function lstatcb_ (er, lstat) {\n    if (lstat && lstat.isSymbolicLink()) {\n      // If it's a symlink, then treat it as the target, unless\n      // the target does not exist, then treat it as a file.\n      return fs.stat(abs, function (er, stat) {\n        if (er)\n          self._stat2(f, abs, null, lstat, cb)\n        else\n          self._stat2(f, abs, er, stat, cb)\n      })\n    } else {\n      self._stat2(f, abs, er, lstat, cb)\n    }\n  }\n}\n\nGlob.prototype._stat2 = function (f, abs, er, stat, cb) {\n  if (er && (er.code === 'ENOENT' || er.code === 'ENOTDIR')) {\n    this.statCache[abs] = false\n    return cb()\n  }\n\n  var needDir = f.slice(-1) === '/'\n  this.statCache[abs] = stat\n\n  if (abs.slice(-1) === '/' && stat && !stat.isDirectory())\n    return cb(null, false, stat)\n\n  var c = true\n  if (stat)\n    c = stat.isDirectory() ? 'DIR' : 'FILE'\n  this.cache[abs] = this.cache[abs] || c\n\n  if (needDir && c === 'FILE')\n    return cb()\n\n  return cb(null, c, stat)\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","glob","pattern","options","cb","sync","TypeError","globSync","Glob","done","self","_processing","process","nextTick","_finish","GlobSync","setopts","_didRealPath","n","minimatch","set","length","matches","Array","once","on","_emitQueue","_processQueue","paused","noprocess","i","_process","readdirCb","abs","er","entries","_readdirError","_readdirEntries","fs","rp","inherits","EE","EventEmitter","path","assert","isAbsolute","common","ownProp","inflight","childrenIgnored","isIgnored","hasMagic","glob.hasMagic","options_","keys","Object","origin","g","j","prototype","Glob.prototype._finish","aborted","realpath","_didRealpath","_realpath","finish","emit","found","Glob.prototype._realpath","next","_realpathSet","Glob.prototype._realpathSet","index","matchset","create","forEach","p","_makeAbs","realpathCache","real","syscall","_mark","Glob.prototype._mark","mark","Glob.prototype._makeAbs","f","makeAbs","abort","Glob.prototype.abort","pause","Glob.prototype.pause","resume","Glob.prototype.resume","eq","slice","e","_emitMatch","pq","Glob.prototype._process","inGlobStar","push","_processSimple","join","prefix","remain","read","GLOBSTAR","_processGlobStar","_processReaddir","Glob.prototype._processReaddir","_readdir","_processReaddir2","Glob.prototype._processReaddir2","pn","negate","rawGlob","_glob","dotOk","dot","charAt","matchedEntries","m","match","len","stat","nomount","root","shift","concat","Glob.prototype._emitMatch","absolute","nodir","c","cache","isArray","st","statCache","_readdirInGlobStar","Glob.prototype._readdirInGlobStar","follow","lstatcb","lstatcb_","lstat","code","isSym","isSymbolicLink","symlinks","isDirectory","Glob.prototype._readdir","readdir","Glob.prototype._readdirEntries","Glob.prototype._readdirError","cwdAbs","error","Error","cwd","strict","silent","console","Glob.prototype._processGlobStar","_processGlobStar2","Glob.prototype._processGlobStar2","remainWithoutGlobStar","gspref","noGlobStar","instead","below","Glob.prototype._processSimple","_stat","exists","_processSimple2","Glob.prototype._processSimple2","trail","test","resolve","platform","replace","Glob.prototype._stat","needDir","maxLength","undefined","type","statcb","_stat2","Glob.prototype._stat2"]
}
