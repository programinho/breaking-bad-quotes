{"version":3,"sources":["breaking_bad_quotes/core.cljs"],"mappings":";;;;AAIA,AAAA,AAAMA,AAAaC;AAAnB,AACE,AAAA,AAAA,AAAA,AAAA,AAAAC,AAACC;AAAD,AACa,AAAAD,AAACE,AAAOH;AADrB,AAEkB,AAAAI;AAAA,AAAA,AAAAC,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAAE,AAAAC,AAAAH,AAAAA;AAAA,AAAAI,AAAAJ,AAAA,AAAaK;AAAb,AAAAD,AAAAJ,AAAA,AAAoBM;AAApB,AACE,AAACC,AAAeF,AAAOC;;;AAG7C,AAAA,AAAME;AAAN,AACE,AAAMb,AAAK,AAAA,AAACc;AAAZ,AACE,AAACf,AAAYC;;AACb;;AAAA,AACE,AAAAe,AAA6B,AAAA,AAAAG,AAACC,AAAOnB;AAArCe,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAT,AAAA,AAAAS,AAAA,AAAA,AAAA,AAAA,AAAAR,AAAAC,AAAAO,AAAAA;AAAA,AAAAN,AAAAM,AAAA,AAAcC;AAAd,AAAAP,AAAAM,AAAA,AAAoBE;AAApB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAIcD,AACCC;;;;AASrB,AAAA,AAAMG;AAAN,AACE;;AAEF,AAAA,AAAMC;AAAN,AACE,AAAAC,AAAA,AAAqBT;AAArBU,AAC0B,AAAA,AAAGE;AAD7B,AAAA,AAAAH,AAAAC,AAAAD,AAAAC,AAACC,AAAAA,AAAAA;;AAEH,AAAA,AAAeE;AAAf,AAIE,AAACL;;;AACH,AAAA,AAAMM;AAAN,AAGE,AAAA,AAACf","names":["breaking-bad-quotes.core/fetch-link!","data","p1__38397#","ajax.core.GET.cljs$core$IFn$_invoke$arity$variadic","cljs.core/reset!","p__38398","map__38399","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","status","status-text","js/console.log","breaking-bad-quotes.core/quote","reagent.core.atom.cljs$core$IFn$_invoke$arity$1","map__38401","quote","author","cljs.core/deref","cljs.core/first","breaking-bad-quotes.core/add","breaking-bad-quotes.core/start","G__38403","G__38404","reagent.core/render-component","js/document","breaking-bad-quotes.core/init","breaking-bad-quotes.core/stop"],"sourcesContent":["(ns breaking-bad-quotes.core\n  (:require [reagent.core :as r :refer [atom]]\n            [ajax.core :refer [GET]]))\n\n(defn fetch-link! [data]\n  (GET \"https://breaking-bad-quotes.herokuapp.com/v1/quotes\"\n    {:handler #(reset! data %)\n     :error-handler (fn [{:keys [status status-text]}]\n                      (js/console.log status status-text))}))\n\n\n(defn quote []\n  (let [data (atom nil)]\n    (fetch-link! data)\n    (fn []\n      (let [{:strs [quote author]} (first @data)]\n        [:div.cards>div.card\n         [:h2.card-header.text-center \"Breaking Bad Quotes\"]\n         [:div.card-body.text-center\n          [:p#quote quote]\n          [:p#author author]]\n         [:div.card-footer.center.xt-center\n          [:button#twitter.outline>a#tweet\n           {:href \"#\"\n            :target \"_blank\"}\n           [:i.fi-social-twitter \" Tweasdet\"]]\n          [:button#new-quote.outline\n           [:i.fi-shuffle \" New Quote\"]]]]))))\n\n(defn add []\n  (+ 1))\n\n(defn start []\n  (r/render-component [quote]\n                            (. js/document (getElementById \"app\"))))\n(defn ^:export init []\n  ;; init is called ONCE when the page loads\n  ;; this is called in the index.html and must be exported\n  ;; so it is available even in :advanced release builds\n  (start))\n(defn stop []\n  ;; stop is called before any code is reloaded\n  ;; this is controlled by :before-load in the config\n  (js/console.log \"stop\"))"]}