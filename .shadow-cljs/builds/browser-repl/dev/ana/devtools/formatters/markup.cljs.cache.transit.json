["^ ","~:output",["^ ","~:js","goog.provide('devtools.formatters.markup');\ngoog.require('cljs.core');\ngoog.require('devtools.formatters.helpers');\ngoog.require('devtools.formatters.printing');\ngoog.require('devtools.formatters.state');\ngoog.require('devtools.formatters.templating');\ngoog.require('devtools.munging');\ndevtools.formatters.markup.print_with = (function devtools$formatters$markup$print_with(var_args){\nvar args__4736__auto__ = [];\nvar len__4730__auto___35599 = arguments.length;\nvar i__4731__auto___35600 = (0);\nwhile(true){\nif((i__4731__auto___35600 < len__4730__auto___35599)){\nargs__4736__auto__.push((arguments[i__4731__auto___35600]));\n\nvar G__35601 = (i__4731__auto___35600 + (1));\ni__4731__auto___35600 = G__35601;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4737__auto__ = ((((3) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((3)),(0),null)):null);\nreturn devtools.formatters.markup.print_with.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__4737__auto__);\n});\n\ndevtools.formatters.markup.print_with.cljs$core$IFn$_invoke$arity$variadic = (function (method,value,tag,p__35302){\nvar vec__35303 = p__35302;\nvar max_level = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35303,(0),null);\nvar job_fn = ((function (vec__35303,max_level){\nreturn (function (){\nvar G__35310 = value;\nvar G__35311 = tag;\nvar G__35312 = (devtools.formatters.markup.get_markup_db.cljs$core$IFn$_invoke$arity$0 ? devtools.formatters.markup.get_markup_db.cljs$core$IFn$_invoke$arity$0() : devtools.formatters.markup.get_markup_db.call(null));\nreturn (method.cljs$core$IFn$_invoke$arity$3 ? method.cljs$core$IFn$_invoke$arity$3(G__35310,G__35311,G__35312) : method.call(null,G__35310,G__35311,G__35312));\n});})(vec__35303,max_level))\n;\nif((!((max_level == null)))){\nvar _STAR_print_level_STAR__orig_val__35315 = cljs.core._STAR_print_level_STAR_;\nvar _STAR_print_level_STAR__temp_val__35316 = (max_level + (1));\ncljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR__temp_val__35316;\n\ntry{return job_fn();\n}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR__orig_val__35315;\n}} else {\nreturn job_fn();\n}\n});\n\ndevtools.formatters.markup.print_with.cljs$lang$maxFixedArity = (3);\n\n/** @this {Function} */\ndevtools.formatters.markup.print_with.cljs$lang$applyTo = (function (seq35294){\nvar G__35295 = cljs.core.first(seq35294);\nvar seq35294__$1 = cljs.core.next(seq35294);\nvar G__35296 = cljs.core.first(seq35294__$1);\nvar seq35294__$2 = cljs.core.next(seq35294__$1);\nvar G__35297 = cljs.core.first(seq35294__$2);\nvar seq35294__$3 = cljs.core.next(seq35294__$2);\nvar self__4717__auto__ = this;\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__35295,G__35296,G__35297,seq35294__$3);\n});\n\ndevtools.formatters.markup.print_via_writer = (function devtools$formatters$markup$print_via_writer(var_args){\nvar args__4736__auto__ = [];\nvar len__4730__auto___35603 = arguments.length;\nvar i__4731__auto___35604 = (0);\nwhile(true){\nif((i__4731__auto___35604 < len__4730__auto___35603)){\nargs__4736__auto__.push((arguments[i__4731__auto___35604]));\n\nvar G__35605 = (i__4731__auto___35604 + (1));\ni__4731__auto___35604 = G__35605;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4737__auto__ = ((((2) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((2)),(0),null)):null);\nreturn devtools.formatters.markup.print_via_writer.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4737__auto__);\n});\n\ndevtools.formatters.markup.print_via_writer.cljs$core$IFn$_invoke$arity$variadic = (function (value,tag,p__35344){\nvar vec__35346 = p__35344;\nvar max_level = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35346,(0),null);\nreturn devtools.formatters.markup.print_with.cljs$core$IFn$_invoke$arity$variadic(devtools.formatters.printing.managed_print_via_writer,value,tag,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([max_level], 0));\n});\n\ndevtools.formatters.markup.print_via_writer.cljs$lang$maxFixedArity = (2);\n\n/** @this {Function} */\ndevtools.formatters.markup.print_via_writer.cljs$lang$applyTo = (function (seq35333){\nvar G__35334 = cljs.core.first(seq35333);\nvar seq35333__$1 = cljs.core.next(seq35333);\nvar G__35335 = cljs.core.first(seq35333__$1);\nvar seq35333__$2 = cljs.core.next(seq35333__$1);\nvar self__4717__auto__ = this;\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__35334,G__35335,seq35333__$2);\n});\n\ndevtools.formatters.markup.print_via_protocol = (function devtools$formatters$markup$print_via_protocol(var_args){\nvar args__4736__auto__ = [];\nvar len__4730__auto___35612 = arguments.length;\nvar i__4731__auto___35613 = (0);\nwhile(true){\nif((i__4731__auto___35613 < len__4730__auto___35612)){\nargs__4736__auto__.push((arguments[i__4731__auto___35613]));\n\nvar G__35617 = (i__4731__auto___35613 + (1));\ni__4731__auto___35613 = G__35617;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4737__auto__ = ((((2) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((2)),(0),null)):null);\nreturn devtools.formatters.markup.print_via_protocol.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4737__auto__);\n});\n\ndevtools.formatters.markup.print_via_protocol.cljs$core$IFn$_invoke$arity$variadic = (function (value,tag,p__35356){\nvar vec__35358 = p__35356;\nvar max_level = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35358,(0),null);\nreturn devtools.formatters.markup.print_with.cljs$core$IFn$_invoke$arity$variadic(devtools.formatters.printing.managed_print_via_protocol,value,tag,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([max_level], 0));\n});\n\ndevtools.formatters.markup.print_via_protocol.cljs$lang$maxFixedArity = (2);\n\n/** @this {Function} */\ndevtools.formatters.markup.print_via_protocol.cljs$lang$applyTo = (function (seq35350){\nvar G__35351 = cljs.core.first(seq35350);\nvar seq35350__$1 = cljs.core.next(seq35350);\nvar G__35352 = cljs.core.first(seq35350__$1);\nvar seq35350__$2 = cljs.core.next(seq35350__$1);\nvar self__4717__auto__ = this;\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__35351,G__35352,seq35350__$2);\n});\n\ndevtools.formatters.markup._LT_expandable_GT_ = (function devtools$formatters$markup$_LT_expandable_GT_(var_args){\nvar args__4736__auto__ = [];\nvar len__4730__auto___35622 = arguments.length;\nvar i__4731__auto___35623 = (0);\nwhile(true){\nif((i__4731__auto___35623 < len__4730__auto___35622)){\nargs__4736__auto__.push((arguments[i__4731__auto___35623]));\n\nvar G__35624 = (i__4731__auto___35623 + (1));\ni__4731__auto___35623 = G__35624;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4737__auto__ = ((((0) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((0)),(0),null)):null);\nreturn devtools.formatters.markup._LT_expandable_GT_.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);\n});\n\ndevtools.formatters.markup._LT_expandable_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (children){\nvar inner_markup = cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"expandable-inner-tag\",\"expandable-inner-tag\",-799648560)], null),children);\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"expandable-tag\",\"expandable-tag\",151027578),new cljs.core.Keyword(null,\"expandable-symbol\",\"expandable-symbol\",1644611290),inner_markup], null);\n});\n\ndevtools.formatters.markup._LT_expandable_GT_.cljs$lang$maxFixedArity = (0);\n\n/** @this {Function} */\ndevtools.formatters.markup._LT_expandable_GT_.cljs$lang$applyTo = (function (seq35364){\nvar self__4718__auto__ = this;\nreturn self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq35364));\n});\n\ndevtools.formatters.markup._LT_raw_surrogate_GT_ = (function devtools$formatters$markup$_LT_raw_surrogate_GT_(var_args){\nvar args__4736__auto__ = [];\nvar len__4730__auto___35625 = arguments.length;\nvar i__4731__auto___35626 = (0);\nwhile(true){\nif((i__4731__auto___35626 < len__4730__auto___35625)){\nargs__4736__auto__.push((arguments[i__4731__auto___35626]));\n\nvar G__35627 = (i__4731__auto___35626 + (1));\ni__4731__auto___35626 = G__35627;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4737__auto__ = ((((0) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((0)),(0),null)):null);\nreturn devtools.formatters.markup._LT_raw_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);\n});\n\ndevtools.formatters.markup._LT_raw_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (args){\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"surrogate\"], null),args);\n});\n\ndevtools.formatters.markup._LT_raw_surrogate_GT_.cljs$lang$maxFixedArity = (0);\n\n/** @this {Function} */\ndevtools.formatters.markup._LT_raw_surrogate_GT_.cljs$lang$applyTo = (function (seq35369){\nvar self__4718__auto__ = this;\nreturn self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq35369));\n});\n\ndevtools.formatters.markup._LT_surrogate_GT_ = (function devtools$formatters$markup$_LT_surrogate_GT_(var_args){\nvar args__4736__auto__ = [];\nvar len__4730__auto___35631 = arguments.length;\nvar i__4731__auto___35632 = (0);\nwhile(true){\nif((i__4731__auto___35632 < len__4730__auto___35631)){\nargs__4736__auto__.push((arguments[i__4731__auto___35632]));\n\nvar G__35633 = (i__4731__auto___35632 + (1));\ni__4731__auto___35632 = G__35633;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4737__auto__ = ((((0) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((0)),(0),null)):null);\nreturn devtools.formatters.markup._LT_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);\n});\n\ndevtools.formatters.markup._LT_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (p__35381){\nvar vec__35382 = p__35381;\nvar object = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35382,(0),null);\nvar header = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35382,(1),null);\nvar body = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35382,(2),null);\nvar start_index = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35382,(3),null);\nvar header__$1 = (((!((body == null))))?devtools.formatters.markup._LT_expandable_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([header], 0)):header);\nreturn devtools.formatters.markup._LT_raw_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([object,header__$1,body,start_index], 0));\n});\n\ndevtools.formatters.markup._LT_surrogate_GT_.cljs$lang$maxFixedArity = (0);\n\n/** @this {Function} */\ndevtools.formatters.markup._LT_surrogate_GT_.cljs$lang$applyTo = (function (seq35375){\nvar self__4718__auto__ = this;\nreturn self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq35375));\n});\n\ndevtools.formatters.markup._LT_reference_GT_ = (function devtools$formatters$markup$_LT_reference_GT_(var_args){\nvar args__4736__auto__ = [];\nvar len__4730__auto___35638 = arguments.length;\nvar i__4731__auto___35639 = (0);\nwhile(true){\nif((i__4731__auto___35639 < len__4730__auto___35638)){\nargs__4736__auto__.push((arguments[i__4731__auto___35639]));\n\nvar G__35640 = (i__4731__auto___35639 + (1));\ni__4731__auto___35639 = G__35640;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4737__auto__ = ((((0) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((0)),(0),null)):null);\nreturn devtools.formatters.markup._LT_reference_GT_.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);\n});\n\ndevtools.formatters.markup._LT_reference_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (args){\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"reference\"], null),args);\n});\n\ndevtools.formatters.markup._LT_reference_GT_.cljs$lang$maxFixedArity = (0);\n\n/** @this {Function} */\ndevtools.formatters.markup._LT_reference_GT_.cljs$lang$applyTo = (function (seq35389){\nvar self__4718__auto__ = this;\nreturn self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq35389));\n});\n\ndevtools.formatters.markup._LT_reference_surrogate_GT_ = (function devtools$formatters$markup$_LT_reference_surrogate_GT_(var_args){\nvar args__4736__auto__ = [];\nvar len__4730__auto___35642 = arguments.length;\nvar i__4731__auto___35643 = (0);\nwhile(true){\nif((i__4731__auto___35643 < len__4730__auto___35642)){\nargs__4736__auto__.push((arguments[i__4731__auto___35643]));\n\nvar G__35644 = (i__4731__auto___35643 + (1));\ni__4731__auto___35643 = G__35644;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4737__auto__ = ((((0) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((0)),(0),null)):null);\nreturn devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);\n});\n\ndevtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (args){\nreturn devtools.formatters.markup._LT_reference_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.apply.cljs$core$IFn$_invoke$arity$2(devtools.formatters.markup._LT_surrogate_GT_,args)], 0));\n});\n\ndevtools.formatters.markup._LT_reference_surrogate_GT_.cljs$lang$maxFixedArity = (0);\n\n/** @this {Function} */\ndevtools.formatters.markup._LT_reference_surrogate_GT_.cljs$lang$applyTo = (function (seq35390){\nvar self__4718__auto__ = this;\nreturn self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq35390));\n});\n\ndevtools.formatters.markup._LT_circular_reference_GT_ = (function devtools$formatters$markup$_LT_circular_reference_GT_(var_args){\nvar args__4736__auto__ = [];\nvar len__4730__auto___35645 = arguments.length;\nvar i__4731__auto___35646 = (0);\nwhile(true){\nif((i__4731__auto___35646 < len__4730__auto___35645)){\nargs__4736__auto__.push((arguments[i__4731__auto___35646]));\n\nvar G__35647 = (i__4731__auto___35646 + (1));\ni__4731__auto___35646 = G__35647;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4737__auto__ = ((((0) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((0)),(0),null)):null);\nreturn devtools.formatters.markup._LT_circular_reference_GT_.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);\n});\n\ndevtools.formatters.markup._LT_circular_reference_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (children){\nreturn devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"circular-reference-tag\",\"circular-reference-tag\",858973471),new cljs.core.Keyword(null,\"circular-ref-icon\",\"circular-ref-icon\",-2087682919)], null),cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"circular-reference-body-tag\",\"circular-reference-body-tag\",-1301830023)], null),children)], 0));\n});\n\ndevtools.formatters.markup._LT_circular_reference_GT_.cljs$lang$maxFixedArity = (0);\n\n/** @this {Function} */\ndevtools.formatters.markup._LT_circular_reference_GT_.cljs$lang$applyTo = (function (seq35401){\nvar self__4718__auto__ = this;\nreturn self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq35401));\n});\n\ndevtools.formatters.markup._LT_native_reference_GT_ = (function devtools$formatters$markup$_LT_native_reference_GT_(object){\nvar reference = devtools.formatters.markup._LT_reference_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([object,(function (p1__35411_SHARP_){\nreturn devtools.formatters.state.set_prevent_recursion(p1__35411_SHARP_,true);\n})], 0));\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"native-reference-wrapper-tag\",\"native-reference-wrapper-tag\",2047690940),new cljs.core.Keyword(null,\"native-reference-background\",\"native-reference-background\",-286129550),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"native-reference-tag\",\"native-reference-tag\",-1516119079),reference], null)], null);\n});\ndevtools.formatters.markup._LT_header_expander_GT_ = (function devtools$formatters$markup$_LT_header_expander_GT_(object){\nreturn devtools.formatters.markup._LT_reference_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([devtools.formatters.markup._LT_raw_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([object,new cljs.core.Keyword(null,\"header-expander-symbol\",\"header-expander-symbol\",907531743),new cljs.core.Keyword(null,\"target\",\"target\",253001721)], 0)),devtools.formatters.state.reset_depth_limits], 0));\n});\ndevtools.formatters.markup._LT_cljs_land_GT_ = (function devtools$formatters$markup$_LT_cljs_land_GT_(var_args){\nvar args__4736__auto__ = [];\nvar len__4730__auto___35649 = arguments.length;\nvar i__4731__auto___35650 = (0);\nwhile(true){\nif((i__4731__auto___35650 < len__4730__auto___35649)){\nargs__4736__auto__.push((arguments[i__4731__auto___35650]));\n\nvar G__35651 = (i__4731__auto___35650 + (1));\ni__4731__auto___35650 = G__35651;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4737__auto__ = ((((0) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((0)),(0),null)):null);\nreturn devtools.formatters.markup._LT_cljs_land_GT_.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);\n});\n\ndevtools.formatters.markup._LT_cljs_land_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (children){\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"cljs-land-tag\",\"cljs-land-tag\",-7524377)], null),children);\n});\n\ndevtools.formatters.markup._LT_cljs_land_GT_.cljs$lang$maxFixedArity = (0);\n\n/** @this {Function} */\ndevtools.formatters.markup._LT_cljs_land_GT_.cljs$lang$applyTo = (function (seq35421){\nvar self__4718__auto__ = this;\nreturn self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq35421));\n});\n\ndevtools.formatters.markup._LT_nil_GT_ = (function devtools$formatters$markup$_LT_nil_GT_(){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"nil-tag\",\"nil-tag\",-1587449115),new cljs.core.Keyword(null,\"nil-label\",\"nil-label\",-587789203)], null);\n});\ndevtools.formatters.markup._LT_bool_GT_ = (function devtools$formatters$markup$_LT_bool_GT_(bool){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"bool-tag\",\"bool-tag\",-10409808),cljs.core.str.cljs$core$IFn$_invoke$arity$1(bool)], null);\n});\ndevtools.formatters.markup._LT_keyword_GT_ = (function devtools$formatters$markup$_LT_keyword_GT_(keyword){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"keyword-tag\",\"keyword-tag\",1587228387),cljs.core.str.cljs$core$IFn$_invoke$arity$1(keyword)], null);\n});\ndevtools.formatters.markup._LT_symbol_GT_ = (function devtools$formatters$markup$_LT_symbol_GT_(symbol){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"symbol-tag\",\"symbol-tag\",-100807517),cljs.core.str.cljs$core$IFn$_invoke$arity$1(symbol)], null);\n});\ndevtools.formatters.markup._LT_number_GT_ = (function devtools$formatters$markup$_LT_number_GT_(number){\nif(cljs.core.integer_QMARK_(number)){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"integer-tag\",\"integer-tag\",698000472),number], null);\n} else {\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"float-tag\",\"float-tag\",-390834106),number], null);\n}\n});\ndevtools.formatters.markup._LT_string_GT_ = (function devtools$formatters$markup$_LT_string_GT_(string){\nvar dq = devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"dq\",\"dq\",-1690275860));\nvar re_nl = (new RegExp(\"\\n\",\"g\"));\nvar nl_marker = devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"new-line-string-replacer\",\"new-line-string-replacer\",-753206206));\nvar inline_string = string.replace(re_nl,nl_marker);\nvar max_inline_string_size = (devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"string-prefix-limit\",\"string-prefix-limit\",1256106332)) + devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"string-postfix-limit\",\"string-postfix-limit\",-1282205963)));\nvar quote_string = ((function (dq,re_nl,nl_marker,inline_string,max_inline_string_size){\nreturn (function (s){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(dq),cljs.core.str.cljs$core$IFn$_invoke$arity$1(s),cljs.core.str.cljs$core$IFn$_invoke$arity$1(dq)].join('');\n});})(dq,re_nl,nl_marker,inline_string,max_inline_string_size))\n;\nvar should_abbreviate_QMARK_ = (cljs.core.count(inline_string) > max_inline_string_size);\nif(should_abbreviate_QMARK_){\nvar abbreviated_string = devtools.formatters.helpers.abbreviate_long_string(inline_string,devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"string-abbreviation-marker\",\"string-abbreviation-marker\",-347785112)),devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"string-prefix-limit\",\"string-prefix-limit\",1256106332)),devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"string-postfix-limit\",\"string-postfix-limit\",-1282205963)));\nvar abbreviated_string_markup = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"string-tag\",\"string-tag\",1639024494),quote_string(abbreviated_string)], null);\nvar string_with_nl_markers = string.replace(re_nl,[cljs.core.str.cljs$core$IFn$_invoke$arity$1(nl_marker),\"\\n\"].join(''));\nvar details_markup = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"expanded-string-tag\",\"expanded-string-tag\",-2125162127),string_with_nl_markers], null);\nreturn devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([string,abbreviated_string_markup,details_markup], 0));\n} else {\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"string-tag\",\"string-tag\",1639024494),quote_string(inline_string)], null);\n}\n});\ndevtools.formatters.markup._LT_preview_GT_ = (function devtools$formatters$markup$_LT_preview_GT_(value){\nreturn devtools.formatters.markup.print_via_writer.cljs$core$IFn$_invoke$arity$variadic(value,new cljs.core.Keyword(null,\"header-tag\",\"header-tag\",1594852433),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"max-print-level\",\"max-print-level\",-462237413))], 0));\n});\ndevtools.formatters.markup._LT_body_GT_ = (function devtools$formatters$markup$_LT_body_GT_(markup){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body-tag\",\"body-tag\",433527431),markup], null);\n});\ndevtools.formatters.markup._LT_aligned_body_GT_ = (function devtools$formatters$markup$_LT_aligned_body_GT_(markups_lists){\nvar prepend_li_tag = (function (line){\nif(cljs.core.truth_(line)){\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"aligned-li-tag\",\"aligned-li-tag\",1727029722)], null),line);\n} else {\nreturn null;\n}\n});\nvar aligned_lines = cljs.core.keep.cljs$core$IFn$_invoke$arity$2(prepend_li_tag,markups_lists);\nreturn devtools.formatters.markup._LT_body_GT_(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"standard-ol-no-margin-tag\",\"standard-ol-no-margin-tag\",583023747)], null),aligned_lines));\n});\ndevtools.formatters.markup._LT_standard_body_GT_ = (function devtools$formatters$markup$_LT_standard_body_GT_(var_args){\nvar args__4736__auto__ = [];\nvar len__4730__auto___35671 = arguments.length;\nvar i__4731__auto___35676 = (0);\nwhile(true){\nif((i__4731__auto___35676 < len__4730__auto___35671)){\nargs__4736__auto__.push((arguments[i__4731__auto___35676]));\n\nvar G__35678 = (i__4731__auto___35676 + (1));\ni__4731__auto___35676 = G__35678;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4737__auto__ = ((((1) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((1)),(0),null)):null);\nreturn devtools.formatters.markup._LT_standard_body_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4737__auto__);\n});\n\ndevtools.formatters.markup._LT_standard_body_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (markups_lists,p__35442){\nvar vec__35443 = p__35442;\nvar no_margin_QMARK_ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35443,(0),null);\nvar ol_tag = (cljs.core.truth_(no_margin_QMARK_)?new cljs.core.Keyword(null,\"standard-ol-no-margin-tag\",\"standard-ol-no-margin-tag\",583023747):new cljs.core.Keyword(null,\"standard-ol-tag\",\"standard-ol-tag\",1120081433));\nvar li_tag = (cljs.core.truth_(no_margin_QMARK_)?new cljs.core.Keyword(null,\"standard-li-no-margin-tag\",\"standard-li-no-margin-tag\",-844555468):new cljs.core.Keyword(null,\"standard-li-tag\",\"standard-li-tag\",-932749876));\nvar prepend_li_tag = ((function (ol_tag,li_tag,vec__35443,no_margin_QMARK_){\nreturn (function (line){\nif(cljs.core.truth_(line)){\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [li_tag], null),line);\n} else {\nreturn null;\n}\n});})(ol_tag,li_tag,vec__35443,no_margin_QMARK_))\n;\nvar lines_markups = cljs.core.keep.cljs$core$IFn$_invoke$arity$2(prepend_li_tag,markups_lists);\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [ol_tag], null),lines_markups);\n});\n\ndevtools.formatters.markup._LT_standard_body_GT_.cljs$lang$maxFixedArity = (1);\n\n/** @this {Function} */\ndevtools.formatters.markup._LT_standard_body_GT_.cljs$lang$applyTo = (function (seq35439){\nvar G__35440 = cljs.core.first(seq35439);\nvar seq35439__$1 = cljs.core.next(seq35439);\nvar self__4717__auto__ = this;\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__35440,seq35439__$1);\n});\n\ndevtools.formatters.markup._LT_standard_body_reference_GT_ = (function devtools$formatters$markup$_LT_standard_body_reference_GT_(o){\nreturn devtools.formatters.markup._LT_standard_body_GT_(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [devtools.formatters.markup._LT_reference_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([o], 0))], null)], null));\n});\ndevtools.formatters.markup._LT_index_GT_ = (function devtools$formatters$markup$_LT_index_GT_(value){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"index-tag\",\"index-tag\",693492486),value,new cljs.core.Keyword(null,\"line-index-separator\",\"line-index-separator\",-1735989246)], null);\n});\ndevtools.formatters.markup.body_line = (function devtools$formatters$markup$body_line(index,value){\nvar index_markup = devtools.formatters.markup._LT_index_GT_(index);\nvar value_markup = devtools.formatters.markup.print_via_writer.cljs$core$IFn$_invoke$arity$variadic(value,new cljs.core.Keyword(null,\"item-tag\",\"item-tag\",-988763304),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"body-line-max-print-level\",\"body-line-max-print-level\",571158623))], 0));\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index_markup,value_markup], null);\n});\ndevtools.formatters.markup.prepare_body_lines = (function devtools$formatters$markup$prepare_body_lines(data,starting_index){\nvar work = data;\nvar index = starting_index;\nvar lines = cljs.core.PersistentVector.EMPTY;\nwhile(true){\nif(cljs.core.empty_QMARK_(work)){\nreturn lines;\n} else {\nvar G__35688 = cljs.core.rest(work);\nvar G__35689 = (index + (1));\nvar G__35690 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(lines,devtools.formatters.markup.body_line(index,cljs.core.first(work)));\nwork = G__35688;\nindex = G__35689;\nlines = G__35690;\ncontinue;\n}\nbreak;\n}\n});\ndevtools.formatters.markup.body_lines = (function devtools$formatters$markup$body_lines(value,starting_index){\nvar seq = cljs.core.seq(value);\nvar max_number_body_items = devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"max-number-body-items\",\"max-number-body-items\",299914624));\nvar chunk = cljs.core.take.cljs$core$IFn$_invoke$arity$2(max_number_body_items,seq);\nvar rest = cljs.core.drop.cljs$core$IFn$_invoke$arity$2(max_number_body_items,seq);\nvar lines = devtools.formatters.markup.prepare_body_lines(chunk,starting_index);\nvar continue_QMARK_ = (!(cljs.core.empty_QMARK_(cljs.core.take.cljs$core$IFn$_invoke$arity$2((1),rest))));\nif((!(continue_QMARK_))){\nreturn lines;\n} else {\nvar more_label_markup = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body-items-more-tag\",\"body-items-more-tag\",867141569),new cljs.core.Keyword(null,\"body-items-more-label\",\"body-items-more-label\",-1561152123)], null);\nvar start_index = (starting_index + max_number_body_items);\nvar more_markup = devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([rest,more_label_markup,new cljs.core.Keyword(null,\"target\",\"target\",253001721),start_index], 0));\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(lines,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [more_markup], null));\n}\n});\ndevtools.formatters.markup._LT_details_GT_ = (function devtools$formatters$markup$_LT_details_GT_(value,starting_index){\nvar has_continuation_QMARK_ = (starting_index > (0));\nvar body_markup = devtools.formatters.markup._LT_standard_body_GT_.cljs$core$IFn$_invoke$arity$variadic(devtools.formatters.markup.body_lines(value,starting_index),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([has_continuation_QMARK_], 0));\nif(has_continuation_QMARK_){\nreturn body_markup;\n} else {\nreturn devtools.formatters.markup._LT_body_GT_(body_markup);\n}\n});\ndevtools.formatters.markup._LT_list_details_GT_ = (function devtools$formatters$markup$_LT_list_details_GT_(items,_opts){\nreturn devtools.formatters.markup._LT_aligned_body_GT_(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.list,items));\n});\ndevtools.formatters.markup._LT_list_GT_ = (function devtools$formatters$markup$_LT_list_GT_(var_args){\nvar args__4736__auto__ = [];\nvar len__4730__auto___35697 = arguments.length;\nvar i__4731__auto___35698 = (0);\nwhile(true){\nif((i__4731__auto___35698 < len__4730__auto___35697)){\nargs__4736__auto__.push((arguments[i__4731__auto___35698]));\n\nvar G__35700 = (i__4731__auto___35698 + (1));\ni__4731__auto___35698 = G__35700;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4737__auto__ = ((((2) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((2)),(0),null)):null);\nreturn devtools.formatters.markup._LT_list_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4737__auto__);\n});\n\ndevtools.formatters.markup._LT_list_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (items,max_count,p__35479){\nvar vec__35480 = p__35479;\nvar opts = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35480,(0),null);\nvar items_markups = cljs.core.take.cljs$core$IFn$_invoke$arity$2(max_count,items);\nvar more_count = (cljs.core.count(items) - max_count);\nvar more_QMARK_ = (more_count > (0));\nvar separator = (function (){var or__4131__auto__ = new cljs.core.Keyword(null,\"separator\",\"separator\",-1628749125).cljs$core$IFn$_invoke$arity$1(opts);\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"list-separator\",\"list-separator\",900562185);\n}\n})();\nvar more_symbol = ((more_QMARK_)?(function (){var temp__5718__auto__ = new cljs.core.Keyword(null,\"more-symbol\",\"more-symbol\",-2139760242).cljs$core$IFn$_invoke$arity$1(opts);\nif(cljs.core.truth_(temp__5718__auto__)){\nvar more_symbol = temp__5718__auto__;\nif(cljs.core.fn_QMARK_(more_symbol)){\nreturn (more_symbol.cljs$core$IFn$_invoke$arity$1 ? more_symbol.cljs$core$IFn$_invoke$arity$1(more_count) : more_symbol.call(null,more_count));\n} else {\nreturn more_symbol;\n}\n} else {\nreturn devtools.formatters.helpers.get_more_marker(more_count);\n}\n})():null);\nvar preview_markup = cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var or__4131__auto__ = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(opts);\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"list-tag\",\"list-tag\",1555796884);\n}\n})(),(function (){var or__4131__auto__ = new cljs.core.Keyword(null,\"open-symbol\",\"open-symbol\",674247825).cljs$core$IFn$_invoke$arity$1(opts);\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"list-open-symbol\",\"list-open-symbol\",-1162287443);\n}\n})()], null),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(separator,items_markups),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([((more_QMARK_)?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [separator,more_symbol], null):null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var or__4131__auto__ = new cljs.core.Keyword(null,\"close-symbol\",\"close-symbol\",1051951165).cljs$core$IFn$_invoke$arity$1(opts);\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"list-close-symbol\",\"list-close-symbol\",-1120016586);\n}\n})()], null)], 0));\nif(more_QMARK_){\nvar details_markup = new cljs.core.Keyword(null,\"details\",\"details\",1956795411).cljs$core$IFn$_invoke$arity$1(opts);\nvar default_details_fn = cljs.core.partial.cljs$core$IFn$_invoke$arity$3(devtools.formatters.markup._LT_list_details_GT_,items,opts);\nreturn devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([null,preview_markup,(function (){var or__4131__auto__ = details_markup;\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn default_details_fn;\n}\n})()], 0));\n} else {\nreturn preview_markup;\n}\n});\n\ndevtools.formatters.markup._LT_list_GT_.cljs$lang$maxFixedArity = (2);\n\n/** @this {Function} */\ndevtools.formatters.markup._LT_list_GT_.cljs$lang$applyTo = (function (seq35463){\nvar G__35465 = cljs.core.first(seq35463);\nvar seq35463__$1 = cljs.core.next(seq35463);\nvar G__35466 = cljs.core.first(seq35463__$1);\nvar seq35463__$2 = cljs.core.next(seq35463__$1);\nvar self__4717__auto__ = this;\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__35465,G__35466,seq35463__$2);\n});\n\ndevtools.formatters.markup._LT_meta_GT_ = (function devtools$formatters$markup$_LT_meta_GT_(metadata){\nvar body_fn = (function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"meta-body-tag\",\"meta-body-tag\",1689183121),devtools.formatters.markup._LT_preview_GT_(metadata)], null);\n});\nvar header = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"meta-header-tag\",\"meta-header-tag\",-1207812581),\"meta\"], null);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"meta-reference-tag\",\"meta-reference-tag\",914791936),devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([metadata,header,body_fn], 0))], null);\n});\ndevtools.formatters.markup._LT_meta_wrapper_GT_ = (function devtools$formatters$markup$_LT_meta_wrapper_GT_(var_args){\nvar args__4736__auto__ = [];\nvar len__4730__auto___35721 = arguments.length;\nvar i__4731__auto___35722 = (0);\nwhile(true){\nif((i__4731__auto___35722 < len__4730__auto___35721)){\nargs__4736__auto__.push((arguments[i__4731__auto___35722]));\n\nvar G__35723 = (i__4731__auto___35722 + (1));\ni__4731__auto___35722 = G__35723;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4737__auto__ = ((((1) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((1)),(0),null)):null);\nreturn devtools.formatters.markup._LT_meta_wrapper_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4737__auto__);\n});\n\ndevtools.formatters.markup._LT_meta_wrapper_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (metadata,children){\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"meta-wrapper-tag\",\"meta-wrapper-tag\",1927429038)], null),children,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [devtools.formatters.markup._LT_meta_GT_(metadata)], null)], 0));\n});\n\ndevtools.formatters.markup._LT_meta_wrapper_GT_.cljs$lang$maxFixedArity = (1);\n\n/** @this {Function} */\ndevtools.formatters.markup._LT_meta_wrapper_GT_.cljs$lang$applyTo = (function (seq35486){\nvar G__35487 = cljs.core.first(seq35486);\nvar seq35486__$1 = cljs.core.next(seq35486);\nvar self__4717__auto__ = this;\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__35487,seq35486__$1);\n});\n\ndevtools.formatters.markup._LT_function_details_GT_ = (function devtools$formatters$markup$_LT_function_details_GT_(fn_obj,ns,_name,arities,prefix){\nif(cljs.core.fn_QMARK_(fn_obj)){\n} else {\nthrow (new Error(\"Assert failed: (fn? fn-obj)\"));\n}\n\nvar arities__$1 = cljs.core.map.cljs$core$IFn$_invoke$arity$2(devtools.formatters.helpers.wrap_arity,arities);\nvar make_arity_markup_list = ((function (arities__$1){\nreturn (function (arity){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn-multi-arity-args-indent-tag\",\"fn-multi-arity-args-indent-tag\",-1931373734),prefix], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn-args-tag\",\"fn-args-tag\",549126831),arity], null)], null);\n});})(arities__$1))\n;\nvar arities_markupts_lists = (((cljs.core.count(arities__$1) > (1)))?cljs.core.map.cljs$core$IFn$_invoke$arity$2(make_arity_markup_list,arities__$1):null);\nvar ns_markups_list = (((!(cljs.core.empty_QMARK_(ns))))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ns-icon\",\"ns-icon\",725601214),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn-ns-name-tag\",\"fn-ns-name-tag\",-900073712),ns], null)], null):null);\nvar native_markups_list = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"native-icon\",\"native-icon\",-126040824),devtools.formatters.markup._LT_native_reference_GT_(fn_obj)], null);\nreturn devtools.formatters.markup._LT_aligned_body_GT_(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(arities_markupts_lists,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns_markups_list,native_markups_list], null)));\n});\ndevtools.formatters.markup._LT_arities_GT_ = (function devtools$formatters$markup$_LT_arities_GT_(arities){\nvar multi_arity_QMARK_ = (cljs.core.count(arities) > (1));\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn-args-tag\",\"fn-args-tag\",549126831),devtools.formatters.helpers.wrap_arity(((multi_arity_QMARK_)?devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"multi-arity-symbol\",\"multi-arity-symbol\",-420139653)):cljs.core.first(arities)))], null);\n});\ndevtools.formatters.markup._LT_function_GT_ = (function devtools$formatters$markup$_LT_function_GT_(fn_obj){\nif(cljs.core.fn_QMARK_(fn_obj)){\n} else {\nthrow (new Error(\"Assert failed: (fn? fn-obj)\"));\n}\n\nvar vec__35488 = devtools.munging.parse_fn_info(fn_obj);\nvar ns = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35488,(0),null);\nvar name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35488,(1),null);\nvar lambda_QMARK_ = cljs.core.empty_QMARK_(name);\nvar spacer_symbol = devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"spacer\",\"spacer\",2067425139));\nvar rest_symbol = devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"rest-symbol\",\"rest-symbol\",1021371174));\nvar multi_arity_symbol = devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"multi-arity-symbol\",\"multi-arity-symbol\",-420139653));\nvar arities = devtools.munging.extract_arities(fn_obj,true,spacer_symbol,multi_arity_symbol,rest_symbol);\nvar arities_markup = devtools.formatters.markup._LT_arities_GT_(arities);\nvar name_markup = (((!(lambda_QMARK_)))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn-name-tag\",\"fn-name-tag\",555823755),name], null):null);\nvar icon_markup = ((lambda_QMARK_)?new cljs.core.Keyword(null,\"lambda-icon\",\"lambda-icon\",980753546):new cljs.core.Keyword(null,\"fn-icon\",\"fn-icon\",-1412665288));\nvar prefix_markup = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn-prefix-tag\",\"fn-prefix-tag\",1947411856),icon_markup,name_markup], null);\nvar preview_markup = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn-header-tag\",\"fn-header-tag\",-1262068349),prefix_markup,arities_markup], null);\nvar details_fn = cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(devtools.formatters.markup._LT_function_details_GT_,fn_obj,ns,name,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([arities,prefix_markup], 0));\nreturn devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([fn_obj,preview_markup,details_fn], 0));\n});\ndevtools.formatters.markup._LT_type_basis_item_GT_ = (function devtools$formatters$markup$_LT_type_basis_item_GT_(basis_item){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"type-basis-item-tag\",\"type-basis-item-tag\",50612816),cljs.core.name(basis_item)], null);\n});\ndevtools.formatters.markup._LT_type_basis_GT_ = (function devtools$formatters$markup$_LT_type_basis_GT_(basis){\nvar item_markups = cljs.core.map.cljs$core$IFn$_invoke$arity$2(devtools.formatters.markup._LT_type_basis_item_GT_,basis);\nvar children_markups = cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"type-basis-item-separator\",\"type-basis-item-separator\",-2029193896),item_markups);\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"type-basis-tag\",\"type-basis-tag\",-2122159204)], null),children_markups);\n});\ndevtools.formatters.markup._LT_type_details_GT_ = (function devtools$formatters$markup$_LT_type_details_GT_(constructor_fn,ns,_name,basis){\nvar ns_markup = (((!(cljs.core.empty_QMARK_(ns))))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ns-icon\",\"ns-icon\",725601214),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn-ns-name-tag\",\"fn-ns-name-tag\",-900073712),ns], null)], null):null);\nvar basis_markup = ((cljs.core.empty_QMARK_(basis))?new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"empty-basis-symbol\",\"empty-basis-symbol\",-1971559593)], null):new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"basis-icon\",\"basis-icon\",1917779567),devtools.formatters.markup._LT_type_basis_GT_(basis)], null));\nvar native_markup = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"native-icon\",\"native-icon\",-126040824),devtools.formatters.markup._LT_native_reference_GT_(constructor_fn)], null);\nreturn devtools.formatters.markup._LT_aligned_body_GT_(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [basis_markup,ns_markup,native_markup], null));\n});\ndevtools.formatters.markup._LT_type_GT_ = (function devtools$formatters$markup$_LT_type_GT_(var_args){\nvar args__4736__auto__ = [];\nvar len__4730__auto___35742 = arguments.length;\nvar i__4731__auto___35743 = (0);\nwhile(true){\nif((i__4731__auto___35743 < len__4730__auto___35742)){\nargs__4736__auto__.push((arguments[i__4731__auto___35743]));\n\nvar G__35744 = (i__4731__auto___35743 + (1));\ni__4731__auto___35743 = G__35744;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4737__auto__ = ((((1) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((1)),(0),null)):null);\nreturn devtools.formatters.markup._LT_type_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4737__auto__);\n});\n\ndevtools.formatters.markup._LT_type_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (constructor_fn,p__35502){\nvar vec__35503 = p__35502;\nvar header_tag = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35503,(0),null);\nvar vec__35506 = devtools.munging.parse_constructor_info(constructor_fn);\nvar ns = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35506,(0),null);\nvar name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35506,(1),null);\nvar basis = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35506,(2),null);\nvar name_markup = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"type-name-tag\",\"type-name-tag\",-1317275511),name], null);\nvar preview_markup = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var or__4131__auto__ = header_tag;\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"type-header-tag\",\"type-header-tag\",1645372265);\n}\n})(),new cljs.core.Keyword(null,\"type-symbol\",\"type-symbol\",-941894755),name_markup], null);\nvar details_markup_fn = cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(devtools.formatters.markup._LT_type_details_GT_,constructor_fn,ns,name,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([basis], 0));\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"type-wrapper-tag\",\"type-wrapper-tag\",-1732366004),new cljs.core.Keyword(null,\"type-header-background\",\"type-header-background\",-810861696),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"type-ref-tag\",\"type-ref-tag\",2126727355),devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([constructor_fn,preview_markup,details_markup_fn], 0))], null)], null);\n});\n\ndevtools.formatters.markup._LT_type_GT_.cljs$lang$maxFixedArity = (1);\n\n/** @this {Function} */\ndevtools.formatters.markup._LT_type_GT_.cljs$lang$applyTo = (function (seq35495){\nvar G__35496 = cljs.core.first(seq35495);\nvar seq35495__$1 = cljs.core.next(seq35495);\nvar self__4717__auto__ = this;\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__35496,seq35495__$1);\n});\n\ndevtools.formatters.markup._LT_standalone_type_GT_ = (function devtools$formatters$markup$_LT_standalone_type_GT_(var_args){\nvar args__4736__auto__ = [];\nvar len__4730__auto___35747 = arguments.length;\nvar i__4731__auto___35748 = (0);\nwhile(true){\nif((i__4731__auto___35748 < len__4730__auto___35747)){\nargs__4736__auto__.push((arguments[i__4731__auto___35748]));\n\nvar G__35749 = (i__4731__auto___35748 + (1));\ni__4731__auto___35748 = G__35749;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4737__auto__ = ((((1) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((1)),(0),null)):null);\nreturn devtools.formatters.markup._LT_standalone_type_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4737__auto__);\n});\n\ndevtools.formatters.markup._LT_standalone_type_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (constructor_fn,p__35521){\nvar vec__35522 = p__35521;\nvar header_tag = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35522,(0),null);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"standalone-type-tag\",\"standalone-type-tag\",-1677164791),devtools.formatters.markup._LT_type_GT_.cljs$core$IFn$_invoke$arity$variadic(constructor_fn,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([header_tag], 0))], null);\n});\n\ndevtools.formatters.markup._LT_standalone_type_GT_.cljs$lang$maxFixedArity = (1);\n\n/** @this {Function} */\ndevtools.formatters.markup._LT_standalone_type_GT_.cljs$lang$applyTo = (function (seq35512){\nvar G__35513 = cljs.core.first(seq35512);\nvar seq35512__$1 = cljs.core.next(seq35512);\nvar self__4717__auto__ = this;\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__35513,seq35512__$1);\n});\n\ndevtools.formatters.markup._LT_protocol_method_arity_GT_ = (function devtools$formatters$markup$_LT_protocol_method_arity_GT_(arity_fn){\nreturn devtools.formatters.markup._LT_reference_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([arity_fn], 0));\n});\ndevtools.formatters.markup._LT_protocol_method_arities_details_GT_ = (function devtools$formatters$markup$_LT_protocol_method_arities_details_GT_(fns){\nreturn devtools.formatters.markup._LT_aligned_body_GT_(cljs.core.map.cljs$core$IFn$_invoke$arity$2(devtools.formatters.markup._LT_protocol_method_arity_GT_,fns));\n});\ndevtools.formatters.markup._LT_protocol_method_arities_GT_ = (function devtools$formatters$markup$_LT_protocol_method_arities_GT_(var_args){\nvar args__4736__auto__ = [];\nvar len__4730__auto___35753 = arguments.length;\nvar i__4731__auto___35754 = (0);\nwhile(true){\nif((i__4731__auto___35754 < len__4730__auto___35753)){\nargs__4736__auto__.push((arguments[i__4731__auto___35754]));\n\nvar G__35755 = (i__4731__auto___35754 + (1));\ni__4731__auto___35754 = G__35755;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4737__auto__ = ((((1) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((1)),(0),null)):null);\nreturn devtools.formatters.markup._LT_protocol_method_arities_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4737__auto__);\n});\n\ndevtools.formatters.markup._LT_protocol_method_arities_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (fns,p__35527){\nvar vec__35530 = p__35527;\nvar max_fns = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35530,(0),null);\nvar max_fns__$1 = (function (){var or__4131__auto__ = max_fns;\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"max-protocol-method-arities-list\",\"max-protocol-method-arities-list\",-45936465));\n}\n})();\nvar more_QMARK_ = (cljs.core.count(fns) > max_fns__$1);\nvar aritites_markups = cljs.core.map.cljs$core$IFn$_invoke$arity$2(devtools.formatters.markup._LT_protocol_method_arity_GT_,cljs.core.take.cljs$core$IFn$_invoke$arity$2(max_fns__$1,fns));\nvar preview_markup = cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"protocol-method-arities-header-tag\",\"protocol-method-arities-header-tag\",734407707),new cljs.core.Keyword(null,\"protocol-method-arities-header-open-symbol\",\"protocol-method-arities-header-open-symbol\",1704200465)], null),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"protocol-method-arities-list-header-separator\",\"protocol-method-arities-list-header-separator\",-115158954),aritites_markups),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([((more_QMARK_)?new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"protocol-method-arities-more-symbol\",\"protocol-method-arities-more-symbol\",-477018522)], null):null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"protocol-method-arities-header-close-symbol\",\"protocol-method-arities-header-close-symbol\",-1375237120)], null)], 0));\nif(more_QMARK_){\nvar details_markup_fn = cljs.core.partial.cljs$core$IFn$_invoke$arity$2(devtools.formatters.markup._LT_protocol_method_arities_details_GT_,fns);\nreturn devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([null,preview_markup,details_markup_fn], 0));\n} else {\nreturn preview_markup;\n}\n});\n\ndevtools.formatters.markup._LT_protocol_method_arities_GT_.cljs$lang$maxFixedArity = (1);\n\n/** @this {Function} */\ndevtools.formatters.markup._LT_protocol_method_arities_GT_.cljs$lang$applyTo = (function (seq35525){\nvar G__35526 = cljs.core.first(seq35525);\nvar seq35525__$1 = cljs.core.next(seq35525);\nvar self__4717__auto__ = this;\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__35526,seq35525__$1);\n});\n\ndevtools.formatters.markup._LT_protocol_method_GT_ = (function devtools$formatters$markup$_LT_protocol_method_GT_(name,arities){\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"protocol-method-tag\",\"protocol-method-tag\",2032279830),new cljs.core.Keyword(null,\"method-icon\",\"method-icon\",-1678775281),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"protocol-method-name-tag\",\"protocol-method-name-tag\",-1030376744),name], null),devtools.formatters.markup._LT_protocol_method_arities_GT_(arities)], null);\n});\ndevtools.formatters.markup._LT_protocol_details_GT_ = (function devtools$formatters$markup$_LT_protocol_details_GT_(obj,ns,_name,selector,_fast_QMARK_){\nvar protocol_obj = devtools.munging.get_protocol_object(selector);\nvar ns_markups_list = (((!(cljs.core.empty_QMARK_(ns))))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ns-icon\",\"ns-icon\",725601214),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"protocol-ns-name-tag\",\"protocol-ns-name-tag\",1832081510),ns], null)], null):null);\nvar native_markups_list = (((!((protocol_obj == null))))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"native-icon\",\"native-icon\",-126040824),devtools.formatters.markup._LT_native_reference_GT_(protocol_obj)], null):null);\nvar methods$ = devtools.munging.collect_protocol_methods(obj,selector);\nvar methods_markups = cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (protocol_obj,ns_markups_list,native_markups_list,methods$){\nreturn (function (p__35540){\nvar vec__35541 = p__35540;\nvar name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35541,(0),null);\nvar arities = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35541,(1),null);\nreturn devtools.formatters.markup._LT_protocol_method_GT_(name,arities);\n});})(protocol_obj,ns_markups_list,native_markups_list,methods$))\n,methods$);\nvar methods_markups_lists = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.list,methods_markups);\nreturn devtools.formatters.markup._LT_aligned_body_GT_(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(methods_markups_lists,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns_markups_list,native_markups_list], null)));\n});\ndevtools.formatters.markup._LT_protocol_GT_ = (function devtools$formatters$markup$_LT_protocol_GT_(var_args){\nvar args__4736__auto__ = [];\nvar len__4730__auto___35764 = arguments.length;\nvar i__4731__auto___35765 = (0);\nwhile(true){\nif((i__4731__auto___35765 < len__4730__auto___35764)){\nargs__4736__auto__.push((arguments[i__4731__auto___35765]));\n\nvar G__35766 = (i__4731__auto___35765 + (1));\ni__4731__auto___35765 = G__35766;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4737__auto__ = ((((2) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((2)),(0),null)):null);\nreturn devtools.formatters.markup._LT_protocol_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4737__auto__);\n});\n\ndevtools.formatters.markup._LT_protocol_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (obj,protocol,p__35550){\nvar vec__35551 = p__35550;\nvar tag = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35551,(0),null);\nvar map__35554 = protocol;\nvar map__35554__$1 = (((((!((map__35554 == null))))?(((((map__35554.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__35554.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__35554):map__35554);\nvar ns = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__35554__$1,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760));\nvar name = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__35554__$1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177));\nvar selector = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__35554__$1,new cljs.core.Keyword(null,\"selector\",\"selector\",762528866));\nvar fast_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__35554__$1,new cljs.core.Keyword(null,\"fast?\",\"fast?\",-1813307150));\nvar preview_markup = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var or__4131__auto__ = tag;\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"protocol-name-tag\",\"protocol-name-tag\",1508238310);\n}\n})(),name], null);\nvar prefix_markup = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(cljs.core.truth_(fast_QMARK_)?new cljs.core.Keyword(null,\"fast-protocol-tag\",\"fast-protocol-tag\",2066025065):new cljs.core.Keyword(null,\"slow-protocol-tag\",\"slow-protocol-tag\",2061129467)),new cljs.core.Keyword(null,\"protocol-background\",\"protocol-background\",1111513794)], null);\nif((!((obj == null)))){\nvar details_markup_fn = cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(devtools.formatters.markup._LT_protocol_details_GT_,obj,ns,name,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([selector,fast_QMARK_], 0));\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(prefix_markup,devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([obj,preview_markup,details_markup_fn], 0)));\n} else {\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(prefix_markup,preview_markup);\n}\n});\n\ndevtools.formatters.markup._LT_protocol_GT_.cljs$lang$maxFixedArity = (2);\n\n/** @this {Function} */\ndevtools.formatters.markup._LT_protocol_GT_.cljs$lang$applyTo = (function (seq35546){\nvar G__35547 = cljs.core.first(seq35546);\nvar seq35546__$1 = cljs.core.next(seq35546);\nvar G__35548 = cljs.core.first(seq35546__$1);\nvar seq35546__$2 = cljs.core.next(seq35546__$1);\nvar self__4717__auto__ = this;\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__35547,G__35548,seq35546__$2);\n});\n\ndevtools.formatters.markup._LT_more_protocols_GT_ = (function devtools$formatters$markup$_LT_more_protocols_GT_(more_count){\nvar fake_protocol = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),devtools.formatters.helpers.get_more_marker(more_count)], null);\nreturn devtools.formatters.markup._LT_protocol_GT_.cljs$core$IFn$_invoke$arity$variadic(null,fake_protocol,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"protocol-more-tag\",\"protocol-more-tag\",2098702865)], 0));\n});\ndevtools.formatters.markup._LT_protocols_list_GT_ = (function devtools$formatters$markup$_LT_protocols_list_GT_(var_args){\nvar args__4736__auto__ = [];\nvar len__4730__auto___35779 = arguments.length;\nvar i__4731__auto___35784 = (0);\nwhile(true){\nif((i__4731__auto___35784 < len__4730__auto___35779)){\nargs__4736__auto__.push((arguments[i__4731__auto___35784]));\n\nvar G__35785 = (i__4731__auto___35784 + (1));\ni__4731__auto___35784 = G__35785;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4737__auto__ = ((((2) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((2)),(0),null)):null);\nreturn devtools.formatters.markup._LT_protocols_list_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4737__auto__);\n});\n\ndevtools.formatters.markup._LT_protocols_list_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (obj,protocols,p__35565){\nvar vec__35566 = p__35565;\nvar max_protocols = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35566,(0),null);\nvar max_protocols__$1 = (function (){var or__4131__auto__ = max_protocols;\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"max-list-protocols\",\"max-list-protocols\",-537135129));\n}\n})();\nvar protocols_markups = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(devtools.formatters.markup._LT_protocol_GT_,obj),protocols);\nreturn devtools.formatters.markup._LT_list_GT_.cljs$core$IFn$_invoke$arity$variadic(protocols_markups,max_protocols__$1,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Keyword(null,\"protocols-header-tag\",\"protocols-header-tag\",-734413384),new cljs.core.Keyword(null,\"open-symbol\",\"open-symbol\",674247825),new cljs.core.Keyword(null,\"protocols-list-open-symbol\",\"protocols-list-open-symbol\",-729713043),new cljs.core.Keyword(null,\"close-symbol\",\"close-symbol\",1051951165),new cljs.core.Keyword(null,\"protocols-list-close-symbol\",\"protocols-list-close-symbol\",652072902),new cljs.core.Keyword(null,\"separator\",\"separator\",-1628749125),new cljs.core.Keyword(null,\"header-protocol-separator\",\"header-protocol-separator\",445531439),new cljs.core.Keyword(null,\"more-symbol\",\"more-symbol\",-2139760242),devtools.formatters.markup._LT_more_protocols_GT_], null)], 0));\n});\n\ndevtools.formatters.markup._LT_protocols_list_GT_.cljs$lang$maxFixedArity = (2);\n\n/** @this {Function} */\ndevtools.formatters.markup._LT_protocols_list_GT_.cljs$lang$applyTo = (function (seq35558){\nvar G__35559 = cljs.core.first(seq35558);\nvar seq35558__$1 = cljs.core.next(seq35558);\nvar G__35560 = cljs.core.first(seq35558__$1);\nvar seq35558__$2 = cljs.core.next(seq35558__$1);\nvar self__4717__auto__ = this;\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__35559,G__35560,seq35558__$2);\n});\n\ndevtools.formatters.markup._LT_field_GT_ = (function devtools$formatters$markup$_LT_field_GT_(name,value){\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"header-field-tag\",\"header-field-tag\",-1403476101),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"header-field-name-tag\",\"header-field-name-tag\",82291956),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name)], null),new cljs.core.Keyword(null,\"header-field-value-spacer\",\"header-field-value-spacer\",-1210630679),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"header-field-value-tag\",\"header-field-value-tag\",-1708691701),devtools.formatters.markup._LT_reference_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([devtools.formatters.markup._LT_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([value], 0)),(function (p1__35569_SHARP_){\nreturn devtools.formatters.state.set_managed_print_level(p1__35569_SHARP_,(1));\n})], 0))], null),new cljs.core.Keyword(null,\"header-field-separator\",\"header-field-separator\",-774444018)], null);\n});\ndevtools.formatters.markup._LT_fields_details_row_GT_ = (function devtools$formatters$markup$_LT_fields_details_row_GT_(field){\nvar vec__35571 = field;\nvar name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35571,(0),null);\nvar value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35571,(1),null);\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body-field-tr-tag\",\"body-field-tr-tag\",37280691),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body-field-td1-tag\",\"body-field-td1-tag\",256357429),new cljs.core.Keyword(null,\"body-field-symbol\",\"body-field-symbol\",256897537),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body-field-name-tag\",\"body-field-name-tag\",917867601),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name)], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body-field-td2-tag\",\"body-field-td2-tag\",94501500),new cljs.core.Keyword(null,\"body-field-value-spacer\",\"body-field-value-spacer\",1279911362)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body-field-td3-tag\",\"body-field-td3-tag\",-803119922),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body-field-value-tag\",\"body-field-value-tag\",800789079),devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([value], 0))], null)], null)], null);\n});\ndevtools.formatters.markup._LT_fields_GT_ = (function devtools$formatters$markup$_LT_fields_GT_(var_args){\nvar args__4736__auto__ = [];\nvar len__4730__auto___35791 = arguments.length;\nvar i__4731__auto___35792 = (0);\nwhile(true){\nif((i__4731__auto___35792 < len__4730__auto___35791)){\nargs__4736__auto__.push((arguments[i__4731__auto___35792]));\n\nvar G__35795 = (i__4731__auto___35792 + (1));\ni__4731__auto___35792 = G__35795;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4737__auto__ = ((((1) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((1)),(0),null)):null);\nreturn devtools.formatters.markup._LT_fields_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4737__auto__);\n});\n\ndevtools.formatters.markup._LT_fields_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (fields,p__35576){\nvar vec__35578 = p__35576;\nvar max_fields = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35578,(0),null);\nif((cljs.core.count(fields) === (0))){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fields-header-tag\",\"fields-header-tag\",1339134308),new cljs.core.Keyword(null,\"fields-header-no-fields-symbol\",\"fields-header-no-fields-symbol\",-1749204979)], null);\n} else {\nvar max_fields__$1 = (function (){var or__4131__auto__ = max_fields;\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"max-instance-header-fields\",\"max-instance-header-fields\",-126007269));\n}\n})();\nvar more_QMARK_ = (cljs.core.count(fields) > max_fields__$1);\nvar fields_markups = cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (max_fields__$1,more_QMARK_,vec__35578,max_fields){\nreturn (function (p__35582){\nvar vec__35583 = p__35582;\nvar name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35583,(0),null);\nvar value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35583,(1),null);\nreturn devtools.formatters.markup._LT_field_GT_(name,value);\n});})(max_fields__$1,more_QMARK_,vec__35578,max_fields))\n,cljs.core.take.cljs$core$IFn$_invoke$arity$2(max_fields__$1,fields));\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fields-header-tag\",\"fields-header-tag\",1339134308),new cljs.core.Keyword(null,\"fields-header-open-symbol\",\"fields-header-open-symbol\",-26243798)], null),fields_markups,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [((more_QMARK_)?new cljs.core.Keyword(null,\"more-fields-symbol\",\"more-fields-symbol\",720022882):null),new cljs.core.Keyword(null,\"fields-header-close-symbol\",\"fields-header-close-symbol\",1615181116)], null)], 0));\n}\n});\n\ndevtools.formatters.markup._LT_fields_GT_.cljs$lang$maxFixedArity = (1);\n\n/** @this {Function} */\ndevtools.formatters.markup._LT_fields_GT_.cljs$lang$applyTo = (function (seq35574){\nvar G__35575 = cljs.core.first(seq35574);\nvar seq35574__$1 = cljs.core.next(seq35574);\nvar self__4717__auto__ = this;\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__35575,seq35574__$1);\n});\n\ndevtools.formatters.markup._LT_fields_details_GT_ = (function devtools$formatters$markup$_LT_fields_details_GT_(fields,obj){\nvar protocols = devtools.munging.scan_protocols(obj);\nvar has_protocols_QMARK_ = (!(cljs.core.empty_QMARK_(protocols)));\nvar fields_markup = (((!((cljs.core.count(fields) === (0)))))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fields-icon\",\"fields-icon\",-436030420),cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"instance-body-fields-table-tag\",\"instance-body-fields-table-tag\",1306340776)], null),cljs.core.map.cljs$core$IFn$_invoke$arity$2(devtools.formatters.markup._LT_fields_details_row_GT_,fields))], null):null);\nvar protocols_list_markup = ((has_protocols_QMARK_)?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"protocols-icon\",\"protocols-icon\",-517302494),devtools.formatters.markup._LT_protocols_list_GT_(obj,protocols)], null):null);\nvar native_markup = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"native-icon\",\"native-icon\",-126040824),devtools.formatters.markup._LT_native_reference_GT_(obj)], null);\nreturn devtools.formatters.markup._LT_aligned_body_GT_(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [fields_markup,protocols_list_markup,native_markup], null));\n});\ndevtools.formatters.markup._LT_instance_GT_ = (function devtools$formatters$markup$_LT_instance_GT_(value){\nvar constructor_fn = devtools.formatters.helpers.get_constructor(value);\nvar vec__35586 = devtools.munging.parse_constructor_info(constructor_fn);\nvar _ns = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35586,(0),null);\nvar _name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35586,(1),null);\nvar basis = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35586,(2),null);\nvar custom_printing_QMARK_ = (((!((value == null))))?(((((value.cljs$lang$protocol_mask$partition0$ & (2147483648))) || ((cljs.core.PROTOCOL_SENTINEL === value.cljs$core$IPrintWithWriter$))))?true:false):false);\nvar type_markup = devtools.formatters.markup._LT_type_GT_.cljs$core$IFn$_invoke$arity$variadic(constructor_fn,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"instance-type-header-tag\",\"instance-type-header-tag\",-1015702989)], 0));\nvar fields = devtools.formatters.helpers.fetch_fields_values(value,basis);\nvar fields_markup = devtools.formatters.markup._LT_fields_GT_.cljs$core$IFn$_invoke$arity$variadic(fields,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([((custom_printing_QMARK_)?(0):null)], 0));\nvar fields_details_markup_fn = ((function (constructor_fn,vec__35586,_ns,_name,basis,custom_printing_QMARK_,type_markup,fields,fields_markup){\nreturn (function (){\nreturn devtools.formatters.markup._LT_fields_details_GT_(fields,value);\n});})(constructor_fn,vec__35586,_ns,_name,basis,custom_printing_QMARK_,type_markup,fields,fields_markup))\n;\nvar fields_preview_markup = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"instance-value-tag\",\"instance-value-tag\",-1739593896),devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([value,fields_markup,fields_details_markup_fn], 0))], null);\nvar custom_printing_markup = ((custom_printing_QMARK_)?new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"instance-custom-printing-wrapper-tag\",\"instance-custom-printing-wrapper-tag\",1461890684),new cljs.core.Keyword(null,\"instance-custom-printing-background\",\"instance-custom-printing-background\",-248433646),devtools.formatters.markup.print_via_protocol(value,new cljs.core.Keyword(null,\"instance-custom-printing-tag\",\"instance-custom-printing-tag\",-67034432))], null):null);\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"instance-header-tag\",\"instance-header-tag\",903623870),new cljs.core.Keyword(null,\"instance-header-background\",\"instance-header-background\",1510357287),fields_preview_markup,custom_printing_markup,type_markup], null);\n});\ndevtools.formatters.markup._LT_header_GT_ = (function devtools$formatters$markup$_LT_header_GT_(value){\nreturn devtools.formatters.markup._LT_cljs_land_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([devtools.formatters.markup._LT_preview_GT_(value)], 0));\n});\ndevtools.formatters.markup._LT_surrogate_header_GT_ = (function devtools$formatters$markup$_LT_surrogate_header_GT_(surrogate){\nvar or__4131__auto__ = devtools.formatters.templating.get_surrogate_header(surrogate);\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn devtools.formatters.markup._LT_preview_GT_(devtools.formatters.templating.get_surrogate_target(surrogate));\n}\n});\ndevtools.formatters.markup._LT_surrogate_target_GT_ = (function devtools$formatters$markup$_LT_surrogate_target_GT_(surrogate){\nvar target = devtools.formatters.templating.get_surrogate_target(surrogate);\nif(cljs.core.seqable_QMARK_(target)){\nvar starting_index = devtools.formatters.templating.get_surrogate_start_index(surrogate);\nreturn devtools.formatters.markup._LT_details_GT_(target,starting_index);\n} else {\nreturn devtools.formatters.markup._LT_standard_body_reference_GT_(target);\n}\n});\ndevtools.formatters.markup._LT_surrogate_body_GT_ = (function devtools$formatters$markup$_LT_surrogate_body_GT_(surrogate){\nvar temp__5718__auto__ = devtools.formatters.templating.get_surrogate_body(surrogate);\nif(cljs.core.truth_(temp__5718__auto__)){\nvar body = temp__5718__auto__;\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"target\",\"target\",253001721),body)){\nreturn devtools.formatters.markup._LT_surrogate_target_GT_(surrogate);\n} else {\nreturn body;\n}\n} else {\nreturn null;\n}\n});\ndevtools.formatters.markup._LT_atomic_GT_ = (function devtools$formatters$markup$_LT_atomic_GT_(value){\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\"render-nils\",\"render-nils\",1360008699),value,cljs.core.nil_QMARK_))){\nreturn devtools.formatters.markup._LT_nil_GT_();\n} else {\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\"render-bools\",\"render-bools\",1793659724),value,devtools.formatters.helpers.bool_QMARK_))){\nreturn devtools.formatters.markup._LT_bool_GT_(value);\n} else {\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\"render-strings\",\"render-strings\",-1497177335),value,cljs.core.string_QMARK_))){\nreturn devtools.formatters.markup._LT_string_GT_(value);\n} else {\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\"render-numbers\",\"render-numbers\",-1385392009),value,cljs.core.number_QMARK_))){\nreturn devtools.formatters.markup._LT_number_GT_(value);\n} else {\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\"render-keywords\",\"render-keywords\",1200455875),value,cljs.core.keyword_QMARK_))){\nreturn devtools.formatters.markup._LT_keyword_GT_(value);\n} else {\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\"render-symbols\",\"render-symbols\",-887705016),value,cljs.core.symbol_QMARK_))){\nreturn devtools.formatters.markup._LT_symbol_GT_(value);\n} else {\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\"render-instances\",\"render-instances\",-1803579686),value,devtools.formatters.helpers.should_render_instance_QMARK_))){\nreturn devtools.formatters.markup._LT_instance_GT_(value);\n} else {\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\"render-types\",\"render-types\",-129927851),value,devtools.formatters.helpers.cljs_type_QMARK_))){\nreturn devtools.formatters.markup._LT_standalone_type_GT_(value);\n} else {\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\"render-functions\",\"render-functions\",1273333002),value,devtools.formatters.helpers.cljs_function_QMARK_))){\nreturn devtools.formatters.markup._LT_function_GT_(value);\n} else {\nreturn null;\n}\n}\n}\n}\n}\n}\n}\n}\n}\n});\ndevtools.formatters.markup.get_markup_db = (function devtools$formatters$markup$get_markup_db(){\nif((devtools.formatters.markup._STAR_markup_db_STAR_ == null)){\ndevtools.formatters.markup._STAR_markup_db_STAR_ = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"aligned-body\",\"aligned-body\",-2124118747),new cljs.core.Keyword(null,\"native-reference\",\"native-reference\",-2013708658),new cljs.core.Keyword(null,\"reference-surrogate\",\"reference-surrogate\",274031791),new cljs.core.Keyword(null,\"keyword\",\"keyword\",811389747),new cljs.core.Keyword(null,\"protocol-method-arities\",\"protocol-method-arities\",-545542044),new cljs.core.Keyword(null,\"surrogate-header\",\"surrogate-header\",1705524526),new cljs.core.Keyword(null,\"details\",\"details\",1956795411),new cljs.core.Keyword(null,\"more-protocols\",\"more-protocols\",359555207),new cljs.core.Keyword(null,\"field\",\"field\",-1302436500),new cljs.core.Keyword(null,\"symbol\",\"symbol\",-1038572696),new cljs.core.Keyword(null,\"fields-details\",\"fields-details\",-269572714),new cljs.core.Keyword(null,\"atomic\",\"atomic\",-120459460),new cljs.core.Keyword(null,\"string\",\"string\",-1989541586),new cljs.core.Keyword(null,\"standard-body\",\"standard-body\",-1563020798),new cljs.core.Keyword(null,\"type-basis\",\"type-basis\",-1825246054),new cljs.core.Keyword(null,\"bool\",\"bool\",1444635321),new cljs.core.Keyword(null,\"standalone-type\",\"standalone-type\",-802565278),new cljs.core.Keyword(null,\"preview\",\"preview\",451279890),new cljs.core.Keyword(null,\"header\",\"header\",119441134),new cljs.core.Keyword(null,\"protocol-method\",\"protocol-method\",1794903206),new cljs.core.Keyword(null,\"cljs-land\",\"cljs-land\",1255896927),new cljs.core.Keyword(null,\"type-basis-item\",\"type-basis-item\",-1662150132),new cljs.core.Keyword(null,\"protocol-method-arities-details\",\"protocol-method-arities-details\",1944702118),new cljs.core.Keyword(null,\"fields-details-row\",\"fields-details-row\",2066344936),new cljs.core.Keyword(null,\"standard-body-reference\",\"standard-body-reference\",1513301561),new cljs.core.Keyword(null,\"surrogate-body\",\"surrogate-body\",-1618569585),new cljs.core.Keyword(null,\"expandable\",\"expandable\",-704609097),new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"protocol-method-arity\",\"protocol-method-arity\",-1861927833),new cljs.core.Keyword(null,\"raw-surrogate\",\"raw-surrogate\",904931181),new cljs.core.Keyword(null,\"type-details\",\"type-details\",477755178),new cljs.core.Keyword(null,\"list\",\"list\",765357683),new cljs.core.Keyword(null,\"meta-wrapper\",\"meta-wrapper\",-1989845587),new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118),new cljs.core.Keyword(null,\"index\",\"index\",-1531685915),new cljs.core.Keyword(null,\"surrogate\",\"surrogate\",2122284260),new cljs.core.Keyword(null,\"protocols-list\",\"protocols-list\",371434187),new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964),new cljs.core.Keyword(null,\"instance\",\"instance\",-2121349050),new cljs.core.Keyword(null,\"reference\",\"reference\",-1711695023),new cljs.core.Keyword(null,\"function-details\",\"function-details\",1501147310),new cljs.core.Keyword(null,\"function\",\"function\",-2127255473),new cljs.core.Keyword(null,\"arities\",\"arities\",-1781122917),new cljs.core.Keyword(null,\"header-expander\",\"header-expander\",-1606368578),new cljs.core.Keyword(null,\"list-details\",\"list-details\",46031799),new cljs.core.Keyword(null,\"circular-reference\",\"circular-reference\",970308727),new cljs.core.Keyword(null,\"surrogate-target\",\"surrogate-target\",-1262730220),new cljs.core.Keyword(null,\"fields\",\"fields\",-1932066230),new cljs.core.Keyword(null,\"nil\",\"nil\",99600501),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),new cljs.core.Keyword(null,\"number\",\"number\",1570378438),new cljs.core.Keyword(null,\"protocol-details\",\"protocol-details\",-121549824)],[devtools.formatters.markup._LT_aligned_body_GT_,devtools.formatters.markup._LT_native_reference_GT_,devtools.formatters.markup._LT_reference_surrogate_GT_,devtools.formatters.markup._LT_keyword_GT_,devtools.formatters.markup._LT_protocol_method_arities_GT_,devtools.formatters.markup._LT_surrogate_header_GT_,devtools.formatters.markup._LT_details_GT_,devtools.formatters.markup._LT_more_protocols_GT_,devtools.formatters.markup._LT_field_GT_,devtools.formatters.markup._LT_symbol_GT_,devtools.formatters.markup._LT_fields_details_GT_,devtools.formatters.markup._LT_atomic_GT_,devtools.formatters.markup._LT_string_GT_,devtools.formatters.markup._LT_standard_body_GT_,devtools.formatters.markup._LT_type_basis_GT_,devtools.formatters.markup._LT_bool_GT_,devtools.formatters.markup._LT_standalone_type_GT_,devtools.formatters.markup._LT_preview_GT_,devtools.formatters.markup._LT_header_GT_,devtools.formatters.markup._LT_protocol_method_GT_,devtools.formatters.markup._LT_cljs_land_GT_,devtools.formatters.markup._LT_type_basis_item_GT_,devtools.formatters.markup._LT_protocol_method_arities_details_GT_,devtools.formatters.markup._LT_fields_details_row_GT_,devtools.formatters.markup._LT_standard_body_reference_GT_,devtools.formatters.markup._LT_surrogate_body_GT_,devtools.formatters.markup._LT_expandable_GT_,devtools.formatters.markup._LT_type_GT_,devtools.formatters.markup._LT_protocol_method_arity_GT_,devtools.formatters.markup._LT_raw_surrogate_GT_,devtools.formatters.markup._LT_type_details_GT_,devtools.formatters.markup._LT_list_GT_,devtools.formatters.markup._LT_meta_wrapper_GT_,devtools.formatters.markup._LT_protocol_GT_,devtools.formatters.markup._LT_index_GT_,devtools.formatters.markup._LT_surrogate_GT_,devtools.formatters.markup._LT_protocols_list_GT_,devtools.formatters.markup._LT_meta_GT_,devtools.formatters.markup._LT_instance_GT_,devtools.formatters.markup._LT_reference_GT_,devtools.formatters.markup._LT_function_details_GT_,devtools.formatters.markup._LT_function_GT_,devtools.formatters.markup._LT_arities_GT_,devtools.formatters.markup._LT_header_expander_GT_,devtools.formatters.markup._LT_list_details_GT_,devtools.formatters.markup._LT_circular_reference_GT_,devtools.formatters.markup._LT_surrogate_target_GT_,devtools.formatters.markup._LT_fields_GT_,devtools.formatters.markup._LT_nil_GT_,devtools.formatters.markup._LT_body_GT_,devtools.formatters.markup._LT_number_GT_,devtools.formatters.markup._LT_protocol_details_GT_]);\n} else {\n}\n\nreturn devtools.formatters.markup._STAR_markup_db_STAR_;\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","devtools/formatters/markup.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",31],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader"],"~:use-macros",["^ ","~$emit-markup-db","~$devtools.formatters.markup"],"~:excludes",["~#set",[]],"~:macros",["^ ","^?",["^ ","~:arglists",["~#list",[[]]],"^7",9,"^8",1,"^6","devtools/formatters/markup.clj","~:name","~$devtools.formatters.markup/emit-markup-db","~:ns","^@","~:macro",true]],"^F","^@","~:op","^H","~:imports",null,"~:requires",["^ ","~$devtools.formatters.helpers","^M","~$devtools.formatters.printing","^N","~$devtools.formatters.state","^O","~$devtools.formatters.templating","^P","~$devtools.munging","^Q","~$munging","^Q","~$cljs.core","^S","~$goog","^T"],"~:seen",["^B",["~:require","~:require-macros"]],"~:uses",["^ ","~$expandable?","^M","~$should-render?","^M","~$set-managed-print-level","^O","~$bool?","^M","~$cljs-instance?","^M","~$get-surrogate-body","^P","~$get-constructor","^M","~$managed-print-via-writer","^N","~$pref","^M","~$wrap-arity","^M","~$cljs-function?","^M","~$get-more-marker","^M","~$fetch-fields-values","^M","~$managed-print-via-protocol","^N","~$abbreviated?","^M","~$get-surrogate-header","^P","~$reset-depth-limits","^O","~$get-surrogate-target","^P","~$set-prevent-recursion","^O","~$get-surrogate-start-index","^P","~$abbreviate-long-string","^M","~$cljs-type?","^M","~$should-render-instance?","^M"],"^W",["^ ","^@","^@","^S","^S","^Q","^Q","^R","^Q"],"~:form",["^E",["~$ns","^@",["^E",["^W",["^@","~:refer",["^?"]]]],["^E",["^V",["^M","^1F",["^10","^17","^1B","^11","^1C","^Y","^1;","^1A","^13","^15","^Z","^18","^16","^19"]],["^N","^1F",["^14","^1:"]],["^O","^1F",["^1?","^[","^1="]],["^P","^1F",["^12","^1>","^1@","^1<"]],["^Q","~:as","^R"]]]]],"~:flags",["^ ","^W",["^B",[]],"^V",["^B",[]]],"~:js-deps",["^ "],"~:deps",["^T","^S","^M","^N","^O","^P","^Q"]],"^H","^@","~:resource-id",["~:shadow.build.classpath/resource","devtools/formatters/markup.cljs"],"~:compiled-at",1562160554113,"~:resource-name","devtools/formatters/markup.cljs","~:warnings",[],"~:source","(ns devtools.formatters.markup\n  (:require-macros [devtools.formatters.markup :refer [emit-markup-db]])\n  (:require [devtools.formatters.helpers :refer [bool? cljs-function? cljs-type? cljs-instance?\n                                                 should-render-instance? expandable? abbreviated?\n                                                 abbreviate-long-string get-constructor pref should-render?\n                                                 get-more-marker wrap-arity fetch-fields-values]]\n            [devtools.formatters.printing :refer [managed-print-via-writer managed-print-via-protocol]]\n            [devtools.formatters.state :refer [set-prevent-recursion set-managed-print-level reset-depth-limits]]\n            [devtools.formatters.templating :refer [get-surrogate-body\n                                                    get-surrogate-target\n                                                    get-surrogate-start-index\n                                                    get-surrogate-header]]\n            [devtools.munging :as munging]))\n\n; reusable hiccup-like templates\n\n(declare get-markup-db)\n\n; -- cljs printing  ---------------------------------------------------------------------------------------------------------\n\n(defn print-with [method value tag & [max-level]]\n  (let [job-fn #(method value tag (get-markup-db))]\n    (if (some? max-level)\n      (binding [*print-level* (inc max-level)]                                                                                ; when printing do at most print-level deep recursion\n        (job-fn))\n      (job-fn))))\n\n(defn print-via-writer [value tag & [max-level]]\n  (print-with managed-print-via-writer value tag max-level))\n\n(defn print-via-protocol [value tag & [max-level]]\n  (print-with managed-print-via-protocol value tag max-level))\n\n; -- references -------------------------------------------------------------------------------------------------------------\n\n(defn <expandable> [& children]\n  (let [inner-markup (concat [:expandable-inner-tag] children)]\n    [:expandable-tag :expandable-symbol inner-markup]))\n\n(defn <raw-surrogate> [& args]\n  (concat [\"surrogate\"] args))\n\n(defn <surrogate> [& [object header body start-index]]\n  (let [header (if (some? body) (<expandable> header) header)]\n    (<raw-surrogate> object header body start-index)))\n\n(defn <reference> [& args]\n  (concat [\"reference\"] args))\n\n(defn <reference-surrogate> [& args]\n  (<reference> (apply <surrogate> args)))\n\n(defn <circular-reference> [& children]\n  (<reference-surrogate> nil [:circular-reference-tag :circular-ref-icon] (concat [:circular-reference-body-tag] children)))\n\n(defn <native-reference> [object]\n  (let [reference (<reference> object #(set-prevent-recursion % true))]\n    [:native-reference-wrapper-tag :native-reference-background [:native-reference-tag reference]]))\n\n(defn <header-expander> [object]\n  (<reference> (<raw-surrogate> object :header-expander-symbol :target) reset-depth-limits))\n\n; -- simple markup ----------------------------------------------------------------------------------------------------------\n\n(defn <cljs-land> [& children]\n  (concat [:cljs-land-tag] children))\n\n(defn <nil> []\n  ; this code is duplicated in templating.cljs, see make-reference\n  [:nil-tag :nil-label])\n\n(defn <bool> [bool]\n  [:bool-tag (str bool)])\n\n(defn <keyword> [keyword]\n  [:keyword-tag (str keyword)])\n\n(defn <symbol> [symbol]\n  [:symbol-tag (str symbol)])\n\n(defn <number> [number]\n  (if (integer? number)\n    [:integer-tag number]\n    [:float-tag number]))\n\n; -- string markup ----------------------------------------------------------------------------------------------------------\n\n(defn <string> [string]\n  (let [dq (pref :dq)\n        re-nl (js/RegExp. \"\\n\" \"g\")\n        nl-marker (pref :new-line-string-replacer)\n        inline-string (.replace string re-nl nl-marker)\n        max-inline-string-size (+ (pref :string-prefix-limit) (pref :string-postfix-limit))\n        quote-string (fn [s] (str dq s dq))\n        should-abbreviate? (> (count inline-string) max-inline-string-size)]\n    (if should-abbreviate?\n      (let [abbreviated-string (abbreviate-long-string inline-string\n                                                       (pref :string-abbreviation-marker)\n                                                       (pref :string-prefix-limit)\n                                                       (pref :string-postfix-limit))\n            abbreviated-string-markup [:string-tag (quote-string abbreviated-string)]\n            string-with-nl-markers (.replace string re-nl (str nl-marker \"\\n\"))\n            details-markup [:expanded-string-tag string-with-nl-markers]]\n        (<reference-surrogate> string abbreviated-string-markup details-markup))\n      [:string-tag (quote-string inline-string)])))\n\n; -- generic preview markup -------------------------------------------------------------------------------------------------\n\n(defn <preview> [value]\n  (print-via-writer value :header-tag (pref :max-print-level)))\n\n; -- body-related templates -------------------------------------------------------------------------------------------------\n\n(defn <body> [markup]\n  [:body-tag markup])\n\n(defn <aligned-body> [markups-lists]\n  (let [prepend-li-tag (fn [line]\n                         (if line\n                           (concat [:aligned-li-tag] line)))\n        aligned-lines (keep prepend-li-tag markups-lists)]\n    (<body> (concat [:standard-ol-no-margin-tag] aligned-lines))))\n\n(defn <standard-body> [markups-lists & [no-margin?]]\n  (let [ol-tag (if no-margin? :standard-ol-no-margin-tag :standard-ol-tag)\n        li-tag (if no-margin? :standard-li-no-margin-tag :standard-li-tag)\n        prepend-li-tag (fn [line]\n                         (if line\n                           (concat [li-tag] line)))\n        lines-markups (keep prepend-li-tag markups-lists)]\n    (concat [ol-tag] lines-markups)))\n\n(defn <standard-body-reference> [o]\n  (<standard-body> [[(<reference> o)]]))\n\n; -- generic details markup -------------------------------------------------------------------------------------------------\n\n(defn <index> [value]\n  [:index-tag value :line-index-separator])\n\n(defn- body-line [index value]\n  (let [index-markup (<index> index)\n        value-markup (print-via-writer value :item-tag (pref :body-line-max-print-level))]\n    [index-markup value-markup]))\n\n; TODO: this fn is screaming for rewrite\n(defn- prepare-body-lines [data starting-index]\n  (loop [work data\n         index starting-index\n         lines []]\n    (if (empty? work)\n      lines\n      (recur (rest work) (inc index) (conj lines (body-line index (first work)))))))\n\n(defn- body-lines [value starting-index]\n  (let [seq (seq value)\n        max-number-body-items (pref :max-number-body-items)\n        chunk (take max-number-body-items seq)\n        rest (drop max-number-body-items seq)\n        lines (prepare-body-lines chunk starting-index)\n        continue? (not (empty? (take 1 rest)))]\n    (if-not continue?\n      lines\n      (let [more-label-markup [:body-items-more-tag :body-items-more-label]\n            start-index (+ starting-index max-number-body-items)\n            more-markup (<reference-surrogate> rest more-label-markup :target start-index)]\n        (conj lines [more-markup])))))\n\n(defn <details> [value starting-index]\n  (let [has-continuation? (pos? starting-index)\n        body-markup (<standard-body> (body-lines value starting-index) has-continuation?)]\n    (if has-continuation?\n      body-markup\n      (<body> body-markup))))\n\n; -- generic list template --------------------------------------------------------------------------------------------------\n\n(defn <list-details> [items _opts]\n  (<aligned-body> (map list items)))\n\n(defn <list> [items max-count & [opts]]\n  (let [items-markups (take max-count items)\n        more-count (- (count items) max-count)\n        more? (pos? more-count)\n        separator (or (:separator opts) :list-separator)\n        more-symbol (if more?\n                      (if-let [more-symbol (:more-symbol opts)]\n                        (if (fn? more-symbol)\n                          (more-symbol more-count)\n                          more-symbol)\n                        (get-more-marker more-count)))\n        preview-markup (concat [(or (:tag opts) :list-tag)\n                                (or (:open-symbol opts) :list-open-symbol)]\n                               (interpose separator items-markups)\n                               (if more? [separator more-symbol])\n                               [(or (:close-symbol opts) :list-close-symbol)])]\n    (if more?\n      (let [details-markup (:details opts)\n            default-details-fn (partial <list-details> items opts)]\n        (<reference-surrogate> nil preview-markup (or details-markup default-details-fn)))\n      preview-markup)))\n\n; -- mete-related markup ----------------------------------------------------------------------------------------------------\n\n(defn <meta> [metadata]\n  (let [body-fn (fn [] [:meta-body-tag (<preview> metadata)])\n        header [:meta-header-tag \"meta\"]]\n    [:meta-reference-tag (<reference-surrogate> metadata header body-fn)]))                                                   ; body must be lazy, see #35\n\n(defn <meta-wrapper> [metadata & children]\n  (concat [:meta-wrapper-tag] children [(<meta> metadata)]))\n\n; -- function markup --------------------------------------------------------------------------------------------------------\n\n(defn <function-details> [fn-obj ns _name arities prefix]\n  {:pre [(fn? fn-obj)]}\n  (let [arities (map wrap-arity arities)\n        make-arity-markup-list (fn [arity]\n                                 [[:fn-multi-arity-args-indent-tag prefix]\n                                  [:fn-args-tag arity]])\n        arities-markupts-lists (if (> (count arities) 1) (map make-arity-markup-list arities))\n        ns-markups-list (if-not (empty? ns) [:ns-icon [:fn-ns-name-tag ns]])\n        native-markups-list [:native-icon (<native-reference> fn-obj)]]\n    (<aligned-body> (concat arities-markupts-lists [ns-markups-list native-markups-list]))))\n\n(defn <arities> [arities]\n  (let [multi-arity? (> (count arities) 1)]\n    [:fn-args-tag (wrap-arity (if multi-arity?\n                                (pref :multi-arity-symbol)\n                                (first arities)))]))\n\n(defn <function> [fn-obj]\n  {:pre [(fn? fn-obj)]}\n  (let [[ns name] (munging/parse-fn-info fn-obj)\n        lambda? (empty? name)\n        spacer-symbol (pref :spacer)\n        rest-symbol (pref :rest-symbol)\n        multi-arity-symbol (pref :multi-arity-symbol)\n        arities (munging/extract-arities fn-obj true spacer-symbol multi-arity-symbol rest-symbol)\n        arities-markup (<arities> arities)\n        name-markup (if-not lambda? [:fn-name-tag name])\n        icon-markup (if lambda? :lambda-icon :fn-icon)\n        prefix-markup [:fn-prefix-tag icon-markup name-markup]\n        preview-markup [:fn-header-tag prefix-markup arities-markup]\n        details-fn (partial <function-details> fn-obj ns name arities prefix-markup)]\n    (<reference-surrogate> fn-obj preview-markup details-fn)))\n\n; -- type markup ------------------------------------------------------------------------------------------------------------\n\n(defn <type-basis-item> [basis-item]\n  [:type-basis-item-tag (name basis-item)])\n\n(defn <type-basis> [basis]\n  (let [item-markups (map <type-basis-item> basis)\n        children-markups (interpose :type-basis-item-separator item-markups)]\n    (concat [:type-basis-tag] children-markups)))\n\n(defn <type-details> [constructor-fn ns _name basis]\n  (let [ns-markup (if-not (empty? ns) [:ns-icon [:fn-ns-name-tag ns]])\n        basis-markup (if (empty? basis)\n                       [:empty-basis-symbol]\n                       [:basis-icon (<type-basis> basis)])\n        native-markup [:native-icon (<native-reference> constructor-fn)]]\n    (<aligned-body> [basis-markup ns-markup native-markup])))\n\n(defn <type> [constructor-fn & [header-tag]]\n  (let [[ns name basis] (munging/parse-constructor-info constructor-fn)\n        name-markup [:type-name-tag name]\n        preview-markup [(or header-tag :type-header-tag) :type-symbol name-markup]\n        details-markup-fn (partial <type-details> constructor-fn ns name basis)]\n    [:type-wrapper-tag\n     :type-header-background\n     [:type-ref-tag (<reference-surrogate> constructor-fn preview-markup details-markup-fn)]]))\n\n(defn <standalone-type> [constructor-fn & [header-tag]]\n  [:standalone-type-tag (<type> constructor-fn header-tag)])\n\n; -- protocols markup -------------------------------------------------------------------------------------------------------\n\n(defn <protocol-method-arity> [arity-fn]\n  (<reference> arity-fn))\n\n(defn <protocol-method-arities-details> [fns]\n  (<aligned-body> (map <protocol-method-arity> fns)))\n\n(defn <protocol-method-arities> [fns & [max-fns]]\n  (let [max-fns (or max-fns (pref :max-protocol-method-arities-list))\n        more? (> (count fns) max-fns)\n        aritites-markups (map <protocol-method-arity> (take max-fns fns))\n        preview-markup (concat [:protocol-method-arities-header-tag :protocol-method-arities-header-open-symbol]\n                               (interpose :protocol-method-arities-list-header-separator aritites-markups)\n                               (if more? [:protocol-method-arities-more-symbol])\n                               [:protocol-method-arities-header-close-symbol])]\n    (if more?\n      (let [details-markup-fn (partial <protocol-method-arities-details> fns)]\n        (<reference-surrogate> nil preview-markup details-markup-fn))\n      preview-markup)))\n\n(defn <protocol-method> [name arities]\n  [:protocol-method-tag\n   :method-icon\n   [:protocol-method-name-tag name]\n   (<protocol-method-arities> arities)])\n\n(defn <protocol-details> [obj ns _name selector _fast?]\n  (let [protocol-obj (munging/get-protocol-object selector)\n        ns-markups-list (if-not (empty? ns) [:ns-icon [:protocol-ns-name-tag ns]])\n        native-markups-list (if (some? protocol-obj) [:native-icon (<native-reference> protocol-obj)])\n        methods (munging/collect-protocol-methods obj selector)\n        methods-markups (map (fn [[name arities]] (<protocol-method> name arities)) methods)\n        methods-markups-lists (map list methods-markups)]\n    (<aligned-body> (concat methods-markups-lists [ns-markups-list native-markups-list]))))\n\n(defn <protocol> [obj protocol & [tag]]\n  (let [{:keys [ns name selector fast?]} protocol\n        preview-markup [(or tag :protocol-name-tag) name]\n        prefix-markup [(if fast? :fast-protocol-tag :slow-protocol-tag) :protocol-background]]\n    (if (some? obj)\n      (let [details-markup-fn (partial <protocol-details> obj ns name selector fast?)]\n        (conj prefix-markup (<reference-surrogate> obj preview-markup details-markup-fn)))\n      (conj prefix-markup preview-markup))))\n\n(defn <more-protocols> [more-count]\n  (let [fake-protocol {:name (get-more-marker more-count)}]\n    (<protocol> nil fake-protocol :protocol-more-tag)))\n\n(defn <protocols-list> [obj protocols & [max-protocols]]\n  (let [max-protocols (or max-protocols (pref :max-list-protocols))\n        protocols-markups (map (partial <protocol> obj) protocols)]\n    (<list> protocols-markups max-protocols {:tag          :protocols-header-tag\n                                             :open-symbol  :protocols-list-open-symbol\n                                             :close-symbol :protocols-list-close-symbol\n                                             :separator    :header-protocol-separator\n                                             :more-symbol  <more-protocols>})))\n\n; -- instance fields markup -------------------------------------------------------------------------------------------------\n\n(defn <field> [name value]\n  [:header-field-tag\n   [:header-field-name-tag (str name)]\n   :header-field-value-spacer\n   [:header-field-value-tag (<reference> (<surrogate> value) #(set-managed-print-level % 1))]\n   :header-field-separator])\n\n(defn <fields-details-row> [field]\n  (let [[name value] field]\n    [:body-field-tr-tag\n     [:body-field-td1-tag\n      :body-field-symbol\n      [:body-field-name-tag (str name)]]\n     [:body-field-td2-tag\n      :body-field-value-spacer]\n     [:body-field-td3-tag\n      [:body-field-value-tag (<reference-surrogate> value)]]]))\n\n(defn <fields> [fields & [max-fields]]\n  (if (zero? (count fields))\n    [:fields-header-tag :fields-header-no-fields-symbol]\n    (let [max-fields (or max-fields (pref :max-instance-header-fields))\n          more? (> (count fields) max-fields)\n          fields-markups (map (fn [[name value]] (<field> name value)) (take max-fields fields))]\n      (concat [:fields-header-tag\n               :fields-header-open-symbol]\n              fields-markups\n              [(if more? :more-fields-symbol)\n               :fields-header-close-symbol]))))\n\n(defn <fields-details> [fields obj]\n  (let [protocols (munging/scan-protocols obj)\n        has-protocols? (not (empty? protocols))\n        fields-markup (if-not (zero? (count fields))\n                        [:fields-icon (concat [:instance-body-fields-table-tag] (map <fields-details-row> fields))])\n        protocols-list-markup (if has-protocols? [:protocols-icon (<protocols-list> obj protocols)])\n        native-markup [:native-icon (<native-reference> obj)]]\n    (<aligned-body> [fields-markup protocols-list-markup native-markup])))\n\n; -- type/record instance markup --------------------------------------------------------------------------------------------\n\n(defn <instance> [value]\n  (let [constructor-fn (get-constructor value)\n        [_ns _name basis] (munging/parse-constructor-info constructor-fn)\n        custom-printing? (implements? IPrintWithWriter value)\n        type-markup (<type> constructor-fn :instance-type-header-tag)\n        fields (fetch-fields-values value basis)\n        fields-markup (<fields> fields (if custom-printing? 0))\n        fields-details-markup-fn #(<fields-details> fields value)\n        fields-preview-markup [:instance-value-tag (<reference-surrogate> value fields-markup fields-details-markup-fn)]\n        custom-printing-markup (if custom-printing?\n                                 [:instance-custom-printing-wrapper-tag\n                                  :instance-custom-printing-background\n                                  (print-via-protocol value :instance-custom-printing-tag)])]\n    [:instance-header-tag\n     :instance-header-background\n     fields-preview-markup\n     custom-printing-markup\n     type-markup]))\n\n; ---------------------------------------------------------------------------------------------------------------------------\n\n(defn <header> [value]\n  (<cljs-land> (<preview> value)))\n\n(defn <surrogate-header> [surrogate]\n  (or (get-surrogate-header surrogate)\n      (<preview> (get-surrogate-target surrogate))))\n\n(defn <surrogate-target> [surrogate]\n  (let [target (get-surrogate-target surrogate)]\n    (if (seqable? target)\n      (let [starting-index (get-surrogate-start-index surrogate)]\n        (<details> target starting-index))\n      (<standard-body-reference> target))))\n\n(defn <surrogate-body> [surrogate]\n  (if-let [body (get-surrogate-body surrogate)]\n    (if (= :target body)\n      (<surrogate-target> surrogate)\n      body)))\n\n; ---------------------------------------------------------------------------------------------------------------------------\n\n(defn <atomic> [value]\n  (cond\n    (should-render? :render-nils value nil?) (<nil>)\n    (should-render? :render-bools value bool?) (<bool> value)\n    (should-render? :render-strings value string?) (<string> value)\n    (should-render? :render-numbers value number?) (<number> value)\n    (should-render? :render-keywords value keyword?) (<keyword> value)\n    (should-render? :render-symbols value symbol?) (<symbol> value)\n    (should-render? :render-instances value should-render-instance?) (<instance> value)\n    (should-render? :render-types value cljs-type?) (<standalone-type> value)\n    (should-render? :render-functions value cljs-function?) (<function> value)))\n\n; ---------------------------------------------------------------------------------------------------------------------------\n\n(def ^:dynamic *markup-db*)\n\n; emit-markup-db macro will generate a map of all markup <functions> in this namespace:\n;\n;    {:atomic              <atomic>\n;     :reference           <reference>\n;     :native-reference    <native-reference>\n;     ...}\n;\n; we generate it only on first call and cache it in *markup-db*\n; emitting markup db statically into def would prevent dead-code elimination\n;\n(defn get-markup-db []\n  (if (nil? *markup-db*)\n    (set! *markup-db* (emit-markup-db)))\n  *markup-db*)\n","~:reader-features",["^B",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["var_args","args__4736__auto__","len__4730__auto__","i__4731__auto__","argseq__4737__auto__","cljs.core/IndexedSeq","devtools.formatters.markup/print-with","p__35302","vec__35303","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","seq35294","G__35295","cljs.core/first","cljs.core/next","G__35296","G__35297","self__4717__auto__","method","value","tag","max-level","job-fn","G__35310","G__35311","G__35312","devtools.formatters.markup/get-markup-db","*print-level*-orig-val__35315","*print-level*-temp-val__35316","cljs.core/*print-level*","devtools.formatters.markup/print-via-writer","p__35344","vec__35346","seq35333","G__35334","G__35335","devtools.formatters.markup.print_with.cljs$core$IFn$_invoke$arity$variadic","devtools.formatters.printing/managed-print-via-writer","devtools.formatters.markup/print-via-protocol","p__35356","vec__35358","seq35350","G__35351","G__35352","devtools.formatters.printing/managed-print-via-protocol","devtools.formatters.markup/<expandable>","seq35364","self__4718__auto__","cljs.core/seq","children","inner-markup","cljs.core.concat.cljs$core$IFn$_invoke$arity$2","devtools.formatters.markup/<raw-surrogate>","seq35369","args","devtools.formatters.markup/<surrogate>","p__35381","vec__35382","seq35375","object","header","body","start-index","devtools.formatters.markup._LT_expandable_GT_.cljs$core$IFn$_invoke$arity$variadic","devtools.formatters.markup._LT_raw_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic","devtools.formatters.markup/<reference>","seq35389","devtools.formatters.markup/<reference-surrogate>","seq35390","devtools.formatters.markup._LT_reference_GT_.cljs$core$IFn$_invoke$arity$variadic","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","devtools.formatters.markup/<circular-reference>","seq35401","devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic","devtools.formatters.markup/<native-reference>","reference","p1__35411#","devtools.formatters.state/set-prevent-recursion","devtools.formatters.markup/<header-expander>","devtools.formatters.state/reset-depth-limits","devtools.formatters.markup/<cljs-land>","seq35421","devtools.formatters.markup/<nil>","devtools.formatters.markup/<bool>","bool","devtools.formatters.markup/<keyword>","keyword","devtools.formatters.markup/<symbol>","symbol","devtools.formatters.markup/<number>","number","cljs.core/integer?","devtools.formatters.markup/<string>","string","dq","devtools.formatters.helpers/pref","re-nl","js/RegExp","nl-marker","inline-string","max-inline-string-size","quote-string","s","should-abbreviate?","cljs.core/count","abbreviated-string","devtools.formatters.helpers/abbreviate-long-string","abbreviated-string-markup","string-with-nl-markers","details-markup","devtools.formatters.markup/<preview>","devtools.formatters.markup.print_via_writer.cljs$core$IFn$_invoke$arity$variadic","devtools.formatters.markup/<body>","markup","devtools.formatters.markup/<aligned-body>","markups-lists","prepend-li-tag","line","aligned-lines","cljs.core.keep.cljs$core$IFn$_invoke$arity$2","devtools.formatters.markup/<standard-body>","p__35442","vec__35443","seq35439","G__35440","no-margin?","ol-tag","li-tag","lines-markups","devtools.formatters.markup/<standard-body-reference>","o","devtools.formatters.markup/<index>","devtools.formatters.markup/body-line","index","index-markup","value-markup","devtools.formatters.markup/prepare-body-lines","data","starting-index","work","lines","cljs.core/empty?","cljs.core/rest","cljs.core.conj.cljs$core$IFn$_invoke$arity$2","devtools.formatters.markup/body-lines","seq","max-number-body-items","chunk","cljs.core.take.cljs$core$IFn$_invoke$arity$2","rest","cljs.core.drop.cljs$core$IFn$_invoke$arity$2","continue?","more-label-markup","more-markup","devtools.formatters.markup/<details>","has-continuation?","body-markup","devtools.formatters.markup._LT_standard_body_GT_.cljs$core$IFn$_invoke$arity$variadic","devtools.formatters.markup/<list-details>","items","_opts","cljs.core.map.cljs$core$IFn$_invoke$arity$2","cljs.core/list","devtools.formatters.markup/<list>","p__35479","vec__35480","seq35463","G__35465","G__35466","max-count","opts","items-markups","more-count","more?","separator","or__4131__auto__","more-symbol","temp__5718__auto__","cljs.core/fn?","devtools.formatters.helpers/get-more-marker","preview-markup","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic","cljs.core.interpose.cljs$core$IFn$_invoke$arity$2","default-details-fn","cljs.core.partial.cljs$core$IFn$_invoke$arity$3","devtools.formatters.markup/<meta>","metadata","body-fn","devtools.formatters.markup/<meta-wrapper>","seq35486","G__35487","js/Error","devtools.formatters.markup/<function-details>","fn-obj","ns","_name","arities","prefix","devtools.formatters.helpers/wrap-arity","make-arity-markup-list","arity","arities-markupts-lists","ns-markups-list","native-markups-list","devtools.formatters.markup/<arities>","multi-arity?","devtools.formatters.markup/<function>","vec__35488","name","devtools.munging/parse-fn-info","lambda?","spacer-symbol","rest-symbol","multi-arity-symbol","devtools.munging/extract-arities","arities-markup","name-markup","icon-markup","prefix-markup","details-fn","cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic","devtools.formatters.markup/<type-basis-item>","basis-item","cljs.core/name","devtools.formatters.markup/<type-basis>","basis","item-markups","children-markups","devtools.formatters.markup/<type-details>","constructor-fn","ns-markup","basis-markup","native-markup","devtools.formatters.markup/<type>","p__35502","vec__35503","seq35495","G__35496","header-tag","vec__35506","devtools.munging/parse-constructor-info","details-markup-fn","devtools.formatters.markup/<standalone-type>","p__35521","vec__35522","seq35512","G__35513","devtools.formatters.markup._LT_type_GT_.cljs$core$IFn$_invoke$arity$variadic","devtools.formatters.markup/<protocol-method-arity>","arity-fn","devtools.formatters.markup/<protocol-method-arities-details>","fns","devtools.formatters.markup/<protocol-method-arities>","p__35527","vec__35530","seq35525","G__35526","max-fns","aritites-markups","cljs.core.partial.cljs$core$IFn$_invoke$arity$2","devtools.formatters.markup/<protocol-method>","devtools.formatters.markup/<protocol-details>","obj","selector","_fast?","protocol-obj","devtools.munging/get-protocol-object","methods","devtools.munging/collect-protocol-methods","methods-markups","p__35540","vec__35541","methods-markups-lists","devtools.formatters.markup/<protocol>","p__35550","vec__35551","seq35546","G__35547","G__35548","protocol","map__35554","cljs.core/PROTOCOL_SENTINEL","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","fast?","devtools.formatters.markup/<more-protocols>","fake-protocol","devtools.formatters.markup._LT_protocol_GT_.cljs$core$IFn$_invoke$arity$variadic","devtools.formatters.markup/<protocols-list>","p__35565","vec__35566","seq35558","G__35559","G__35560","protocols","max-protocols","protocols-markups","devtools.formatters.markup._LT_list_GT_.cljs$core$IFn$_invoke$arity$variadic","devtools.formatters.markup/<field>","p1__35569#","devtools.formatters.markup._LT_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic","devtools.formatters.state/set-managed-print-level","devtools.formatters.markup/<fields-details-row>","field","vec__35571","devtools.formatters.markup/<fields>","p__35576","vec__35578","seq35574","G__35575","fields","max-fields","fields-markups","p__35582","vec__35583","devtools.formatters.markup/<fields-details>","devtools.munging/scan-protocols","has-protocols?","fields-markup","protocols-list-markup","devtools.formatters.markup/<instance>","vec__35586","devtools.formatters.helpers/get-constructor","_ns","custom-printing?","type-markup","devtools.formatters.helpers/fetch-fields-values","devtools.formatters.markup._LT_fields_GT_.cljs$core$IFn$_invoke$arity$variadic","fields-details-markup-fn","fields-preview-markup","custom-printing-markup","devtools.formatters.markup/<header>","devtools.formatters.markup._LT_cljs_land_GT_.cljs$core$IFn$_invoke$arity$variadic","devtools.formatters.markup/<surrogate-header>","surrogate","devtools.formatters.templating/get-surrogate-header","devtools.formatters.templating/get-surrogate-target","devtools.formatters.markup/<surrogate-target>","target","cljs.core/seqable?","devtools.formatters.templating/get-surrogate-start-index","devtools.formatters.markup/<surrogate-body>","devtools.formatters.templating/get-surrogate-body","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","devtools.formatters.markup/<atomic>","devtools.formatters.helpers/should-render?","cljs.core/nil?","devtools.formatters.helpers/bool?","cljs.core/string?","cljs.core/number?","cljs.core/keyword?","cljs.core/symbol?","devtools.formatters.helpers/should-render-instance?","devtools.formatters.helpers/cljs-type?","devtools.formatters.helpers/cljs-function?","devtools.formatters.markup/*markup-db*","cljs.core/PersistentHashMap"]]],"~:cache-keys",["~#cmap",[["^I","~$devtools.defaults"],[1562071392000],["^1L","devtools/formatters/printing.cljs"],[1562071392903,"~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^B",[]],"~:deps-syms",["^T","^S","~$devtools.prefs","~$devtools.format","~$devtools.protocols","^O","^M"]]],["^1L","goog/labs/useragent/platform.js"],[1562071391350,"^1Z",["^ ","^1[",null,"^20",["^B",[]],"^21",["^T","~$goog.labs.userAgent.util","~$goog.string"]]],["^I","^S"],[1562071391000],["^1L","devtools/formatters/markup.cljs"],[1562071392903,"^1Z",["^ ","^1[",null,"^20",["^B",[]],"^21",["^T","^S","^M","^N","^O","^P","^Q"]]],["^I","^@"],[1562071392000],["^1L","devtools/formatters/helpers.cljs"],[1562071392903,"^1Z",["^ ","^1[",null,"^20",["^B",[]],"^21",["^T","^S","^22","^Q","^23","^24"]]],["^1L","goog/math/math.js"],[1562071391350,"^1Z",["^ ","^1[",null,"^20",["^B",[]],"^21",["^T","~$goog.array","~$goog.asserts"]]],["^1L","goog/labs/useragent/browser.js"],[1562071391350,"^1Z",["^ ","^1[",null,"^20",["^B",[]],"^21",["^T","^27","^25","~$goog.object","~$goog.string.internal"]]],["^1L","goog/array/array.js"],[1562071391350,"^1Z",["^ ","^1[",null,"^20",["^B",[]],"^21",["^T","^28"]]],["^I","~$devtools.version"],[1562071392000],["^1L","goog/useragent/useragent.js"],[1562071391350,"^1Z",["^ ","^1[",null,"^20",["^B",[]],"^21",["^T","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^25","~$goog.reflect","^26"]]],["^1L","devtools/formatters/templating.cljs"],[1562071392903,"^1Z",["^ ","^1[",null,"^20",["^B",[]],"^21",["^T","^S","~$clojure.walk","~$devtools.util","^24","^M","^O","~$clojure.string"]]],["^1L","goog/debug/error.js"],[1562071391350,"^1Z",["^ ","^1[",null,"^20",["^B",[]],"^21",["^T"]]],["^1L","goog/dom/nodetype.js"],[1562071391350,"^1Z",["^ ","^1[",null,"^20",["^B",[]],"^21",["^T"]]],["^1L","cljs/pprint.cljs"],[1562071391582,"^1Z",["^ ","^1[",null,"^20",["^B",[]],"^21",["^T","^S","^2B","^26","~$goog.string.StringBuffer"]]],["^1L","goog/object/object.js"],[1562071391350,"^1Z",["^ ","^1[",null,"^20",["^B",[]],"^21",["^T"]]],"~:SHADOW-TIMESTAMP",[1562071398000,1562071391000],["^1L","goog/math/long.js"],[1562071391350,"^1Z",["^ ","^1[",null,"^20",["^B",[]],"^21",["^T","^28","^2?"]]],["^1L","devtools/version.cljs"],[1562071392903,"^1Z",["^ ","^1[",null,"^20",["^B",[]],"^21",["^T","^S"]]],["^1L","goog/string/internal.js"],[1562071391350,"^1Z",["^ ","^1[",null,"^20",["^B",[]],"^21",["^T"]]],["^1L","goog/functions/functions.js"],[1562071391350,"^1Z",["^ ","^1[",null,"^20",["^B",[]],"^21",["^T"]]],["^1L","devtools/prefs.cljs"],[1562071392903,"^1Z",["^ ","^1[",null,"^20",["^B",[]],"^21",["^T","^S","^1Y"]]],["^1L","clojure/walk.cljs"],[1562071391582,"^1Z",["^ ","^1[",null,"^20",["^B",[]],"^21",["^T","^S"]]],["^1L","goog/structs/map.js"],[1562071391350,"^1Z",["^ ","^1[",null,"^20",["^B",[]],"^21",["^T","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^I","~$devtools.oops"],[1562071392000],["^1L","devtools/munging.cljs"],[1562071392903,"^1Z",["^ ","^1[",null,"^20",["^B",[]],"^21",["^T","^S","^2B","~$devtools.context","^29","^2C"]]],["^1L","goog/labs/useragent/engine.js"],[1562071391350,"^1Z",["^ ","^1[",null,"^20",["^B",[]],"^21",["^T","^27","^25","^26"]]],["^1L","goog/asserts/asserts.js"],[1562071391350,"^1Z",["^ ","^1[",null,"^20",["^B",[]],"^21",["^T","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^I","~$cljs.pprint"],[1562071391000],["^1L","goog/uri/uri.js"],[1562071391350,"^1Z",["^ ","^1[",null,"^20",["^B",[]],"^21",["^T","^27","^28","^26","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1L","goog/base.js"],[1562071391350,"^1Z",["^ ","^1[",null,"^20",["^B",[]],"^21",[]]],["^1L","goog/structs/structs.js"],[1562071391350,"^1Z",["^ ","^1[",null,"^20",["^B",[]],"^21",["^T","^27","^29"]]],["^1L","clojure/string.cljs"],[1562071391582,"^1Z",["^ ","^1[",null,"^20",["^B",[]],"^21",["^T","^S","^26","^2C"]]],["^1L","devtools/formatters/state.cljs"],[1562071392903,"^1Z",["^ ","^1[",null,"^20",["^B",[]],"^21",["^T","^S"]]],["^1L","goog/string/string.js"],[1562071391350,"^1Z",["^ ","^1[",null,"^20",["^B",[]],"^21",["^T","^2:"]]],["^I","^Q"],[1562071392000],["^1L","clojure/data.cljs"],[1562071391582,"^1Z",["^ ","^1[",null,"^20",["^B",[]],"^21",["^T","^S","~$clojure.set"]]],["^1L","goog/reflect/reflect.js"],[1562071391350,"^1Z",["^ ","^1[",null,"^20",["^B",[]],"^21",["^T"]]],["^1L","goog/labs/useragent/util.js"],[1562071391350,"^1Z",["^ ","^1[",null,"^20",["^B",[]],"^21",["^T","^2:"]]],["^1L","goog/string/stringbuffer.js"],[1562071391350,"^1Z",["^ ","^1[",null,"^20",["^B",[]],"^21",["^T"]]],["^1L","goog/iter/iter.js"],[1562071391350,"^1Z",["^ ","^1[",null,"^20",["^B",[]],"^21",["^T","^27","^28","~$goog.functions","~$goog.math"]]],["^1L","devtools/defaults.cljs"],[1562071392903,"^1Z",["^ ","^1[",null,"^20",["^B",[]],"^21",["^T","^S"]]],["^I","^22"],[1562071392000],["^1L","cljs/core.cljs"],[1562071391582,"^1Z",["^ ","^1[",null,"^20",["^B",[]],"^21",["~$goog.math.Long","~$goog.math.Integer","^26","^29","^27","~$goog.Uri","^2C"]]],["^1L","devtools/context.cljs"],[1562071392903,"^1Z",["^ ","^1[",null,"^20",["^B",[]],"^21",["^T","^S"]]],["^1L","goog/math/integer.js"],[1562071391350,"^1Z",["^ ","^1[",null,"^20",["^B",[]],"^21",["^T"]]],["^1L","devtools/format.cljs"],[1562071392903,"^1Z",["^ ","^1[",null,"^20",["^B",[]],"^21",["^T","^S","^2H"]]],["^I","~$devtools.compiler"],[1562071392000],["^1L","clojure/set.cljs"],[1562071391582,"^1Z",["^ ","^1[",null,"^20",["^B",[]],"^21",["^T","^S"]]],["^1L","goog/uri/utils.js"],[1562071391350,"^1Z",["^ ","^1[",null,"^20",["^B",[]],"^21",["^T","^27","^28","^26"]]],["^1L","devtools/protocols.cljs"],[1562071392903,"^1Z",["^ ","^1[",null,"^20",["^B",[]],"^21",["^T","^S"]]],["^1L","devtools/util.cljs"],[1562071392903,"^1Z",["^ ","^1[",null,"^20",["^B",[]],"^21",["^T","^S","~$goog.userAgent","~$clojure.data","^2;","^2H","^2K","^22"]]]]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",1,"^8",5,"^9",1,"^:",31],"^;",["^ ","^<","^="],"^>",["^ ","^?","^@"],"^A",["^B",[]],"^C",["^ ","^?",["^ ","^D",["^E",[[]]],"^7",9,"^8",1,"^6","devtools/formatters/markup.clj","^F","^G","^H","^@","^I",true]],"^F","^@","^K",null,"^L",["^ ","^M","^M","^N","^N","^O","^O","^P","^P","^Q","^Q","^R","^Q","^S","^S","^T","^T"],"^U",["^B",["^V","^W"]],"~:shadow/js-access-global",["^B",["RegExp","Error"]],"^X",["^ ","^Y","^M","^Z","^M","^[","^O","^10","^M","^11","^M","^12","^P","^13","^M","^14","^N","^15","^M","^16","^M","^17","^M","^18","^M","^19","^M","^1:","^N","^1;","^M","^1<","^P","^1=","^O","^1>","^P","^1?","^O","^1@","^P","^1A","^M","^1B","^M","^1C","^M"],"~:defs",["^ ","~$<aligned-body>",["^ ","~:protocol-inline",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",117,"^8",7,"^9",117,"^:",21,"^D",["^E",["~$quote",["^E",[["~$markups-lists"]]]]]],"^F","~$devtools.formatters.markup/<aligned-body>","^6","devtools/formatters/markup.cljs","^:",21,"~:method-params",["^E",[["^34"]]],"~:protocol-impl",null,"~:arglists-meta",["^E",[null,null]],"^8",1,"~:variadic?",false,"^7",117,"~:ret-tag","~$cljs.core/IVector","^9",117,"~:max-fixed-arity",1,"~:fn-var",true,"^D",["^E",["^33",["^E",[["^34"]]]]]],"~$<native-reference>",["^ ","^32",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",56,"^8",7,"^9",56,"^:",25,"^D",["^E",["^33",["^E",[["~$object"]]]]]],"^F","~$devtools.formatters.markup/<native-reference>","^6","devtools/formatters/markup.cljs","^:",25,"^36",["^E",[["^3?"]]],"^37",null,"^38",["^E",[null,null]],"^8",1,"^39",false,"^7",56,"^3:","^3;","^9",56,"^3<",1,"^3=",true,"^D",["^E",["^33",["^E",[["^3?"]]]]]],"~$<reference-surrogate>",["^ ","^32",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",50,"^8",7,"^9",50,"^:",28,"^D",["^E",["^33",["^E",[["~$&","~$args"]]]]],"~:top-fn",["^ ","^39",true,"~:fixed-arity",0,"^3<",0,"^36",[["^E",["^3B"]]],"^D",["^E",[["~$&","^3B"]]],"^38",["^E",[null]]]],"^F","~$devtools.formatters.markup/<reference-surrogate>","^6","devtools/formatters/markup.cljs","^:",28,"^3C",["^ ","^39",true,"^3D",0,"^3<",0,"^36",[["^E",["^3B"]]],"^D",["^E",[["~$&","^3B"]]],"^38",["^E",[null]]],"^36",[["^E",["^3B"]]],"^37",null,"^3D",0,"^38",["^E",[null]],"^8",1,"^39",true,"~:methods",[["^ ","^3D",0,"^39",true,"~:tag","~$cljs.core/LazySeq"]],"^7",50,"^3:","~$any","^9",50,"^3<",0,"^3=",true,"^D",["^E",[["~$&","^3B"]]]],"~$<keyword>",["^ ","^32",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",75,"^8",7,"^9",75,"^:",16,"^D",["^E",["^33",["^E",[["~$keyword"]]]]]],"^F","~$devtools.formatters.markup/<keyword>","^6","devtools/formatters/markup.cljs","^:",16,"^36",["^E",[["^3K"]]],"^37",null,"^38",["^E",[null,null]],"^8",1,"^39",false,"^7",75,"^3:","^3;","^9",75,"^3<",1,"^3=",true,"^D",["^E",["^33",["^E",[["^3K"]]]]]],"~$print-via-writer",["^ ","^32",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",28,"^8",7,"^9",28,"^:",23,"^D",["^E",["^33",["^E",[["~$value","~$tag","~$&",["~$max-level"]]]]]],"^3C",["^ ","^39",true,"^3D",2,"^3<",2,"^36",[["^E",["^3N","^3O",["^3P"]]]],"^D",["^E",[["^3N","^3O","~$&",["^3P"]]]],"^38",["^E",[null]]]],"^F","~$devtools.formatters.markup/print-via-writer","^6","devtools/formatters/markup.cljs","^:",23,"^3C",["^ ","^39",true,"^3D",2,"^3<",2,"^36",[["^E",["^3N","^3O",["^3P"]]]],"^D",["^E",[["^3N","^3O","~$&",["^3P"]]]],"^38",["^E",[null]]],"^36",[["^E",["^3N","^3O",["^3P"]]]],"^37",null,"^3D",2,"^38",["^E",[null]],"^8",1,"^39",true,"^3F",[["^ ","^3D",2,"^39",true,"^3G",["^B",[null,"^3I"]]]],"^7",28,"^3:","^3I","^9",28,"^3<",2,"^3=",true,"^D",["^E",[["^3N","^3O","~$&",["^3P"]]]]],"~$<protocol-method-arities>",["^ ","^32",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",286,"^8",7,"^9",286,"^:",32,"^D",["^E",["^33",["^E",[["~$fns","~$&",["~$max-fns"]]]]]],"^3C",["^ ","^39",true,"^3D",1,"^3<",1,"^36",[["^E",["^3S",["^3T"]]]],"^D",["^E",[["^3S","~$&",["^3T"]]]],"^38",["^E",[null]]]],"^F","~$devtools.formatters.markup/<protocol-method-arities>","^6","devtools/formatters/markup.cljs","^:",32,"^3C",["^ ","^39",true,"^3D",1,"^3<",1,"^36",[["^E",["^3S",["^3T"]]]],"^D",["^E",[["^3S","~$&",["^3T"]]]],"^38",["^E",[null]]],"^36",[["^E",["^3S",["^3T"]]]],"^37",null,"^3D",1,"^38",["^E",[null]],"^8",1,"^39",true,"^3F",[["^ ","^3D",1,"^39",true,"^3G","^3H"]],"^7",286,"^3:","^3I","^9",286,"^3<",1,"^3=",true,"^D",["^E",[["^3S","~$&",["^3T"]]]]],"~$<surrogate-header>",["^ ","^32",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",403,"^8",7,"^9",403,"^:",25,"^D",["^E",["^33",["^E",[["~$surrogate"]]]]]],"^F","~$devtools.formatters.markup/<surrogate-header>","^6","devtools/formatters/markup.cljs","^:",25,"^36",["^E",[["^3W"]]],"^37",null,"^38",["^E",[null,null]],"^8",1,"^39",false,"^7",403,"^3:",["^B",[null,"^3I"]],"^9",403,"^3<",1,"^3=",true,"^D",["^E",["^33",["^E",[["^3W"]]]]]],"~$<details>",["^ ","^32",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",169,"^8",7,"^9",169,"^:",16,"^D",["^E",["^33",["^E",[["^3N","~$starting-index"]]]]]],"^F","~$devtools.formatters.markup/<details>","^6","devtools/formatters/markup.cljs","^:",16,"^36",["^E",[["^3N","^3Z"]]],"^37",null,"^38",["^E",[null,null]],"^8",1,"^39",false,"^7",169,"^3:","~$clj","^9",169,"^3<",2,"^3=",true,"^D",["^E",["^33",["^E",[["^3N","^3Z"]]]]]],"~$<more-protocols>",["^ ","^32",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",323,"^8",7,"^9",323,"^:",23,"^D",["^E",["^33",["^E",[["~$more-count"]]]]]],"^F","~$devtools.formatters.markup/<more-protocols>","^6","devtools/formatters/markup.cljs","^:",23,"^36",["^E",[["^42"]]],"^37",null,"^38",["^E",[null,null]],"^8",1,"^39",false,"^7",323,"^3:","^40","^9",323,"^3<",1,"^3=",true,"^D",["^E",["^33",["^E",[["^42"]]]]]],"~$<field>",["^ ","^32",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",338,"^8",7,"^9",338,"^:",14,"^D",["^E",["^33",["^E",[["~$name","^3N"]]]]]],"^F","~$devtools.formatters.markup/<field>","^6","devtools/formatters/markup.cljs","^:",14,"^36",["^E",[["^45","^3N"]]],"^37",null,"^38",["^E",[null,null]],"^8",1,"^39",false,"^7",338,"^3:","^3;","^9",338,"^3<",2,"^3=",true,"^D",["^E",["^33",["^E",[["^45","^3N"]]]]]],"~$<symbol>",["^ ","^32",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",78,"^8",7,"^9",78,"^:",15,"^D",["^E",["^33",["^E",[["~$symbol"]]]]]],"^F","~$devtools.formatters.markup/<symbol>","^6","devtools/formatters/markup.cljs","^:",15,"^36",["^E",[["^48"]]],"^37",null,"^38",["^E",[null,null]],"^8",1,"^39",false,"^7",78,"^3:","^3;","^9",78,"^3<",1,"^3=",true,"^D",["^E",["^33",["^E",[["^48"]]]]]],"~$<fields-details>",["^ ","^32",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",368,"^8",7,"^9",368,"^:",23,"^D",["^E",["^33",["^E",[["~$fields","~$obj"]]]]]],"^F","~$devtools.formatters.markup/<fields-details>","^6","devtools/formatters/markup.cljs","^:",23,"^36",["^E",[["^4;","^4<"]]],"^37",null,"^38",["^E",[null,null]],"^8",1,"^39",false,"^7",368,"^3:","^3;","^9",368,"^3<",2,"^3=",true,"^D",["^E",["^33",["^E",[["^4;","^4<"]]]]]],"~$<atomic>",["^ ","^32",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",422,"^8",7,"^9",422,"^:",15,"^D",["^E",["^33",["^E",[["^3N"]]]]]],"^F","~$devtools.formatters.markup/<atomic>","^6","devtools/formatters/markup.cljs","^:",15,"^36",["^E",[["^3N"]]],"^37",null,"^38",["^E",[null,null]],"^8",1,"^39",false,"^7",422,"^3:",["^B",["^40","^3;","^3H","~$clj-nil"]],"^9",422,"^3<",1,"^3=",true,"^D",["^E",["^33",["^E",[["^3N"]]]]]],"~$<string>",["^ ","^32",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",88,"^8",7,"^9",88,"^:",15,"^D",["^E",["^33",["^E",[["~$string"]]]]]],"^F","~$devtools.formatters.markup/<string>","^6","devtools/formatters/markup.cljs","^:",15,"^36",["^E",[["^4B"]]],"^37",null,"^38",["^E",[null,null]],"^8",1,"^39",false,"^7",88,"^3:","^40","^9",88,"^3<",1,"^3=",true,"^D",["^E",["^33",["^E",[["^4B"]]]]]],"~$<standard-body>",["^ ","^32",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",124,"^8",7,"^9",124,"^:",22,"^D",["^E",["^33",["^E",[["^34","~$&",["~$no-margin?"]]]]]],"^3C",["^ ","^39",true,"^3D",1,"^3<",1,"^36",[["^E",["^34",["^4E"]]]],"^D",["^E",[["^34","~$&",["^4E"]]]],"^38",["^E",[null]]]],"^F","~$devtools.formatters.markup/<standard-body>","^6","devtools/formatters/markup.cljs","^:",22,"^3C",["^ ","^39",true,"^3D",1,"^3<",1,"^36",[["^E",["^34",["^4E"]]]],"^D",["^E",[["^34","~$&",["^4E"]]]],"^38",["^E",[null]]],"^36",[["^E",["^34",["^4E"]]]],"^37",null,"^3D",1,"^38",["^E",[null]],"^8",1,"^39",true,"^3F",[["^ ","^3D",1,"^39",true,"^3G","^3H"]],"^7",124,"^3:","^3I","^9",124,"^3<",1,"^3=",true,"^D",["^E",[["^34","~$&",["^4E"]]]]],"~$<type-basis>",["^ ","^32",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",253,"^8",7,"^9",253,"^:",19,"^D",["^E",["^33",["^E",[["~$basis"]]]]]],"^F","~$devtools.formatters.markup/<type-basis>","^6","devtools/formatters/markup.cljs","^:",19,"^36",["^E",[["^4H"]]],"^37",null,"^38",["^E",[null,null]],"^8",1,"^39",false,"^7",253,"^3:","^3H","^9",253,"^3<",1,"^3=",true,"^D",["^E",["^33",["^E",[["^4H"]]]]]],"~$*markup-db*",["^ ","^F","~$devtools.formatters.markup/*markup-db*","^6","devtools/formatters/markup.cljs","^7",436,"^8",1,"^9",436,"^:",27,"~:dynamic",true,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",436,"^8",16,"^9",436,"^:",27,"^4L",true]],"~$print-via-protocol",["^ ","^32",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",31,"^8",7,"^9",31,"^:",25,"^D",["^E",["^33",["^E",[["^3N","^3O","~$&",["^3P"]]]]]],"^3C",["^ ","^39",true,"^3D",2,"^3<",2,"^36",[["^E",["^3N","^3O",["^3P"]]]],"^D",["^E",[["^3N","^3O","~$&",["^3P"]]]],"^38",["^E",[null]]]],"^F","~$devtools.formatters.markup/print-via-protocol","^6","devtools/formatters/markup.cljs","^:",25,"^3C",["^ ","^39",true,"^3D",2,"^3<",2,"^36",[["^E",["^3N","^3O",["^3P"]]]],"^D",["^E",[["^3N","^3O","~$&",["^3P"]]]],"^38",["^E",[null]]],"^36",[["^E",["^3N","^3O",["^3P"]]]],"^37",null,"^3D",2,"^38",["^E",[null]],"^8",1,"^39",true,"^3F",[["^ ","^3D",2,"^39",true,"^3G",["^B",[null,"^3I"]]]],"^7",31,"^3:","^3I","^9",31,"^3<",2,"^3=",true,"^D",["^E",[["^3N","^3O","~$&",["^3P"]]]]],"~$print-with",["^ ","^32",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",21,"^8",7,"^9",21,"^:",17,"^D",["^E",["^33",["^E",[["~$method","^3N","^3O","~$&",["^3P"]]]]]],"^3C",["^ ","^39",true,"^3D",3,"^3<",3,"^36",[["^E",["^4P","^3N","^3O",["^3P"]]]],"^D",["^E",[["^4P","^3N","^3O","~$&",["^3P"]]]],"^38",["^E",[null]]]],"^F","~$devtools.formatters.markup/print-with","^6","devtools/formatters/markup.cljs","^:",17,"^3C",["^ ","^39",true,"^3D",3,"^3<",3,"^36",[["^E",["^4P","^3N","^3O",["^3P"]]]],"^D",["^E",[["^4P","^3N","^3O","~$&",["^3P"]]]],"^38",["^E",[null]]],"^36",[["^E",["^4P","^3N","^3O",["^3P"]]]],"^37",null,"^3D",3,"^38",["^E",[null]],"^8",1,"^39",true,"^3F",[["^ ","^3D",3,"^39",true,"^3G",["^B",[null,"^3I"]]]],"^7",21,"^3:","^3I","^9",21,"^3<",3,"^3=",true,"^D",["^E",[["^4P","^3N","^3O","~$&",["^3P"]]]]],"~$<bool>",["^ ","^32",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",72,"^8",7,"^9",72,"^:",13,"^D",["^E",["^33",["^E",[["~$bool"]]]]]],"^F","~$devtools.formatters.markup/<bool>","^6","devtools/formatters/markup.cljs","^:",13,"^36",["^E",[["^4S"]]],"^37",null,"^38",["^E",[null,null]],"^8",1,"^39",false,"^7",72,"^3:","^3;","^9",72,"^3<",1,"^3=",true,"^D",["^E",["^33",["^E",[["^4S"]]]]]],"~$<standalone-type>",["^ ","^32",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",275,"^8",7,"^9",275,"^:",24,"^D",["^E",["^33",["^E",[["~$constructor-fn","~$&",["~$header-tag"]]]]]],"^3C",["^ ","^39",true,"^3D",1,"^3<",1,"^36",[["^E",["^4V",["^4W"]]]],"^D",["^E",[["^4V","~$&",["^4W"]]]],"^38",["^E",[null]]]],"^F","~$devtools.formatters.markup/<standalone-type>","^6","devtools/formatters/markup.cljs","^:",24,"^3C",["^ ","^39",true,"^3D",1,"^3<",1,"^36",[["^E",["^4V",["^4W"]]]],"^D",["^E",[["^4V","~$&",["^4W"]]]],"^38",["^E",[null]]],"^36",[["^E",["^4V",["^4W"]]]],"^37",null,"^3D",1,"^38",["^E",[null]],"^8",1,"^39",true,"^3F",[["^ ","^3D",1,"^39",true,"^3G","^3;"]],"^7",275,"^3:","^3I","^9",275,"^3<",1,"^3=",true,"^D",["^E",[["^4V","~$&",["^4W"]]]]],"~$<preview>",["^ ","^32",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",109,"^8",7,"^9",109,"^:",16,"^D",["^E",["^33",["^E",[["^3N"]]]]]],"^F","~$devtools.formatters.markup/<preview>","^6","devtools/formatters/markup.cljs","^:",16,"^36",["^E",[["^3N"]]],"^37",null,"^38",["^E",[null,null]],"^8",1,"^39",false,"^7",109,"^3:",["^B",[null,"^3I"]],"^9",109,"^3<",1,"^3=",true,"^D",["^E",["^33",["^E",[["^3N"]]]]]],"~$<header>",["^ ","^32",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",400,"^8",7,"^9",400,"^:",15,"^D",["^E",["^33",["^E",[["^3N"]]]]]],"^F","~$devtools.formatters.markup/<header>","^6","devtools/formatters/markup.cljs","^:",15,"^36",["^E",[["^3N"]]],"^37",null,"^38",["^E",[null,null]],"^8",1,"^39",false,"^7",400,"^3:","^3H","^9",400,"^3<",1,"^3=",true,"^D",["^E",["^33",["^E",[["^3N"]]]]]],"~$<protocol-method>",["^ ","^32",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",299,"^8",7,"^9",299,"^:",24,"^D",["^E",["^33",["^E",[["^45","~$arities"]]]]]],"^F","~$devtools.formatters.markup/<protocol-method>","^6","devtools/formatters/markup.cljs","^:",24,"^36",["^E",[["^45","^52"]]],"^37",null,"^38",["^E",[null,null]],"^8",1,"^39",false,"^7",299,"^3:","^3;","^9",299,"^3<",2,"^3=",true,"^D",["^E",["^33",["^E",[["^45","^52"]]]]]],"~$<cljs-land>",["^ ","^32",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",65,"^8",7,"^9",65,"^:",18,"^D",["^E",["^33",["^E",[["~$&","~$children"]]]]],"^3C",["^ ","^39",true,"^3D",0,"^3<",0,"^36",[["^E",["^55"]]],"^D",["^E",[["~$&","^55"]]],"^38",["^E",[null]]]],"^F","~$devtools.formatters.markup/<cljs-land>","^6","devtools/formatters/markup.cljs","^:",18,"^3C",["^ ","^39",true,"^3D",0,"^3<",0,"^36",[["^E",["^55"]]],"^D",["^E",[["~$&","^55"]]],"^38",["^E",[null]]],"^36",[["^E",["^55"]]],"^37",null,"^3D",0,"^38",["^E",[null]],"^8",1,"^39",true,"^3F",[["^ ","^3D",0,"^39",true,"^3G","^3H"]],"^7",65,"^3:","^3I","^9",65,"^3<",0,"^3=",true,"^D",["^E",[["~$&","^55"]]]],"~$<type-basis-item>",["^ ","^32",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",250,"^8",7,"^9",250,"^:",24,"^D",["^E",["^33",["^E",[["~$basis-item"]]]]]],"^F","~$devtools.formatters.markup/<type-basis-item>","^6","devtools/formatters/markup.cljs","^:",24,"^36",["^E",[["^58"]]],"^37",null,"^38",["^E",[null,null]],"^8",1,"^39",false,"^7",250,"^3:","^3;","^9",250,"^3<",1,"^3=",true,"^D",["^E",["^33",["^E",[["^58"]]]]]],"~$<protocol-method-arities-details>",["^ ","^32",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",283,"^8",7,"^9",283,"^:",40,"^D",["^E",["^33",["^E",[["^3S"]]]]]],"^F","~$devtools.formatters.markup/<protocol-method-arities-details>","^6","devtools/formatters/markup.cljs","^:",40,"^36",["^E",[["^3S"]]],"^37",null,"^38",["^E",[null,null]],"^8",1,"^39",false,"^7",283,"^3:","^3;","^9",283,"^3<",1,"^3=",true,"^D",["^E",["^33",["^E",[["^3S"]]]]]],"~$<fields-details-row>",["^ ","^32",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",345,"^8",7,"^9",345,"^:",27,"^D",["^E",["^33",["^E",[["~$field"]]]]]],"^F","~$devtools.formatters.markup/<fields-details-row>","^6","devtools/formatters/markup.cljs","^:",27,"^36",["^E",[["^5="]]],"^37",null,"^38",["^E",[null,null]],"^8",1,"^39",false,"^7",345,"^3:","^3;","^9",345,"^3<",1,"^3=",true,"^D",["^E",["^33",["^E",[["^5="]]]]]],"~$<standard-body-reference>",["^ ","^32",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",133,"^8",7,"^9",133,"^:",32,"^D",["^E",["^33",["^E",[["~$o"]]]]]],"^F","~$devtools.formatters.markup/<standard-body-reference>","^6","devtools/formatters/markup.cljs","^:",32,"^36",["^E",[["~$o"]]],"^37",null,"^38",["^E",[null,null]],"^8",1,"^39",false,"^7",133,"^3:","^3H","^9",133,"^3<",1,"^3=",true,"^D",["^E",["^33",["^E",[["~$o"]]]]]],"~$<surrogate-body>",["^ ","^32",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",414,"^8",7,"^9",414,"^:",23,"^D",["^E",["^33",["^E",[["^3W"]]]]]],"^F","~$devtools.formatters.markup/<surrogate-body>","^6","devtools/formatters/markup.cljs","^:",23,"^36",["^E",[["^3W"]]],"^37",null,"^38",["^E",[null,null]],"^8",1,"^39",false,"^7",414,"^3:",["^B",["^40","^3I","^4@"]],"^9",414,"^3<",1,"^3=",true,"^D",["^E",["^33",["^E",[["^3W"]]]]]],"~$get-markup-db",["^ ","^32",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",448,"^8",7,"^9",448,"^:",20,"^D",["^E",["^33",["^E",[[]]]]]],"^F","~$devtools.formatters.markup/get-markup-db","^6","devtools/formatters/markup.cljs","^:",20,"^36",["^E",[[]]],"^37",null,"^38",["^E",[null,null]],"^8",1,"^39",false,"^7",448,"^9",448,"^3<",0,"^3=",true,"^D",["^E",["^33",["^E",[[]]]]]],"~$<expandable>",["^ ","^32",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",36,"^8",7,"^9",36,"^:",19,"^D",["^E",["^33",["^E",[["~$&","^55"]]]]],"^3C",["^ ","^39",true,"^3D",0,"^3<",0,"^36",[["^E",["^55"]]],"^D",["^E",[["~$&","^55"]]],"^38",["^E",[null]]]],"^F","~$devtools.formatters.markup/<expandable>","^6","devtools/formatters/markup.cljs","^:",19,"^3C",["^ ","^39",true,"^3D",0,"^3<",0,"^36",[["^E",["^55"]]],"^D",["^E",[["~$&","^55"]]],"^38",["^E",[null]]],"^36",[["^E",["^55"]]],"^37",null,"^3D",0,"^38",["^E",[null]],"^8",1,"^39",true,"^3F",[["^ ","^3D",0,"^39",true,"^3G","^3;"]],"^7",36,"^3:","^3I","^9",36,"^3<",0,"^3=",true,"^D",["^E",[["~$&","^55"]]]],"~$<type>",["^ ","^32",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",266,"^8",7,"^9",266,"^:",13,"^D",["^E",["^33",["^E",[["^4V","~$&",["^4W"]]]]]],"^3C",["^ ","^39",true,"^3D",1,"^3<",1,"^36",[["^E",["^4V",["^4W"]]]],"^D",["^E",[["^4V","~$&",["^4W"]]]],"^38",["^E",[null]]]],"^F","~$devtools.formatters.markup/<type>","^6","devtools/formatters/markup.cljs","^:",13,"^3C",["^ ","^39",true,"^3D",1,"^3<",1,"^36",[["^E",["^4V",["^4W"]]]],"^D",["^E",[["^4V","~$&",["^4W"]]]],"^38",["^E",[null]]],"^36",[["^E",["^4V",["^4W"]]]],"^37",null,"^3D",1,"^38",["^E",[null]],"^8",1,"^39",true,"^3F",[["^ ","^3D",1,"^39",true,"^3G","^3;"]],"^7",266,"^3:","^3I","^9",266,"^3<",1,"^3=",true,"^D",["^E",[["^4V","~$&",["^4W"]]]]],"~$<protocol-method-arity>",["^ ","^32",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",280,"^8",7,"^9",280,"^:",30,"^D",["^E",["^33",["^E",[["~$arity-fn"]]]]]],"^F","~$devtools.formatters.markup/<protocol-method-arity>","^6","devtools/formatters/markup.cljs","^:",30,"^36",["^E",[["^5J"]]],"^37",null,"^38",["^E",[null,null]],"^8",1,"^39",false,"^7",280,"^3:","^3H","^9",280,"^3<",1,"^3=",true,"^D",["^E",["^33",["^E",[["^5J"]]]]]],"~$<raw-surrogate>",["^ ","^32",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",40,"^8",7,"^9",40,"^:",22,"^D",["^E",["^33",["^E",[["~$&","^3B"]]]]],"^3C",["^ ","^39",true,"^3D",0,"^3<",0,"^36",[["^E",["^3B"]]],"^D",["^E",[["~$&","^3B"]]],"^38",["^E",[null]]]],"^F","~$devtools.formatters.markup/<raw-surrogate>","^6","devtools/formatters/markup.cljs","^:",22,"^3C",["^ ","^39",true,"^3D",0,"^3<",0,"^36",[["^E",["^3B"]]],"^D",["^E",[["~$&","^3B"]]],"^38",["^E",[null]]],"^36",[["^E",["^3B"]]],"^37",null,"^3D",0,"^38",["^E",[null]],"^8",1,"^39",true,"^3F",[["^ ","^3D",0,"^39",true,"^3G","^3H"]],"^7",40,"^3:","^3I","^9",40,"^3<",0,"^3=",true,"^D",["^E",[["~$&","^3B"]]]],"~$<type-details>",["^ ","^32",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",258,"^8",7,"^9",258,"^:",21,"^D",["^E",["^33",["^E",[["^4V","^1E","~$_name","^4H"]]]]]],"^F","~$devtools.formatters.markup/<type-details>","^6","devtools/formatters/markup.cljs","^:",21,"^36",["^E",[["^4V","^1E","^5O","^4H"]]],"^37",null,"^38",["^E",[null,null]],"^8",1,"^39",false,"^7",258,"^3:","^3;","^9",258,"^3<",4,"^3=",true,"^D",["^E",["^33",["^E",[["^4V","^1E","^5O","^4H"]]]]]],"~$<list>",["^ ","^32",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",181,"^8",7,"^9",181,"^:",13,"^D",["^E",["^33",["^E",[["~$items","~$max-count","~$&",["~$opts"]]]]]],"^3C",["^ ","^39",true,"^3D",2,"^3<",2,"^36",[["^E",["^5R","^5S",["^5T"]]]],"^D",["^E",[["^5R","^5S","~$&",["^5T"]]]],"^38",["^E",[null]]]],"^F","~$devtools.formatters.markup/<list>","^6","devtools/formatters/markup.cljs","^:",13,"^3C",["^ ","^39",true,"^3D",2,"^3<",2,"^36",[["^E",["^5R","^5S",["^5T"]]]],"^D",["^E",[["^5R","^5S","~$&",["^5T"]]]],"^38",["^E",[null]]],"^36",[["^E",["^5R","^5S",["^5T"]]]],"^37",null,"^3D",2,"^38",["^E",[null]],"^8",1,"^39",true,"^3F",[["^ ","^3D",2,"^39",true,"^3G","^3H"]],"^7",181,"^3:","^3I","^9",181,"^3<",2,"^3=",true,"^D",["^E",[["^5R","^5S","~$&",["^5T"]]]]],"~$<meta-wrapper>",["^ ","^32",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",210,"^8",7,"^9",210,"^:",21,"^D",["^E",["^33",["^E",[["~$metadata","~$&","^55"]]]]],"^3C",["^ ","^39",true,"^3D",1,"^3<",1,"^36",[["^E",["^5W","^55"]]],"^D",["^E",[["^5W","~$&","^55"]]],"^38",["^E",[null]]]],"^F","~$devtools.formatters.markup/<meta-wrapper>","^6","devtools/formatters/markup.cljs","^:",21,"^3C",["^ ","^39",true,"^3D",1,"^3<",1,"^36",[["^E",["^5W","^55"]]],"^D",["^E",[["^5W","~$&","^55"]]],"^38",["^E",[null]]],"^36",[["^E",["^5W","^55"]]],"^37",null,"^3D",1,"^38",["^E",[null]],"^8",1,"^39",true,"^3F",[["^ ","^3D",1,"^39",true,"^3G","^3H"]],"^7",210,"^3:","^3I","^9",210,"^3<",1,"^3=",true,"^D",["^E",[["^5W","~$&","^55"]]]],"~$<protocol>",["^ ","^32",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",314,"^8",7,"^9",314,"^:",17,"^D",["^E",["^33",["^E",[["^4<","~$protocol","~$&",["^3O"]]]]]],"^3C",["^ ","^39",true,"^3D",2,"^3<",2,"^36",[["^E",["^4<","^5Z",["^3O"]]]],"^D",["^E",[["^4<","^5Z","~$&",["^3O"]]]],"^38",["^E",[null]]]],"^F","~$devtools.formatters.markup/<protocol>","^6","devtools/formatters/markup.cljs","^:",17,"^3C",["^ ","^39",true,"^3D",2,"^3<",2,"^36",[["^E",["^4<","^5Z",["^3O"]]]],"^D",["^E",[["^4<","^5Z","~$&",["^3O"]]]],"^38",["^E",[null]]],"^36",[["^E",["^4<","^5Z",["^3O"]]]],"^37",null,"^3D",2,"^38",["^E",[null]],"^8",1,"^39",true,"^3F",[["^ ","^3D",2,"^39",true,"^3G","^40"]],"^7",314,"^3:","^3I","^9",314,"^3<",2,"^3=",true,"^D",["^E",[["^4<","^5Z","~$&",["^3O"]]]]],"~$<index>",["^ ","^32",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",138,"^8",7,"^9",138,"^:",14,"^D",["^E",["^33",["^E",[["^3N"]]]]]],"^F","~$devtools.formatters.markup/<index>","^6","devtools/formatters/markup.cljs","^:",14,"^36",["^E",[["^3N"]]],"^37",null,"^38",["^E",[null,null]],"^8",1,"^39",false,"^7",138,"^3:","^3;","^9",138,"^3<",1,"^3=",true,"^D",["^E",["^33",["^E",[["^3N"]]]]]],"~$<surrogate>",["^ ","^32",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",43,"^8",7,"^9",43,"^:",18,"^D",["^E",["^33",["^E",[["~$&",["^3?","~$header","~$body","~$start-index"]]]]]],"^3C",["^ ","^39",true,"^3D",0,"^3<",0,"^36",[["^E",[["^3?","^63","^64","^65"]]]],"^D",["^E",[["~$&",["^3?","^63","^64","^65"]]]],"^38",["^E",[null]]]],"^F","~$devtools.formatters.markup/<surrogate>","^6","devtools/formatters/markup.cljs","^:",18,"^3C",["^ ","^39",true,"^3D",0,"^3<",0,"^36",[["^E",[["^3?","^63","^64","^65"]]]],"^D",["^E",[["~$&",["^3?","^63","^64","^65"]]]],"^38",["^E",[null]]],"^36",[["^E",[["^3?","^63","^64","^65"]]]],"^37",null,"^3D",0,"^38",["^E",[null]],"^8",1,"^39",true,"^3F",[["^ ","^3D",0,"^39",true,"^3G","^3H"]],"^7",43,"^3:","^3I","^9",43,"^3<",0,"^3=",true,"^D",["^E",[["~$&",["^3?","^63","^64","^65"]]]]],"~$<protocols-list>",["^ ","^32",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",327,"^8",7,"^9",327,"^:",23,"^D",["^E",["^33",["^E",[["^4<","~$protocols","~$&",["~$max-protocols"]]]]]],"^3C",["^ ","^39",true,"^3D",2,"^3<",2,"^36",[["^E",["^4<","^68",["^69"]]]],"^D",["^E",[["^4<","^68","~$&",["^69"]]]],"^38",["^E",[null]]]],"^F","~$devtools.formatters.markup/<protocols-list>","^6","devtools/formatters/markup.cljs","^:",23,"^3C",["^ ","^39",true,"^3D",2,"^3<",2,"^36",[["^E",["^4<","^68",["^69"]]]],"^D",["^E",[["^4<","^68","~$&",["^69"]]]],"^38",["^E",[null]]],"^36",[["^E",["^4<","^68",["^69"]]]],"^37",null,"^3D",2,"^38",["^E",[null]],"^8",1,"^39",true,"^3F",[["^ ","^3D",2,"^39",true,"^3G","^3H"]],"^7",327,"^3:","^3I","^9",327,"^3<",2,"^3=",true,"^D",["^E",[["^4<","^68","~$&",["^69"]]]]],"~$<meta>",["^ ","^32",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",205,"^8",7,"^9",205,"^:",13,"^D",["^E",["^33",["^E",[["^5W"]]]]]],"^F","~$devtools.formatters.markup/<meta>","^6","devtools/formatters/markup.cljs","^:",13,"^36",["^E",[["^5W"]]],"^37",null,"^38",["^E",[null,null]],"^8",1,"^39",false,"^7",205,"^3:","^3;","^9",205,"^3<",1,"^3=",true,"^D",["^E",["^33",["^E",[["^5W"]]]]]],"~$<instance>",["^ ","^32",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",379,"^8",7,"^9",379,"^:",17,"^D",["^E",["^33",["^E",[["^3N"]]]]]],"^F","~$devtools.formatters.markup/<instance>","^6","devtools/formatters/markup.cljs","^:",17,"^36",["^E",[["^3N"]]],"^37",null,"^38",["^E",[null,null]],"^8",1,"^39",false,"^7",379,"^3:","^3;","^9",379,"^3<",1,"^3=",true,"^D",["^E",["^33",["^E",[["^3N"]]]]]],"~$<reference>",["^ ","^32",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",47,"^8",7,"^9",47,"^:",18,"^D",["^E",["^33",["^E",[["~$&","^3B"]]]]],"^3C",["^ ","^39",true,"^3D",0,"^3<",0,"^36",[["^E",["^3B"]]],"^D",["^E",[["~$&","^3B"]]],"^38",["^E",[null]]]],"^F","~$devtools.formatters.markup/<reference>","^6","devtools/formatters/markup.cljs","^:",18,"^3C",["^ ","^39",true,"^3D",0,"^3<",0,"^36",[["^E",["^3B"]]],"^D",["^E",[["~$&","^3B"]]],"^38",["^E",[null]]],"^36",[["^E",["^3B"]]],"^37",null,"^3D",0,"^38",["^E",[null]],"^8",1,"^39",true,"^3F",[["^ ","^3D",0,"^39",true,"^3G","^3H"]],"^7",47,"^3:","^3I","^9",47,"^3<",0,"^3=",true,"^D",["^E",[["~$&","^3B"]]]],"~$<function-details>",["^ ","^32",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",215,"^8",7,"^9",215,"^:",25,"^D",["^E",["^33",["^E",[["~$fn-obj","^1E","^5O","^52","~$prefix"]]]]]],"^F","~$devtools.formatters.markup/<function-details>","^6","devtools/formatters/markup.cljs","^:",25,"^36",["^E",[["^6B","^1E","^5O","^52","^6C"]]],"^37",null,"^38",["^E",[null,null]],"^8",1,"^39",false,"^7",215,"^3:","^3;","^9",215,"^3<",5,"^3=",true,"^D",["^E",["^33",["^E",[["^6B","^1E","^5O","^52","^6C"]]]]]],"~$<function>",["^ ","^32",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",232,"^8",7,"^9",232,"^:",17,"^D",["^E",["^33",["^E",[["^6B"]]]]]],"^F","~$devtools.formatters.markup/<function>","^6","devtools/formatters/markup.cljs","^:",17,"^36",["^E",[["^6B"]]],"^37",null,"^38",["^E",[null,null]],"^8",1,"^39",false,"^7",232,"^3:","^3H","^9",232,"^3<",1,"^3=",true,"^D",["^E",["^33",["^E",[["^6B"]]]]]],"~$<arities>",["^ ","^32",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",226,"^8",7,"^9",226,"^:",16,"^D",["^E",["^33",["^E",[["^52"]]]]]],"^F","~$devtools.formatters.markup/<arities>","^6","devtools/formatters/markup.cljs","^:",16,"^36",["^E",[["^52"]]],"^37",null,"^38",["^E",[null,null]],"^8",1,"^39",false,"^7",226,"^3:","^3;","^9",226,"^3<",1,"^3=",true,"^D",["^E",["^33",["^E",[["^52"]]]]]],"~$<header-expander>",["^ ","^32",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",60,"^8",7,"^9",60,"^:",24,"^D",["^E",["^33",["^E",[["^3?"]]]]]],"^F","~$devtools.formatters.markup/<header-expander>","^6","devtools/formatters/markup.cljs","^:",24,"^36",["^E",[["^3?"]]],"^37",null,"^38",["^E",[null,null]],"^8",1,"^39",false,"^7",60,"^3:","^3H","^9",60,"^3<",1,"^3=",true,"^D",["^E",["^33",["^E",[["^3?"]]]]]],"~$<list-details>",["^ ","^32",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",178,"^8",7,"^9",178,"^:",21,"^D",["^E",["^33",["^E",[["^5R","~$_opts"]]]]]],"^F","~$devtools.formatters.markup/<list-details>","^6","devtools/formatters/markup.cljs","^:",21,"^36",["^E",[["^5R","^6L"]]],"^37",null,"^38",["^E",[null,null]],"^8",1,"^39",false,"^7",178,"^3:","^3;","^9",178,"^3<",2,"^3=",true,"^D",["^E",["^33",["^E",[["^5R","^6L"]]]]]],"~$<circular-reference>",["^ ","^32",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",53,"^8",7,"^9",53,"^:",27,"^D",["^E",["^33",["^E",[["~$&","^55"]]]]],"^3C",["^ ","^39",true,"^3D",0,"^3<",0,"^36",[["^E",["^55"]]],"^D",["^E",[["~$&","^55"]]],"^38",["^E",[null]]]],"^F","~$devtools.formatters.markup/<circular-reference>","^6","devtools/formatters/markup.cljs","^:",27,"^3C",["^ ","^39",true,"^3D",0,"^3<",0,"^36",[["^E",["^55"]]],"^D",["^E",[["~$&","^55"]]],"^38",["^E",[null]]],"^36",[["^E",["^55"]]],"^37",null,"^3D",0,"^38",["^E",[null]],"^8",1,"^39",true,"^3F",[["^ ","^3D",0,"^39",true,"^3G","^3H"]],"^7",53,"^3:","^3I","^9",53,"^3<",0,"^3=",true,"^D",["^E",[["~$&","^55"]]]],"~$<surrogate-target>",["^ ","^32",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",407,"^8",7,"^9",407,"^:",25,"^D",["^E",["^33",["^E",[["^3W"]]]]]],"^F","~$devtools.formatters.markup/<surrogate-target>","^6","devtools/formatters/markup.cljs","^:",25,"^36",["^E",[["^3W"]]],"^37",null,"^38",["^E",[null,null]],"^8",1,"^39",false,"^7",407,"^3:","^40","^9",407,"^3<",1,"^3=",true,"^D",["^E",["^33",["^E",[["^3W"]]]]]],"~$body-line",["^ ","^32",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",141,"^8",8,"^9",141,"^:",17,"~:private",true,"^D",["^E",["^33",["^E",[["~$index","^3N"]]]]]],"^6S",true,"^F","~$devtools.formatters.markup/body-line","^6","devtools/formatters/markup.cljs","^:",17,"^36",["^E",[["^6T","^3N"]]],"^37",null,"^38",["^E",[null,null]],"^8",1,"^39",false,"^7",141,"^3:","^3;","^9",141,"^3<",2,"^3=",true,"^D",["^E",["^33",["^E",[["^6T","^3N"]]]]]],"~$body-lines",["^ ","^32",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",155,"^8",8,"^9",155,"^:",18,"^6S",true,"^D",["^E",["^33",["^E",[["^3N","^3Z"]]]]]],"^6S",true,"^F","~$devtools.formatters.markup/body-lines","^6","devtools/formatters/markup.cljs","^:",18,"^36",["^E",[["^3N","^3Z"]]],"^37",null,"^38",["^E",[null,null]],"^8",1,"^39",false,"^7",155,"^3:",["^B",["^40","^3;"]],"^9",155,"^3<",2,"^3=",true,"^D",["^E",["^33",["^E",[["^3N","^3Z"]]]]]],"~$<fields>",["^ ","^32",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",356,"^8",7,"^9",356,"^:",15,"^D",["^E",["^33",["^E",[["^4;","~$&",["~$max-fields"]]]]]],"^3C",["^ ","^39",true,"^3D",1,"^3<",1,"^36",[["^E",["^4;",["^6Y"]]]],"^D",["^E",[["^4;","~$&",["^6Y"]]]],"^38",["^E",[null]]]],"^F","~$devtools.formatters.markup/<fields>","^6","devtools/formatters/markup.cljs","^:",15,"^3C",["^ ","^39",true,"^3D",1,"^3<",1,"^36",[["^E",["^4;",["^6Y"]]]],"^D",["^E",[["^4;","~$&",["^6Y"]]]],"^38",["^E",[null]]],"^36",[["^E",["^4;",["^6Y"]]]],"^37",null,"^3D",1,"^38",["^E",[null]],"^8",1,"^39",true,"^3F",[["^ ","^3D",1,"^39",true,"^3G","^40"]],"^7",356,"^3:","^3I","^9",356,"^3<",1,"^3=",true,"^D",["^E",[["^4;","~$&",["^6Y"]]]]],"~$<nil>",["^ ","^32",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",68,"^8",7,"^9",68,"^:",12,"^D",["^E",["^33",["^E",[[]]]]]],"^F","~$devtools.formatters.markup/<nil>","^6","devtools/formatters/markup.cljs","^:",12,"^36",["^E",[[]]],"^37",null,"^38",["^E",[null,null]],"^8",1,"^39",false,"^7",68,"^3:","^3;","^9",68,"^3<",0,"^3=",true,"^D",["^E",["^33",["^E",[[]]]]]],"~$<body>",["^ ","^32",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",114,"^8",7,"^9",114,"^:",13,"^D",["^E",["^33",["^E",[["~$markup"]]]]]],"^F","~$devtools.formatters.markup/<body>","^6","devtools/formatters/markup.cljs","^:",13,"^36",["^E",[["^72"]]],"^37",null,"^38",["^E",[null,null]],"^8",1,"^39",false,"^7",114,"^3:","^3;","^9",114,"^3<",1,"^3=",true,"^D",["^E",["^33",["^E",[["^72"]]]]]],"~$<number>",["^ ","^32",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",81,"^8",7,"^9",81,"^:",15,"^D",["^E",["^33",["^E",[["~$number"]]]]]],"^F","~$devtools.formatters.markup/<number>","^6","devtools/formatters/markup.cljs","^:",15,"^36",["^E",[["^75"]]],"^37",null,"^38",["^E",[null,null]],"^8",1,"^39",false,"^7",81,"^3:","^3;","^9",81,"^3<",1,"^3=",true,"^D",["^E",["^33",["^E",[["^75"]]]]]],"~$<protocol-details>",["^ ","^32",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",305,"^8",7,"^9",305,"^:",25,"^D",["^E",["^33",["^E",[["^4<","^1E","^5O","~$selector","~$_fast?"]]]]]],"^F","~$devtools.formatters.markup/<protocol-details>","^6","devtools/formatters/markup.cljs","^:",25,"^36",["^E",[["^4<","^1E","^5O","^78","^79"]]],"^37",null,"^38",["^E",[null,null]],"^8",1,"^39",false,"^7",305,"^3:","^3;","^9",305,"^3<",5,"^3=",true,"^D",["^E",["^33",["^E",[["^4<","^1E","^5O","^78","^79"]]]]]],"~$prepare-body-lines",["^ ","^32",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",147,"^8",8,"^9",147,"^:",26,"^6S",true,"^D",["^E",["^33",["^E",[["~$data","^3Z"]]]]]],"^6S",true,"^F","~$devtools.formatters.markup/prepare-body-lines","^6","devtools/formatters/markup.cljs","^:",26,"^36",["^E",[["^7<","^3Z"]]],"^37",null,"^38",["^E",[null,null]],"^8",1,"^39",false,"^7",147,"^3:",["^B",["^40","^3;"]],"^9",147,"^3<",2,"^3=",true,"^D",["^E",["^33",["^E",[["^7<","^3Z"]]]]]]],"^W",["^ ","^@","^@","^S","^S","^Q","^Q","^R","^Q"],"~:cljs.analyzer/constants",["^ ","^U",["^B",["~:protocol-method-arities-header-close-symbol","~:protocol-details","~:max-number-body-items","~:meta-reference-tag","~:instance-custom-printing-tag","~:type-header-background","~:body-field-symbol","~:body-items-more-tag","~:line-index-separator","~:new-line-string-replacer","~:selector","~:more-fields-symbol","~:body-field-value-spacer","~:standard-body","~:protocol-background","~:protocols-icon","~:standalone-type","~:standard-ol-no-margin-tag","~:symbol-tag","~:render-keywords","~:fn-header-tag","~:keyword-tag","~:protocol-method-arities","~:surrogate","~:fields-header-tag","^5","~:aligned-body","~:body-items-more-label","~:nil-tag","~:index","~:instance","~:float-tag","~:protocol-ns-name-tag","~:protocol-method","~:protocol-method-arities-details","~:protocol-method-arities-more-symbol","~:number","~:index-tag","~:rest-symbol","~:protocol","~:protocols-list-close-symbol","~:protocol-name-tag","~:protocol-method-arity","~:more-protocols","~:instance-header-background","~:body-tag","~:cljs-land-tag","~:max-list-protocols","~:string-abbreviation-marker","~:native-icon","~:instance-body-fields-table-tag","~:render-symbols","^H","~:symbol","~:fields-details-row","^F","~:type-name-tag","~:list-separator","~:header-field-value-spacer","~:fast-protocol-tag","~:render-strings","~:standalone-type-tag","~:type-header-tag","~:lambda-icon","~:render-functions","~:fields-header-open-symbol","~:fields","~:type-details","~:fn-name-tag","~:protocols-list","~:header-field-value-tag","~:fields-icon","~:type-wrapper-tag","~:field","~:type","~:standard-li-tag","~:type-basis-item","~:render-bools","~:dq","~:fields-header-no-fields-symbol","~:nil-label","~:meta-wrapper","~:protocols-list-open-symbol","~:list-open-symbol","~:raw-surrogate","~:header-field-separator","~:function-details","~:body-field-td3-tag","~:string","~:surrogate-header","~:more-symbol","~:native-reference","~:header","~:string-tag","~:meta-wrapper-tag","~:method-icon","~:function","~:max-protocol-method-arities-list","~:reference-surrogate","~:header-protocol-separator","~:basis-icon","~:surrogate-body","~:fn-args-tag","~:bool-tag","~:expandable-inner-tag","~:fn-prefix-tag","~:type-basis-item-tag","~:fn-ns-name-tag","~:header-tag","~:body-field-name-tag","~:open-symbol","~:protocol-method-arities-header-open-symbol","~:expanded-string-tag","~:protocol-more-tag","~:reference","~:meta-body-tag","~:instance-custom-printing-background","~:preview","~:fast?","~:native-reference-background","~:details","~:instance-type-header-tag","~:list","~:keyword","~:spacer","~:body-field-tr-tag","~:surrogate-target","~:header-field-name-tag","~:standard-li-no-margin-tag","~:list-tag","~:body-field-td1-tag","~:nil","~:render-types","~:string-postfix-limit","~:protocol-method-arities-list-header-separator","~:protocol-method-tag","~:fields-details","~:list-close-symbol","~:render-numbers","~:circular-reference","~:expandable","~:body-field-value-tag","~:empty-basis-symbol","~:list-details","~:fn-icon","~:integer-tag","~:type-basis-item-separator","~:protocols-header-tag","~:protocol-method-name-tag","~:item-tag","~:instance-value-tag","~:circular-ref-icon","~:standard-ol-tag","~:standard-body-reference","^3G","~:circular-reference-body-tag","~:bool","~:native-reference-tag","~:target","~:type-basis","~:aligned-li-tag","~:render-instances","~:expandable-symbol","~:fn-multi-arity-args-indent-tag","~:expandable-tag","~:protocol-method-arities-header-tag","~:max-instance-header-fields","~:arities","~:type-ref-tag","~:max-print-level","~:multi-arity-symbol","~:render-nils","~:meta-header-tag","~:body","~:separator","~:slow-protocol-tag","~:header-field-tag","~:native-reference-wrapper-tag","~:fields-header-close-symbol","~:string-prefix-limit","~:instance-custom-printing-wrapper-tag","~:body-field-td2-tag","~:atomic","~:type-basis-tag","~:close-symbol","~:type-symbol","~:instance-header-tag","~:header-expander","~:ns-icon","~:body-line-max-print-level","~:circular-reference-tag","~:header-expander-symbol","~:cljs-land"]],"~:order~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^1X",[["^;O","~:static-fns"],true,["^;O","~:elide-asserts"],false,["^;O","~:optimize-constants"],null,["^;O","^1O"],null,["^;O","~:external-config"],null,["^;O","~:tooling-config"],null,["^;O","~:emit-constants"],null,["^;O","~:load-tests"],null,["^;O","~:infer-externs"],true,["^;O","^1Q"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^;O","~:fn-invoke-direct"],null,["^;O","~:source-map"],"/dev/null"]]]