["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/wrappy/wrappy.js"],"~:js","shadow$provide.module$node_modules$wrappy$wrappy=function(global,require,module,exports){function wrappy(fn,cb$jscomp$0){function wrapper(){for(var args=Array(arguments.length),i=0;i<args.length;i++)args[i]=arguments[i];var ret=fn.apply(this,args),cb=args[args.length-1];\"function\"===typeof ret&&ret!==cb&&Object.keys(cb).forEach(function(k){ret[k]=cb[k]});return ret}if(fn&&cb$jscomp$0)return wrappy(fn)(cb$jscomp$0);if(\"function\"!==typeof fn)throw new TypeError(\"need wrapper function\");Object.keys(fn).forEach(function(k){wrapper[k]=\nfn[k]});return wrapper}module.exports=wrappy}","~:source","shadow$provide[\"module$node_modules$wrappy$wrappy\"] = function(global,require,module,exports) {\n// Returns a wrapper function that returns a wrapped callback\n// The wrapper function should do some stuff, and return a\n// presumably different callback function.\n// This makes sure that own properties are retained, so that\n// decorations and such are not lost along the way.\nmodule.exports = wrappy\nfunction wrappy (fn, cb) {\n  if (fn && cb) return wrappy(fn)(cb)\n\n  if (typeof fn !== 'function')\n    throw new TypeError('need wrapper function')\n\n  Object.keys(fn).forEach(function (k) {\n    wrapper[k] = fn[k]\n  })\n\n  return wrapper\n\n  function wrapper() {\n    var args = new Array(arguments.length)\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i]\n    }\n    var ret = fn.apply(this, args)\n    var cb = args[args.length-1]\n    if (typeof ret === 'function' && ret !== cb) {\n      Object.keys(cb).forEach(function (k) {\n        ret[k] = cb[k]\n      })\n    }\n    return ret\n  }\n}\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",[]],"~:compiled-at",1562407149196,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$wrappy$wrappy.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,kCAAA,CAAsD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAO9FC,QAASA,OAAO,CAACC,EAAD,CAAKC,WAAL,CAAS,CAYvBC,QAASA,QAAO,EAAG,CAEjB,IADA,IAAIC,KAAWC,KAAJ,CAAUC,SAAAC,OAAV,CAAX,CACSC,EAAI,CAAb,CAAgBA,CAAhB,CAAoBJ,IAAAG,OAApB,CAAiCC,CAAA,EAAjC,CACEJ,IAAA,CAAKI,CAAL,CAAA,CAAUF,SAAA,CAAUE,CAAV,CAEZ,KAAIC,IAAMR,EAAAS,MAAA,CAAS,IAAT,CAAeN,IAAf,CAAV,CACIF,GAAKE,IAAA,CAAKA,IAAAG,OAAL,CAAiB,CAAjB,CACU,WAAnB,GAAI,MAAOE,IAAX,EAAiCA,GAAjC,GAAyCP,EAAzC,EACES,MAAAC,KAAA,CAAYV,EAAZ,CAAAW,QAAA,CAAwB,QAAS,CAACC,CAAD,CAAI,CACnCL,GAAA,CAAIK,CAAJ,CAAA,CAASZ,EAAA,CAAGY,CAAH,CAD0B,CAArC,CAIF,OAAOL,IAZU,CAXnB,GAAIR,EAAJ,EAAUC,WAAV,CAAc,MAAOF,OAAA,CAAOC,EAAP,CAAA,CAAWC,WAAX,CAErB,IAAkB,UAAlB,GAAI,MAAOD,GAAX,CACE,KAAM,KAAIc,SAAJ,CAAc,uBAAd,CAAN,CAEFJ,MAAAC,KAAA,CAAYX,EAAZ,CAAAY,QAAA,CAAwB,QAAS,CAACC,CAAD,CAAI,CACnCX,OAAA,CAAQW,CAAR,CAAA;AAAab,EAAA,CAAGa,CAAH,CADsB,CAArC,CAIA,OAAOX,QAVgB,CADzBL,MAAAC,QAAA,CAAiBC,MAN6E;\",\n\"sources\":[\"node_modules/wrappy/wrappy.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$wrappy$wrappy\\\"] = function(global,require,module,exports) {\\n// Returns a wrapper function that returns a wrapped callback\\n// The wrapper function should do some stuff, and return a\\n// presumably different callback function.\\n// This makes sure that own properties are retained, so that\\n// decorations and such are not lost along the way.\\nmodule.exports = wrappy\\nfunction wrappy (fn, cb) {\\n  if (fn && cb) return wrappy(fn)(cb)\\n\\n  if (typeof fn !== 'function')\\n    throw new TypeError('need wrapper function')\\n\\n  Object.keys(fn).forEach(function (k) {\\n    wrapper[k] = fn[k]\\n  })\\n\\n  return wrapper\\n\\n  function wrapper() {\\n    var args = new Array(arguments.length)\\n    for (var i = 0; i < args.length; i++) {\\n      args[i] = arguments[i]\\n    }\\n    var ret = fn.apply(this, args)\\n    var cb = args[args.length-1]\\n    if (typeof ret === 'function' && ret !== cb) {\\n      Object.keys(cb).forEach(function (k) {\\n        ret[k] = cb[k]\\n      })\\n    }\\n    return ret\\n  }\\n}\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"wrappy\",\"fn\",\"cb\",\"wrapper\",\"args\",\"Array\",\"arguments\",\"length\",\"i\",\"ret\",\"apply\",\"Object\",\"keys\",\"forEach\",\"k\",\"TypeError\"]\n}\n"]