["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/glob/common.js"],"~:js","shadow$provide.module$node_modules$glob$common=function(global,require,module,exports){function ownProp(obj,field){return Object.prototype.hasOwnProperty.call(obj,field)}function alphasorti(a,b){return a.toLowerCase().localeCompare(b.toLowerCase())}function alphasort(a,b){return a.localeCompare(b)}function ignoreMap(pattern){var gmatcher=null;\"/**\"===pattern.slice(-3)&&(gmatcher=pattern.replace(/(\\/\\*\\*)+$/,\"\"),gmatcher=new Minimatch(gmatcher,{dot:!0}));return{matcher:new Minimatch(pattern,{dot:!0}),\ngmatcher:gmatcher}}function makeAbs(self,f){self=\"/\"===f.charAt(0)?path$jscomp$0.join(self.root,f):isAbsolute(f)||\"\"===f?f:self.changedCwd?path$jscomp$0.resolve(self.cwd,f):path$jscomp$0.resolve(f);\"win32\"===process.platform&&(self=self.replace(/\\\\/g,\"/\"));return self}function isIgnored(self,path){return self.ignore.length?self.ignore.some(function(item){return item.matcher.match(path)||!(!item.gmatcher||!item.gmatcher.match(path))}):!1}var process=require(\"module$node_modules$process$browser\");exports.alphasort=\nalphasort;exports.alphasorti=alphasorti;exports.setopts=function(self,pattern,options){options||(options={});if(options.matchBase&&-1===pattern.indexOf(\"/\")){if(options.noglobstar)throw Error(\"base matching requires globstar\");pattern=\"**/\"+pattern}self.silent=!!options.silent;self.pattern=pattern;self.strict=!1!==options.strict;self.realpath=!!options.realpath;self.realpathCache=options.realpathCache||Object.create(null);self.follow=!!options.follow;self.dot=!!options.dot;self.mark=!!options.mark;\nself.nodir=!!options.nodir;self.nodir&&(self.mark=!0);self.sync=!!options.sync;self.nounique=!!options.nounique;self.nonull=!!options.nonull;self.nosort=!!options.nosort;self.nocase=!!options.nocase;self.stat=!!options.stat;self.noprocess=!!options.noprocess;self.absolute=!!options.absolute;self.maxLength=options.maxLength||Infinity;self.cache=options.cache||Object.create(null);self.statCache=options.statCache||Object.create(null);self.symlinks=options.symlinks||Object.create(null);self.ignore=options.ignore||\n[];Array.isArray(self.ignore)||(self.ignore=[self.ignore]);self.ignore.length&&(self.ignore=self.ignore.map(ignoreMap));self.changedCwd=!1;var cwd=process.cwd();ownProp(options,\"cwd\")?(self.cwd=path$jscomp$0.resolve(options.cwd),self.changedCwd=self.cwd!==cwd):self.cwd=cwd;self.root=options.root||path$jscomp$0.resolve(self.cwd,\"/\");self.root=path$jscomp$0.resolve(self.root);\"win32\"===process.platform&&(self.root=self.root.replace(/\\\\/g,\"/\"));self.cwdAbs=isAbsolute(self.cwd)?self.cwd:makeAbs(self,\nself.cwd);\"win32\"===process.platform&&(self.cwdAbs=self.cwdAbs.replace(/\\\\/g,\"/\"));self.nomount=!!options.nomount;options.nonegate=!0;options.nocomment=!0;self.minimatch=new Minimatch(pattern,options);self.options=self.minimatch.options};exports.ownProp=ownProp;exports.makeAbs=makeAbs;exports.finish=function(self){for(var nou=self.nounique,all=nou?[]:Object.create(null),i=0,l=self.matches.length;i<l;i++){var matches=self.matches[i];matches&&0!==Object.keys(matches).length?(matches=Object.keys(matches),\nnou?all.push.apply(all,matches):matches.forEach(function(m){all[m]=!0})):self.nonull&&(matches=self.minimatch.globSet[i],nou?all.push(matches):all[matches]=!0)}nou||(all=Object.keys(all));self.nosort||(all=all.sort(self.nocase?alphasorti:alphasort));if(self.mark){for(i=0;i<all.length;i++)all[i]=self._mark(all[i]);self.nodir&&(all=all.filter(function(e){var notDir=!/\\/$/.test(e);e=self.cache[e]||self.cache[makeAbs(self,e)];notDir&&e&&(notDir=\"DIR\"!==e&&!Array.isArray(e));return notDir}))}self.ignore.length&&\n(all=all.filter(function(m){return!isIgnored(self,m)}));self.found=all};exports.mark=function(self,p){var abs=makeAbs(self,p),c=self.cache[abs],m=p;if(c){c=\"DIR\"===c||Array.isArray(c);var slash=\"/\"===p.slice(-1);c&&!slash?m+=\"/\":!c&&slash&&(m=m.slice(0,-1));m!==p&&(p=makeAbs(self,m),self.statCache[p]=self.statCache[abs],self.cache[p]=self.cache[abs])}return m};exports.isIgnored=isIgnored;exports.childrenIgnored=function(self,path){return self.ignore.length?self.ignore.some(function(item){return!(!item.gmatcher||\n!item.gmatcher.match(path))}):!1};var path$jscomp$0=require(\"module$node_modules$path_browserify$index\");global=require(\"module$node_modules$minimatch$minimatch\");var isAbsolute=require(\"module$node_modules$path_is_absolute$index\"),Minimatch=global.Minimatch}","~:source","shadow$provide[\"module$node_modules$glob$common\"] = function(global,require,module,exports) {\nvar process = require('process');\nexports.alphasort = alphasort\nexports.alphasorti = alphasorti\nexports.setopts = setopts\nexports.ownProp = ownProp\nexports.makeAbs = makeAbs\nexports.finish = finish\nexports.mark = mark\nexports.isIgnored = isIgnored\nexports.childrenIgnored = childrenIgnored\n\nfunction ownProp (obj, field) {\n  return Object.prototype.hasOwnProperty.call(obj, field)\n}\n\nvar path = require(\"path\")\nvar minimatch = require(\"minimatch\")\nvar isAbsolute = require(\"path-is-absolute\")\nvar Minimatch = minimatch.Minimatch\n\nfunction alphasorti (a, b) {\n  return a.toLowerCase().localeCompare(b.toLowerCase())\n}\n\nfunction alphasort (a, b) {\n  return a.localeCompare(b)\n}\n\nfunction setupIgnores (self, options) {\n  self.ignore = options.ignore || []\n\n  if (!Array.isArray(self.ignore))\n    self.ignore = [self.ignore]\n\n  if (self.ignore.length) {\n    self.ignore = self.ignore.map(ignoreMap)\n  }\n}\n\n// ignore patterns are always in dot:true mode.\nfunction ignoreMap (pattern) {\n  var gmatcher = null\n  if (pattern.slice(-3) === '/**') {\n    var gpattern = pattern.replace(/(\\/\\*\\*)+$/, '')\n    gmatcher = new Minimatch(gpattern, { dot: true })\n  }\n\n  return {\n    matcher: new Minimatch(pattern, { dot: true }),\n    gmatcher: gmatcher\n  }\n}\n\nfunction setopts (self, pattern, options) {\n  if (!options)\n    options = {}\n\n  // base-matching: just use globstar for that.\n  if (options.matchBase && -1 === pattern.indexOf(\"/\")) {\n    if (options.noglobstar) {\n      throw new Error(\"base matching requires globstar\")\n    }\n    pattern = \"**/\" + pattern\n  }\n\n  self.silent = !!options.silent\n  self.pattern = pattern\n  self.strict = options.strict !== false\n  self.realpath = !!options.realpath\n  self.realpathCache = options.realpathCache || Object.create(null)\n  self.follow = !!options.follow\n  self.dot = !!options.dot\n  self.mark = !!options.mark\n  self.nodir = !!options.nodir\n  if (self.nodir)\n    self.mark = true\n  self.sync = !!options.sync\n  self.nounique = !!options.nounique\n  self.nonull = !!options.nonull\n  self.nosort = !!options.nosort\n  self.nocase = !!options.nocase\n  self.stat = !!options.stat\n  self.noprocess = !!options.noprocess\n  self.absolute = !!options.absolute\n\n  self.maxLength = options.maxLength || Infinity\n  self.cache = options.cache || Object.create(null)\n  self.statCache = options.statCache || Object.create(null)\n  self.symlinks = options.symlinks || Object.create(null)\n\n  setupIgnores(self, options)\n\n  self.changedCwd = false\n  var cwd = process.cwd()\n  if (!ownProp(options, \"cwd\"))\n    self.cwd = cwd\n  else {\n    self.cwd = path.resolve(options.cwd)\n    self.changedCwd = self.cwd !== cwd\n  }\n\n  self.root = options.root || path.resolve(self.cwd, \"/\")\n  self.root = path.resolve(self.root)\n  if (process.platform === \"win32\")\n    self.root = self.root.replace(/\\\\/g, \"/\")\n\n  // TODO: is an absolute `cwd` supposed to be resolved against `root`?\n  // e.g. { cwd: '/test', root: __dirname } === path.join(__dirname, '/test')\n  self.cwdAbs = isAbsolute(self.cwd) ? self.cwd : makeAbs(self, self.cwd)\n  if (process.platform === \"win32\")\n    self.cwdAbs = self.cwdAbs.replace(/\\\\/g, \"/\")\n  self.nomount = !!options.nomount\n\n  // disable comments and negation in Minimatch.\n  // Note that they are not supported in Glob itself anyway.\n  options.nonegate = true\n  options.nocomment = true\n\n  self.minimatch = new Minimatch(pattern, options)\n  self.options = self.minimatch.options\n}\n\nfunction finish (self) {\n  var nou = self.nounique\n  var all = nou ? [] : Object.create(null)\n\n  for (var i = 0, l = self.matches.length; i < l; i ++) {\n    var matches = self.matches[i]\n    if (!matches || Object.keys(matches).length === 0) {\n      if (self.nonull) {\n        // do like the shell, and spit out the literal glob\n        var literal = self.minimatch.globSet[i]\n        if (nou)\n          all.push(literal)\n        else\n          all[literal] = true\n      }\n    } else {\n      // had matches\n      var m = Object.keys(matches)\n      if (nou)\n        all.push.apply(all, m)\n      else\n        m.forEach(function (m) {\n          all[m] = true\n        })\n    }\n  }\n\n  if (!nou)\n    all = Object.keys(all)\n\n  if (!self.nosort)\n    all = all.sort(self.nocase ? alphasorti : alphasort)\n\n  // at *some* point we statted all of these\n  if (self.mark) {\n    for (var i = 0; i < all.length; i++) {\n      all[i] = self._mark(all[i])\n    }\n    if (self.nodir) {\n      all = all.filter(function (e) {\n        var notDir = !(/\\/$/.test(e))\n        var c = self.cache[e] || self.cache[makeAbs(self, e)]\n        if (notDir && c)\n          notDir = c !== 'DIR' && !Array.isArray(c)\n        return notDir\n      })\n    }\n  }\n\n  if (self.ignore.length)\n    all = all.filter(function(m) {\n      return !isIgnored(self, m)\n    })\n\n  self.found = all\n}\n\nfunction mark (self, p) {\n  var abs = makeAbs(self, p)\n  var c = self.cache[abs]\n  var m = p\n  if (c) {\n    var isDir = c === 'DIR' || Array.isArray(c)\n    var slash = p.slice(-1) === '/'\n\n    if (isDir && !slash)\n      m += '/'\n    else if (!isDir && slash)\n      m = m.slice(0, -1)\n\n    if (m !== p) {\n      var mabs = makeAbs(self, m)\n      self.statCache[mabs] = self.statCache[abs]\n      self.cache[mabs] = self.cache[abs]\n    }\n  }\n\n  return m\n}\n\n// lotta situps...\nfunction makeAbs (self, f) {\n  var abs = f\n  if (f.charAt(0) === '/') {\n    abs = path.join(self.root, f)\n  } else if (isAbsolute(f) || f === '') {\n    abs = f\n  } else if (self.changedCwd) {\n    abs = path.resolve(self.cwd, f)\n  } else {\n    abs = path.resolve(f)\n  }\n\n  if (process.platform === 'win32')\n    abs = abs.replace(/\\\\/g, '/')\n\n  return abs\n}\n\n\n// Return true, if pattern ends with globstar '**', for the accompanying parent directory.\n// Ex:- If node_modules/** is the pattern, add 'node_modules' to ignore list along with it's contents\nfunction isIgnored (self, path) {\n  if (!self.ignore.length)\n    return false\n\n  return self.ignore.some(function(item) {\n    return item.matcher.match(path) || !!(item.gmatcher && item.gmatcher.match(path))\n  })\n}\n\nfunction childrenIgnored (self, path) {\n  if (!self.ignore.length)\n    return false\n\n  return self.ignore.some(function(item) {\n    return !!(item.gmatcher && item.gmatcher.match(path))\n  })\n}\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$process$browser","~$shadow.js","~$module$node_modules$path_browserify$index","~$module$node_modules$minimatch$minimatch","~$module$node_modules$path_is_absolute$index"]],"~:properties",["^5",["ignore","alphasorti","nocomment","nodir","silent","childrenIgnored","statCache","realpathCache","cwdAbs","symlinks","dot","nounique","nonegate","found","stat","ownProp","root","gmatcher","nosort","cwd","cache","maxLength","nomount","sync","setopts","realpath","finish","alphasort","changedCwd","makeAbs","nocase","pattern","minimatch","nonull","strict","follow","mark","options","isIgnored","noprocess","absolute","matcher"]],"~:compiled-at",1562407149195,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$glob$common.js\",\n\"lineCount\":9,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/glob/common.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$glob$common\\\"] = function(global,require,module,exports) {\\nvar process = require('process');\\nexports.alphasort = alphasort\\nexports.alphasorti = alphasorti\\nexports.setopts = setopts\\nexports.ownProp = ownProp\\nexports.makeAbs = makeAbs\\nexports.finish = finish\\nexports.mark = mark\\nexports.isIgnored = isIgnored\\nexports.childrenIgnored = childrenIgnored\\n\\nfunction ownProp (obj, field) {\\n  return Object.prototype.hasOwnProperty.call(obj, field)\\n}\\n\\nvar path = require(\\\"path\\\")\\nvar minimatch = require(\\\"minimatch\\\")\\nvar isAbsolute = require(\\\"path-is-absolute\\\")\\nvar Minimatch = minimatch.Minimatch\\n\\nfunction alphasorti (a, b) {\\n  return a.toLowerCase().localeCompare(b.toLowerCase())\\n}\\n\\nfunction alphasort (a, b) {\\n  return a.localeCompare(b)\\n}\\n\\nfunction setupIgnores (self, options) {\\n  self.ignore = options.ignore || []\\n\\n  if (!Array.isArray(self.ignore))\\n    self.ignore = [self.ignore]\\n\\n  if (self.ignore.length) {\\n    self.ignore = self.ignore.map(ignoreMap)\\n  }\\n}\\n\\n// ignore patterns are always in dot:true mode.\\nfunction ignoreMap (pattern) {\\n  var gmatcher = null\\n  if (pattern.slice(-3) === '/**') {\\n    var gpattern = pattern.replace(/(\\\\/\\\\*\\\\*)+$/, '')\\n    gmatcher = new Minimatch(gpattern, { dot: true })\\n  }\\n\\n  return {\\n    matcher: new Minimatch(pattern, { dot: true }),\\n    gmatcher: gmatcher\\n  }\\n}\\n\\nfunction setopts (self, pattern, options) {\\n  if (!options)\\n    options = {}\\n\\n  // base-matching: just use globstar for that.\\n  if (options.matchBase && -1 === pattern.indexOf(\\\"/\\\")) {\\n    if (options.noglobstar) {\\n      throw new Error(\\\"base matching requires globstar\\\")\\n    }\\n    pattern = \\\"**/\\\" + pattern\\n  }\\n\\n  self.silent = !!options.silent\\n  self.pattern = pattern\\n  self.strict = options.strict !== false\\n  self.realpath = !!options.realpath\\n  self.realpathCache = options.realpathCache || Object.create(null)\\n  self.follow = !!options.follow\\n  self.dot = !!options.dot\\n  self.mark = !!options.mark\\n  self.nodir = !!options.nodir\\n  if (self.nodir)\\n    self.mark = true\\n  self.sync = !!options.sync\\n  self.nounique = !!options.nounique\\n  self.nonull = !!options.nonull\\n  self.nosort = !!options.nosort\\n  self.nocase = !!options.nocase\\n  self.stat = !!options.stat\\n  self.noprocess = !!options.noprocess\\n  self.absolute = !!options.absolute\\n\\n  self.maxLength = options.maxLength || Infinity\\n  self.cache = options.cache || Object.create(null)\\n  self.statCache = options.statCache || Object.create(null)\\n  self.symlinks = options.symlinks || Object.create(null)\\n\\n  setupIgnores(self, options)\\n\\n  self.changedCwd = false\\n  var cwd = process.cwd()\\n  if (!ownProp(options, \\\"cwd\\\"))\\n    self.cwd = cwd\\n  else {\\n    self.cwd = path.resolve(options.cwd)\\n    self.changedCwd = self.cwd !== cwd\\n  }\\n\\n  self.root = options.root || path.resolve(self.cwd, \\\"/\\\")\\n  self.root = path.resolve(self.root)\\n  if (process.platform === \\\"win32\\\")\\n    self.root = self.root.replace(/\\\\\\\\/g, \\\"/\\\")\\n\\n  // TODO: is an absolute `cwd` supposed to be resolved against `root`?\\n  // e.g. { cwd: '/test', root: __dirname } === path.join(__dirname, '/test')\\n  self.cwdAbs = isAbsolute(self.cwd) ? self.cwd : makeAbs(self, self.cwd)\\n  if (process.platform === \\\"win32\\\")\\n    self.cwdAbs = self.cwdAbs.replace(/\\\\\\\\/g, \\\"/\\\")\\n  self.nomount = !!options.nomount\\n\\n  // disable comments and negation in Minimatch.\\n  // Note that they are not supported in Glob itself anyway.\\n  options.nonegate = true\\n  options.nocomment = true\\n\\n  self.minimatch = new Minimatch(pattern, options)\\n  self.options = self.minimatch.options\\n}\\n\\nfunction finish (self) {\\n  var nou = self.nounique\\n  var all = nou ? [] : Object.create(null)\\n\\n  for (var i = 0, l = self.matches.length; i < l; i ++) {\\n    var matches = self.matches[i]\\n    if (!matches || Object.keys(matches).length === 0) {\\n      if (self.nonull) {\\n        // do like the shell, and spit out the literal glob\\n        var literal = self.minimatch.globSet[i]\\n        if (nou)\\n          all.push(literal)\\n        else\\n          all[literal] = true\\n      }\\n    } else {\\n      // had matches\\n      var m = Object.keys(matches)\\n      if (nou)\\n        all.push.apply(all, m)\\n      else\\n        m.forEach(function (m) {\\n          all[m] = true\\n        })\\n    }\\n  }\\n\\n  if (!nou)\\n    all = Object.keys(all)\\n\\n  if (!self.nosort)\\n    all = all.sort(self.nocase ? alphasorti : alphasort)\\n\\n  // at *some* point we statted all of these\\n  if (self.mark) {\\n    for (var i = 0; i < all.length; i++) {\\n      all[i] = self._mark(all[i])\\n    }\\n    if (self.nodir) {\\n      all = all.filter(function (e) {\\n        var notDir = !(/\\\\/$/.test(e))\\n        var c = self.cache[e] || self.cache[makeAbs(self, e)]\\n        if (notDir && c)\\n          notDir = c !== 'DIR' && !Array.isArray(c)\\n        return notDir\\n      })\\n    }\\n  }\\n\\n  if (self.ignore.length)\\n    all = all.filter(function(m) {\\n      return !isIgnored(self, m)\\n    })\\n\\n  self.found = all\\n}\\n\\nfunction mark (self, p) {\\n  var abs = makeAbs(self, p)\\n  var c = self.cache[abs]\\n  var m = p\\n  if (c) {\\n    var isDir = c === 'DIR' || Array.isArray(c)\\n    var slash = p.slice(-1) === '/'\\n\\n    if (isDir && !slash)\\n      m += '/'\\n    else if (!isDir && slash)\\n      m = m.slice(0, -1)\\n\\n    if (m !== p) {\\n      var mabs = makeAbs(self, m)\\n      self.statCache[mabs] = self.statCache[abs]\\n      self.cache[mabs] = self.cache[abs]\\n    }\\n  }\\n\\n  return m\\n}\\n\\n// lotta situps...\\nfunction makeAbs (self, f) {\\n  var abs = f\\n  if (f.charAt(0) === '/') {\\n    abs = path.join(self.root, f)\\n  } else if (isAbsolute(f) || f === '') {\\n    abs = f\\n  } else if (self.changedCwd) {\\n    abs = path.resolve(self.cwd, f)\\n  } else {\\n    abs = path.resolve(f)\\n  }\\n\\n  if (process.platform === 'win32')\\n    abs = abs.replace(/\\\\\\\\/g, '/')\\n\\n  return abs\\n}\\n\\n\\n// Return true, if pattern ends with globstar '**', for the accompanying parent directory.\\n// Ex:- If node_modules/** is the pattern, add 'node_modules' to ignore list along with it's contents\\nfunction isIgnored (self, path) {\\n  if (!self.ignore.length)\\n    return false\\n\\n  return self.ignore.some(function(item) {\\n    return item.matcher.match(path) || !!(item.gmatcher && item.gmatcher.match(path))\\n  })\\n}\\n\\nfunction childrenIgnored (self, path) {\\n  if (!self.ignore.length)\\n    return false\\n\\n  return self.ignore.some(function(item) {\\n    return !!(item.gmatcher && item.gmatcher.match(path))\\n  })\\n}\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"ownProp\",\"obj\",\"field\",\"Object\",\"prototype\",\"hasOwnProperty\",\"call\",\"alphasorti\",\"a\",\"b\",\"toLowerCase\",\"localeCompare\",\"alphasort\",\"ignoreMap\",\"pattern\",\"gmatcher\",\"slice\",\"gpattern\",\"replace\",\"Minimatch\",\"dot\",\"matcher\",\"makeAbs\",\"self\",\"f\",\"abs\",\"charAt\",\"path\",\"join\",\"root\",\"isAbsolute\",\"changedCwd\",\"resolve\",\"cwd\",\"process\",\"platform\",\"isIgnored\",\"ignore\",\"length\",\"some\",\"item\",\"match\",\"setopts\",\"options\",\"matchBase\",\"indexOf\",\"noglobstar\",\"Error\",\"silent\",\"strict\",\"realpath\",\"realpathCache\",\"create\",\"follow\",\"mark\",\"nodir\",\"sync\",\"nounique\",\"nonull\",\"nosort\",\"nocase\",\"stat\",\"noprocess\",\"absolute\",\"maxLength\",\"Infinity\",\"cache\",\"statCache\",\"symlinks\",\"Array\",\"isArray\",\"map\",\"cwdAbs\",\"nomount\",\"nonegate\",\"nocomment\",\"minimatch\",\"finish\",\"nou\",\"all\",\"i\",\"l\",\"matches\",\"keys\",\"m\",\"push\",\"apply\",\"forEach\",\"literal\",\"globSet\",\"sort\",\"_mark\",\"filter\",\"e\",\"notDir\",\"test\",\"c\",\"found\",\"p\",\"isDir\",\"slash\",\"mabs\",\"childrenIgnored\"]\n}\n"]